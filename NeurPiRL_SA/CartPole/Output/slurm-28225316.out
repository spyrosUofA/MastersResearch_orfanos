created virtual environment CPython3.8.10.final.0-64 in 34593ms
  creator CPython3Posix(dest=/localscratch/orfanos.28225316.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 0 else: act = 1) else: act = 1) 9.35
151.89 (if (obs[3] < (max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) * obs[2])) then: (if (1.6265990211615822 < -0.05002877715900189) then: act = 0 else: (if (1.500114374817345 < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * obs[1]) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 1 else: act = 1))
434.66 (if (obs[3] < (((1.6801307933742322 + obs[3]) * (1.0600023775460987 + -1.189051169094649)) * obs[1])) then: (if (-1.9937540924961812 < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: act = 0 else: (if (-0.08135632079776567 < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if (2.609435923393701 < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 1 else: act = 0) else: (if (obs[2] < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if (obs[2] < obs[3]) then: act = 0 else: (if (obs[3] < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: (if (-1.1809935772478999 < obs[3]) then: act = 1 else: act = 0) else: (if (-1.6746780031643473 < obs[1]) then: act = 1 else: act = 1))) else: (if (obs[1] < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 0 else: act = 0)))) else: (if ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * obs[1]) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 1 else: act = 1))
456.69 (if (obs[3] < (((1.004084413667025 + obs[2]) * (0.4588441866947694 + -0.625628592715993)) * obs[1])) then: (if (-2.0259630647035327 < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: act = 0 else: (if (obs[3] < (((-2.2437220099204422 * obs[3]) * ((obs[2] + -2.2140128601552567) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471))) + -1.9701415089729288)) then: act = 0 else: (if (obs[2] < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if (obs[2] < obs[3]) then: act = 0 else: (if (obs[3] < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: (if (-0.7301755467465598 < obs[3]) then: act = 1 else: act = 0) else: (if (-1.7069937570138154 < obs[1]) then: act = 1 else: act = 1))) else: (if (obs[1] < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 0 else: act = 0)))) else: (if ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * obs[1]) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 1 else: act = 1))
459.58 (if (obs[3] < (((1.004084413667025 + obs[2]) * (0.4588441866947694 + -0.625628592715993)) * obs[1])) then: (if (-2.0259630647035327 < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: act = 0 else: (if (obs[3] < (((-2.2437220099204422 * obs[3]) * ((obs[2] + -2.2140128601552567) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471))) + -1.9701415089729288)) then: act = 0 else: (if (obs[2] < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if (obs[2] < obs[3]) then: act = 0 else: (if (obs[3] < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: (if (-0.7301755467465598 < obs[3]) then: act = 1 else: act = 0) else: (if (-1.7069937570138154 < obs[1]) then: act = 1 else: act = 1))) else: (if (obs[1] < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 0 else: act = 0)))) else: (if ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * obs[1]) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 1 else: act = 1))
470.09 (if ((1.3192102369437302 + -1.095329623407542) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) * obs[1]) < -0.8094225362983504) then: act = 1 else: (if ((obs[3] * max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) < 1.3343400482124075) then: (if (max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: (if (-0.21799385634869906 < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: (if ((obs[2] * ((obs[1] * 0.6330832917036529) + ((obs[2] + max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) * -0.8301443224127363))) < 0.8434465784911538) then: act = 1 else: act = 1) else: (if ((-1.1294163424605965 * ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) + ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * (obs[1] * (obs[3] * -1.325001157302154))) + obs[2])) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471))) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if (obs[0] < (obs[1] + ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) * obs[0]) + (max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) + max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375))))) then: (if (((1.1967907933686386 * 0.24770702403752043) + 1.6662186110419746) < ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471))) then: (if ((obs[3] + -1.1575837853786723) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 0 else: (if (max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) < obs[2]) then: (if (obs[1] < obs[3]) then: act = 0 else: act = 0) else: act = 0)) else: (if ((obs[3] * obs[0]) < (obs[1] + obs[0])) then: act = 1 else: act = 1)) else: act = 1) else: act = 0)) else: act = 0) else: (if ((1.9274527669778418 + 1.0822709469370677) < obs[0]) then: (if (2.127704879955144 < obs[1]) then: (if (obs[2] < -1.1298898155335917) then: act = 0 else: act = 1) else: act = 0) else: act = 0))) else: (if ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * obs[1]) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 1 else: act = 1))
472.09 (if ((1.3192102369437302 + -1.095329623407542) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) * obs[1]) < -0.8094225362983504) then: act = 1 else: (if ((obs[3] * max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) < 1.3343400482124075) then: (if (max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: (if (-0.21799385634869906 < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: (if ((obs[2] * ((obs[1] * 0.6330832917036529) + ((obs[2] + max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) * -0.8301443224127363))) < 0.8434465784911538) then: act = 1 else: act = 1) else: (if ((-1.1294163424605965 * ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) + ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * (obs[1] * (obs[3] * -1.325001157302154))) + obs[2])) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471))) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if (obs[0] < (obs[1] + ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) * obs[0]) + (max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) + max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375))))) then: (if (((1.1967907933686386 * 0.24770702403752043) + 1.6662186110419746) < ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471))) then: (if ((obs[3] + -1.1575837853786723) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 0 else: (if (max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) < obs[2]) then: (if (obs[1] < obs[3]) then: act = 0 else: act = 0) else: act = 0)) else: (if ((obs[3] * obs[0]) < (obs[1] + obs[0])) then: act = 1 else: act = 1)) else: act = 1) else: act = 0)) else: act = 0) else: (if ((1.9274527669778418 + 1.0822709469370677) < obs[0]) then: (if (2.127704879955144 < obs[1]) then: (if (obs[2] < -1.1298898155335917) then: act = 0 else: act = 1) else: act = 0) else: act = 0))) else: (if ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * obs[1]) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 1 else: act = 1))
472.29 (if ((1.3192102369437302 + -1.095329623407542) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) * obs[1]) < -0.8094225362983504) then: act = 1 else: (if ((obs[3] * max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) < 1.3343400482124075) then: (if (max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: (if (-0.21799385634869906 < max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) then: (if ((obs[2] * ((obs[1] * 0.6330832917036529) + ((obs[2] + max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375)) * -0.8301443224127363))) < 0.8434465784911538) then: act = 1 else: act = 1) else: (if ((-1.1294163424605965 * ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) + ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * (obs[1] * (obs[3] * -1.325001157302154))) + obs[2])) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471))) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: (if (obs[0] < (obs[1] + ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) * obs[0]) + (max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) + max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375))))) then: (if (((1.1967907933686386 * 0.24770702403752043) + 1.6662186110419746) < ((max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) + max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471))) then: (if ((obs[3] + -1.1575837853786723) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 0 else: (if (max(0, [-0.528  0.463 -0.44   1.206] *dot* obs[:] + 0.375) < obs[2]) then: (if (obs[1] < obs[3]) then: act = 0 else: act = 0) else: act = 0)) else: (if ((obs[3] * obs[0]) < (obs[1] + obs[0])) then: act = 1 else: act = 1)) else: act = 1) else: act = 0)) else: act = 0) else: (if ((1.9274527669778418 + 1.0822709469370677) < obs[0]) then: (if (2.127704879955144 < obs[1]) then: (if (obs[2] < -1.1298898155335917) then: act = 0 else: act = 1) else: act = 0) else: act = 0))) else: (if ((max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471) * obs[1]) < max(0, [-0.266 -0.108 -1.188 -1.708] *dot* obs[:] + 0.471)) then: act = 1 else: act = 1))
500
(if (max(0, [-0.086 -0.153 -0.238 -0.316] *dot* obs[:] + 0.115) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.017  0.497 -0.185 -0.162] *dot* obs[:] + 0.07)) then: act = 0 else: act = 1) else: act = 1) 9.35
166.66 (if (obs[3] < ((max(0, [-0.28  -0.221  0.128 -0.137] *dot* obs[:] + 0.07) + max(0, [-0.108 -0.056  0.125 -0.225] *dot* obs[:] + -0.044)) * obs[0])) then: (if ((2.110162246721079 + 0.7500571874086724) < 1.958511002351287) then: act = 0 else: (if (max(0, [ 0.122  0.005 -0.234 -0.288] *dot* obs[:] + 0.079) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.017 -0.148  0.213  0.248] *dot* obs[:] + 0.072) * obs[1]) < max(0, [-0.081  0.383 -0.025  0.311] *dot* obs[:] + 0.124)) then: act = 1 else: act = 1))
344.36 (if (obs[3] < ((-0.4384189910467827 + max(0, [ 0.179 -0.177 -0.473 -0.265] *dot* obs[:] + 0.126)) * obs[1])) then: (if ((2.6757458092545114 + -0.5078361252942053) < max(0, [ 0.103 -0.236 -0.152 -0.289] *dot* obs[:] + 0.139)) then: (if (((1.2378024291848466 * max(0, [ 0.179 -0.177 -0.473 -0.265] *dot* obs[:] + 0.126)) * max(0, [ 0.103 -0.236 -0.152 -0.289] *dot* obs[:] + 0.139)) < (((-2.569015072733321 + obs[2]) * obs[2]) + (obs[0] * (obs[2] * obs[1])))) then: (if (0.6184401331337894 < ((max(0, [ 0.096 -0.201 -0.143  0.053] *dot* obs[:] + 0.018) + max(0, [-0.165 -0.21  -0.314 -0.18 ] *dot* obs[:] + 0.05)) * (max(0, [ 0.122  0.005 -0.234 -0.288] *dot* obs[:] + 0.079) + -1.3980327405742026))) then: (if (max(0, [-0.017  0.035 -0.465 -0.139] *dot* obs[:] + 0.075) < obs[0]) then: act = 1 else: act = 0) else: act = 1) else: (if (1.9840129909497943 < 0.09367633534958908) then: act = 0 else: act = 1)) else: (if (max(0, [0.015 0.092 0.039 0.24 ] *dot* obs[:] + 0.112) < max(0, [-0.315 -0.215 -0.097  0.185] *dot* obs[:] + 0.049)) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.017 -0.148  0.213  0.248] *dot* obs[:] + 0.072) * obs[1]) < max(0, [-0.081  0.383 -0.025  0.311] *dot* obs[:] + 0.124)) then: act = 1 else: act = 1))
462.58 (if (obs[3] < ((-0.2981810580324824 + max(0, [-0.015  0.079 -0.15  -0.265] *dot* obs[:] + 0.071)) * obs[1])) then: (if (max(0, [ 0.179 -0.177 -0.473 -0.265] *dot* obs[:] + 0.126) < (((-0.048769735602133775 + max(0, [ 0.018  0.024 -0.087  0.071] *dot* obs[:] + 0.04)) * obs[0]) * max(0, [-0.06  -0.2   -0.272 -0.041] *dot* obs[:] + 0.149))) then: act = 1 else: (if (max(0, [ 0.113  0.078  0.147 -0.173] *dot* obs[:] + -0.008) < (max(0, [-0.086 -0.153 -0.238 -0.316] *dot* obs[:] + 0.115) + obs[1])) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.017 -0.148  0.213  0.248] *dot* obs[:] + 0.072) * obs[1]) < max(0, [-0.081  0.383 -0.025  0.311] *dot* obs[:] + 0.124)) then: act = 1 else: act = 1))
468.0 (if (obs[3] < ((-0.2981810580324824 + max(0, [-0.015  0.079 -0.15  -0.265] *dot* obs[:] + 0.071)) * obs[1])) then: (if (max(0, [ 0.179 -0.177 -0.473 -0.265] *dot* obs[:] + 0.126) < (((-0.048769735602133775 + max(0, [ 0.018  0.024 -0.087  0.071] *dot* obs[:] + 0.04)) * obs[0]) * max(0, [-0.06  -0.2   -0.272 -0.041] *dot* obs[:] + 0.149))) then: act = 1 else: (if (max(0, [ 0.113  0.078  0.147 -0.173] *dot* obs[:] + -0.008) < (max(0, [-0.086 -0.153 -0.238 -0.316] *dot* obs[:] + 0.115) + obs[1])) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.017 -0.148  0.213  0.248] *dot* obs[:] + 0.072) * obs[1]) < max(0, [-0.081  0.383 -0.025  0.311] *dot* obs[:] + 0.124)) then: act = 1 else: act = 1))
473.09 (if (obs[3] < ((0.7599400669198978 + -1.2368945065611403) * (0.5141532440103973 * obs[1]))) then: (if (max(0, [ 0.179 -0.177 -0.473 -0.265] *dot* obs[:] + 0.126) < (((-0.3011100345001729 + max(0, [ 0.018  0.024 -0.087  0.071] *dot* obs[:] + 0.04)) * obs[0]) * max(0, [-0.06  -0.2   -0.272 -0.041] *dot* obs[:] + 0.149))) then: act = 1 else: (if (max(0, [ 0.113  0.078  0.147 -0.173] *dot* obs[:] + -0.008) < (max(0, [-0.086 -0.153 -0.238 -0.316] *dot* obs[:] + 0.115) + obs[1])) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.017 -0.148  0.213  0.248] *dot* obs[:] + 0.072) * obs[1]) < max(0, [-0.081  0.383 -0.025  0.311] *dot* obs[:] + 0.124)) then: act = 1 else: act = 1))
495.62 (if (obs[3] < ((0.9433511557563586 + -1.5366861944494965) * (0.481911311134855 * obs[1]))) then: (if (max(0, [ 0.179 -0.177 -0.473 -0.265] *dot* obs[:] + 0.126) < (((0.05608895186855539 + max(0, [ 0.018  0.024 -0.087  0.071] *dot* obs[:] + 0.04)) * obs[2]) * max(0, [-0.06  -0.2   -0.272 -0.041] *dot* obs[:] + 0.149))) then: act = 1 else: (if (obs[3] < (max(0, [-0.086 -0.153 -0.238 -0.316] *dot* obs[:] + 0.115) + obs[1])) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.017 -0.148  0.213  0.248] *dot* obs[:] + 0.072) * obs[1]) < max(0, [-0.081  0.383 -0.025  0.311] *dot* obs[:] + 0.124)) then: act = 1 else: act = 1))
498.72 (if (obs[3] < ((0.9433511557563586 + -1.5366861944494965) * (0.481911311134855 * obs[1]))) then: (if (max(0, [ 0.179 -0.177 -0.473 -0.265] *dot* obs[:] + 0.126) < (((0.05608895186855539 + max(0, [ 0.018  0.024 -0.087  0.071] *dot* obs[:] + 0.04)) * obs[2]) * max(0, [-0.06  -0.2   -0.272 -0.041] *dot* obs[:] + 0.149))) then: act = 1 else: (if (obs[3] < (max(0, [-0.086 -0.153 -0.238 -0.316] *dot* obs[:] + 0.115) + obs[1])) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.017 -0.148  0.213  0.248] *dot* obs[:] + 0.072) * obs[1]) < max(0, [-0.081  0.383 -0.025  0.311] *dot* obs[:] + 0.124)) then: act = 1 else: act = 1))
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
207.59 (if ((obs[0] * (obs[2] * -1.8335958640449843)) < (obs[3] * -1.2213336604492513)) then: act = 0 else: (if (obs[1] < (obs[0] * 0.09443510429361784)) then: act = 1 else: (if (obs[3] < 0.7786175852835864) then: (if ((((-0.8522763471017298 + (-0.17148166886059912 + obs[0])) + -1.8118054238519807) + (-0.043552529575980437 * obs[1])) < (obs[0] * (obs[1] * obs[0]))) then: (if (-0.4380504864798902 < -2.0514440896524553) then: act = 0 else: (if (0.15503180818104306 < -1.920499828649175) then: act = 1 else: act = 1)) else: act = 0) else: (if (0.636199030844057 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
500.0 (if ((obs[2] * (((((obs[2] * obs[0]) + (obs[0] * obs[2])) + (obs[2] + (((1.8391243280444183 + (2.133937183377795 * obs[3])) + obs[2]) + ((obs[2] * 0.9428366292643584) + (1.172926143186503 + 1.537148929118669))))) + obs[3]) + obs[1])) < (obs[3] * -1.520694360682819)) then: act = 0 else: act = 1)
