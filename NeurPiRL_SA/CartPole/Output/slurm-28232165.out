created virtual environment CPython3.8.10.final.0-64 in 14291ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232165.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384)) < (max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032) + max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032) < max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032)) then: act = 1 else: act = 1))) else: act = 1) 9.36
30.17 (if (obs[0] < (max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384) * (max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384) + 0.9722854708753546))) then: act = 1 else: (if (obs[1] < ((1.241809631279918 + ((max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032) * max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384)) + -0.3594020282680265)) + (-2.4873992881646254 * (max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032) + max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032))))) then: (if (-0.7446125734810971 < max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032)) then: (if (max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384) < 1.6017466403084057) then: act = 0 else: act = 0) else: act = 0) else: act = 1))
68.28 (if (max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032) < (obs[3] * max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384))) then: act = 1 else: (if ((obs[3] + obs[3]) < max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032)) then: act = 0 else: (if (max(0, [ 0.036 -0.793  0.973  1.046] *dot* obs[:] + -0.032) < max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384)) then: (if ((max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384) * -2.006849851028652) < (1.196639245981157 * -1.2784444818790273)) then: act = 0 else: act = 1) else: (if (obs[1] < (obs[0] * max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384))) then: act = 0 else: act = 0))))
499.69 (if (((-0.0316263684866005 + 1.9735223398255437) * 0.235966939837782) < (obs[3] + max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384))) then: act = 1 else: act = 0)
500.0 (if (((-0.2688508975617541 + 2.054623349459707) * 0.2773093841022993) < ((obs[1] * -0.05623828706335926) + max(0, [0.04  0.712 2.191 1.345] *dot* obs[:] + 0.384))) then: act = 1 else: act = 0)
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.24   0.08   0.314  0.211] *dot* obs[:] + 0.105)) < (max(0, [ 0.028 -0.177  0.225  0.264] *dot* obs[:] + 0.101) + max(0, [ 0.09  -0.11   0.092 -0.11 ] *dot* obs[:] + -0.054))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.229 -0.    -0.052 -0.016] *dot* obs[:] + -0.077)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.001 -0.179 -0.016  0.122] *dot* obs[:] + -0.019)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.053 -0.093 -0.185 -0.022] *dot* obs[:] + -0.006) < max(0, [-0.198 -0.074  0.051  0.31 ] *dot* obs[:] + 0.047)) then: act = 1 else: act = 1))) else: act = 1) 9.36
36.78 (if (obs[0] < (max(0, [ 0.028 -0.177  0.225  0.264] *dot* obs[:] + 0.101) * (0.9558448168687881 + obs[0]))) then: (if ((max(0, [ 0.532 -0.429 -0.073 -0.204] *dot* obs[:] + 0.065) + ((-2.3173408619772045 + (obs[3] + (-1.395524029124896 * obs[3]))) + max(0, [ 0.185  0.013  0.098 -0.015] *dot* obs[:] + -0.038))) < (0.33855182562054603 * -0.965352651624305)) then: act = 1 else: act = 1) else: (if (obs[1] < ((1.9601839010437445 + ((max(0, [-0.258  0.127  0.266  0.069] *dot* obs[:] + 0.041) * max(0, [-0.229 -0.    -0.052 -0.016] *dot* obs[:] + -0.077)) + 0.05963548317533185)) + (obs[3] + obs[0]))) then: (if (-1.3012972974394141 < max(0, [ 0.002 -0.033  0.237 -0.038] *dot* obs[:] + -0.053)) then: (if (max(0, [ 0.008 -0.063 -0.088 -0.316] *dot* obs[:] + 0.105) < 1.433361761114159) then: act = 0 else: act = 0) else: act = 0) else: act = 1))
424.83 (if (2.483996098977756 < ((-2.372312577560116 * obs[2]) + -0.7731288865275667)) then: act = 1 else: (if (((-0.9938414665519109 * (-1.3776976039000624 + max(0, [ 0.047  0.273 -0.095 -0.113] *dot* obs[:] + 0.016))) * max(0, [ 0.063  0.1    0.167 -0.109] *dot* obs[:] + 0.113)) < max(0, [0.082 0.105 0.72  0.334] *dot* obs[:] + 0.153)) then: (if ((max(0, [ 0.169 -0.117 -0.223 -0.484] *dot* obs[:] + 0.16) + max(0, [-0.24   0.08   0.314  0.211] *dot* obs[:] + 0.105)) < (max(0, [ 0.191 -0.055 -0.047  0.274] *dot* obs[:] + 0.094) * obs[3])) then: act = 1 else: (if (0.1431644304814627 < obs[1]) then: act = 0 else: act = 1)) else: (if (1.1166047386081268 < 2.8903477566292666) then: act = 0 else: act = 0)))
497.99 (if (1.98099230552109 < obs[3]) then: act = 0 else: (if (((-0.9052752505097073 * (-1.5153546049020545 + max(0, [ 0.047  0.273 -0.095 -0.113] *dot* obs[:] + 0.016))) * max(0, [ 0.063  0.1    0.167 -0.109] *dot* obs[:] + 0.113)) < max(0, [0.082 0.105 0.72  0.334] *dot* obs[:] + 0.153)) then: (if (-1.8808001206895497 < max(0, [-0.14  -0.114 -0.067  0.288] *dot* obs[:] + 0.062)) then: act = 1 else: (if (0.6852447237169585 < obs[1]) then: act = 0 else: act = 1)) else: (if (1.0679714885520024 < 2.7139041346491224) then: act = 0 else: act = 0)))
498.96 (if (2.0406277886964217 < obs[3]) then: act = 0 else: (if (((-0.8907042033711877 * (-1.5085655442691812 + max(0, [ 0.126  0.138  0.244 -0.134] *dot* obs[:] + -0.04))) * max(0, [ 0.063  0.1    0.167 -0.109] *dot* obs[:] + 0.113)) < max(0, [0.082 0.105 0.72  0.334] *dot* obs[:] + 0.153)) then: (if (-1.9809727838522881 < max(0, [-0.14  -0.114 -0.067  0.288] *dot* obs[:] + 0.062)) then: act = 1 else: (if (0.5025346963894253 < obs[1]) then: act = 0 else: act = 1)) else: (if (0.9513851261034357 < 2.77447105103377) then: act = 0 else: act = 0)))
499.16 (if (2.2651418135851427 < obs[3]) then: act = 0 else: (if (((-0.9397896964401707 * (-1.4304046409059594 + max(0, [ 0.126  0.138  0.244 -0.134] *dot* obs[:] + -0.04))) * max(0, [ 0.063  0.1    0.167 -0.109] *dot* obs[:] + 0.113)) < max(0, [0.082 0.105 0.72  0.334] *dot* obs[:] + 0.153)) then: (if (-2.1160121845983584 < max(0, [-0.14  -0.114 -0.067  0.288] *dot* obs[:] + 0.062)) then: act = 1 else: (if (0.7454384629317732 < obs[1]) then: act = 0 else: act = 1)) else: (if (0.8299477744765982 < 2.844426860868877) then: act = 0 else: act = 0)))
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
55.09 (if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
422.66 (if (obs[1] < ((-1.7674886008390382 + obs[0]) * -2.032002548928998)) then: (if (0.34629779903892977 < (((obs[0] + (-1.5666986175486304 * (obs[0] * obs[1]))) * obs[0]) + (obs[2] * obs[0]))) then: (if (1.7931082088419457 < obs[2]) then: (if (-1.6713787664140192 < (0.3856118921725341 * 0.20927093064874047)) then: act = 0 else: act = 0) else: act = 1) else: (if (obs[2] < (((obs[2] + obs[3]) * (-1.7626167038197014 * -2.5261906925632207)) + obs[2])) then: (if ((-2.2037163048156585 * obs[3]) < ((obs[1] + 0.28883194373775833) * obs[2])) then: act = 1 else: act = 1) else: (if (obs[3] < ((obs[2] * 1.1581963027111726) + obs[2])) then: act = 0 else: act = 0))) else: (if (-2.313474540622555 < obs[0]) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-3.735110301031168 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
437.31 (if (((obs[0] + 1.6847882752949808) * obs[2]) < ((-3.0805376718954034 + obs[0]) * -2.46172462422161)) then: (if (0.3117877587775452 < (((obs[0] + (-3.104423079225226 * (obs[0] * obs[1]))) * obs[2]) + (obs[2] * obs[3]))) then: (if (1.1089884616886847 < obs[2]) then: act = 0 else: act = 1) else: (if (obs[2] < (((obs[2] + obs[3]) * (-1.4797815864024757 * -3.417509043599858)) + obs[3])) then: (if ((-2.976740731015899 * obs[3]) < (((obs[2] * ((-0.3715146312363765 + obs[2]) + (obs[3] * 1.8581251624371982))) + -2.115275784915407) * obs[2])) then: act = 1 else: act = 1) else: (if (obs[3] < ((obs[2] * 0.4718030986377919) + obs[2])) then: act = 0 else: act = 0))) else: (if (-2.8135525056904003 < obs[0]) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-4.644806192288857 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
462.25 (if (((obs[0] + -3.9091911096488436) * obs[0]) < ((-3.622344729503536 + obs[0]) * -3.090596222806623)) then: (if (0.25830217368287506 < (((obs[0] + ((-0.18697873419076505 * (obs[1] * -0.4965506602586567)) * (((((-0.5996598760161362 + (obs[2] + obs[0])) + -2.510882286485322) + obs[1]) + -0.6944510319281019) * -3.236336978754712))) * -0.6794983196481303) + ((((1.1727050858582342 * -1.7645159706313007) * obs[1]) * (obs[0] + 1.2625248304313341)) * obs[3]))) then: (if (-1.4378431804033736 < ((2.2270745213734746 * obs[3]) * ((1.1867145127957066 + (obs[2] + ((1.3743144272090868 * (0.3369259255521097 + 0.5321068767277721)) + 1.7467672402290586))) * ((obs[2] * -0.7981935920197036) + -2.639502451323723)))) then: act = 0 else: act = 1) else: (if (obs[2] < (((obs[2] + obs[3]) * (-3.0034131950893266 * -5.0844388423930855)) + obs[3])) then: (if ((-3.293209226332901 * obs[3]) < (obs[1] * obs[1])) then: act = 1 else: act = 1) else: (if (obs[3] < ((obs[2] * -0.20565865614872011) + obs[2])) then: act = 0 else: act = 0))) else: (if (-4.93233155051273 < obs[0]) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-4.674713306153541 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
466.23 (if (((obs[0] + -3.9091911096488436) * obs[0]) < ((-3.622344729503536 + obs[0]) * -3.090596222806623)) then: (if (0.25830217368287506 < (((obs[0] + ((-0.18697873419076505 * (obs[1] * -0.4965506602586567)) * (((((-0.5996598760161362 + (obs[2] + obs[0])) + -2.510882286485322) + obs[1]) + -0.6944510319281019) * -3.236336978754712))) * -0.6794983196481303) + ((((1.1727050858582342 * -1.7645159706313007) * obs[1]) * (obs[0] + 1.2625248304313341)) * obs[3]))) then: (if (-1.4378431804033736 < ((2.2270745213734746 * obs[3]) * ((1.1867145127957066 + (obs[2] + ((1.3743144272090868 * (0.3369259255521097 + 0.5321068767277721)) + 1.7467672402290586))) * ((obs[2] * -0.7981935920197036) + -2.639502451323723)))) then: act = 0 else: act = 1) else: (if (obs[2] < (((obs[2] + obs[3]) * (-3.0034131950893266 * -5.0844388423930855)) + obs[3])) then: (if ((-3.293209226332901 * obs[3]) < (obs[1] * obs[1])) then: act = 1 else: act = 1) else: (if (obs[3] < ((obs[2] * -0.20565865614872011) + obs[2])) then: act = 0 else: act = 0))) else: (if (-4.93233155051273 < obs[0]) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-4.674713306153541 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
475.06 (if (((obs[0] + -3.9091911096488436) * obs[0]) < ((-3.622344729503536 + obs[0]) * -3.090596222806623)) then: (if (0.25830217368287506 < (((obs[0] + ((-0.18697873419076505 * (obs[1] * -0.4965506602586567)) * (((((-0.5996598760161362 + (obs[2] + obs[0])) + -2.510882286485322) + obs[1]) + -0.6944510319281019) * -3.236336978754712))) * -0.6794983196481303) + ((((1.1727050858582342 * -1.7645159706313007) * obs[1]) * (obs[0] + 1.2625248304313341)) * obs[3]))) then: (if (-1.4378431804033736 < ((2.2270745213734746 * obs[3]) * ((1.1867145127957066 + (obs[2] + ((1.3743144272090868 * (0.3369259255521097 + 0.5321068767277721)) + 1.7467672402290586))) * ((obs[2] * -0.7981935920197036) + -2.639502451323723)))) then: act = 0 else: act = 1) else: (if (obs[2] < (((obs[2] + obs[3]) * (-3.0034131950893266 * -5.0844388423930855)) + obs[3])) then: (if ((-3.293209226332901 * obs[3]) < (obs[1] * obs[1])) then: act = 1 else: act = 1) else: (if (obs[3] < ((obs[2] * -0.20565865614872011) + obs[2])) then: act = 0 else: act = 0))) else: (if (-4.93233155051273 < obs[0]) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-4.674713306153541 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
