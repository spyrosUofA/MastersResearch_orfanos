created virtual environment CPython3.8.10.final.0-64 in 13278ms
  creator CPython3Posix(dest=/localscratch/orfanos.28220345.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 0 else: act = 1) else: act = 1) 9.35
133.95 (if (obs[3] < (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[2])) then: (if (1.8755330070538607 < -0.711002257485476) then: act = 0 else: (if (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1]) < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 1 else: act = 1))
134.91 (if (obs[3] < (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[2])) then: (if (1.8755330070538607 < -0.711002257485476) then: act = 0 else: (if (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1]) < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 1 else: act = 1))
267.57 (if (obs[3] < ((((1.0815831304554477 + ((obs[1] * obs[1]) + ((-1.63101511943473 * obs[3]) + -0.3014549091632168))) * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) * (0.8173264887547131 + -1.3902721853337943)) * obs[1])) then: (if (-2.2090069142842776 < max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) then: act = 0 else: (if (obs[3] < (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) + (1.3795721959638305 + (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) + ((((-1.484814577063082 + (-0.8707509030481553 + max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425))) * (0.25 + max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296))) * ((max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) + (-0.8911866287650592 + max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425))) + ((-0.65006021926655 + obs[1]) + obs[1]))) * -2.9871392474411707))))) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1]) < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 1 else: act = 1))
268.98 (if (obs[3] < ((((1.0815831304554477 + ((obs[1] * obs[1]) + ((-1.63101511943473 * obs[3]) + -0.3014549091632168))) * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) * (0.8173264887547131 + -1.3902721853337943)) * obs[1])) then: (if (-2.2090069142842776 < max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) then: act = 0 else: (if (obs[3] < (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) + (1.3795721959638305 + (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) + ((((-1.484814577063082 + (-0.8707509030481553 + max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425))) * (0.25 + max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296))) * ((max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) + (-0.8911866287650592 + max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425))) + ((-0.65006021926655 + obs[1]) + obs[1]))) * -2.9871392474411707))))) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1]) < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 1 else: act = 1))
302.68 (if (obs[3] < ((((1.596587035841539 + ((obs[1] * obs[3]) + ((-0.3748312620819494 * obs[3]) + -0.6691924158691064))) * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) * (0.6248025231796084 + -0.881140819551038)) * obs[1])) then: (if ((obs[0] * ((-2.007223608299116 * (0.19784441716156181 * max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425))) + 2.014916709933267)) < max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) then: act = 0 else: (if (max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) < max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1]) < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 1 else: act = 1))
400.23 (if (obs[3] < ((((0.692745631797794 + ((obs[1] * obs[3]) + ((0.03685644875061722 * obs[1]) + -0.6237906640913586))) * (1.976718774802979 + max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425))) * (0.24850591377612452 + -1.6473592387700506)) * obs[1])) then: (if (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 0 else: (if (max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) < max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1]) < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 1 else: act = 1))
414.34 (if (obs[3] < ((-0.06913796775506004 * ((1.2057085765300526 + obs[0]) + (-0.039591594705888855 * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)))) * obs[1])) then: (if (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 1 else: (if ((((obs[0] * ((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) + max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) + (obs[0] * (obs[2] + max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425))))) * (((max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) + obs[3]) + max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) + -1.3295515753723033)) * (obs[3] + obs[1])) < max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1]) < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 1 else: act = 1))
449.47 (if (obs[3] < ((-0.05152073992712669 * (obs[0] + 1.9286348800012498)) * obs[1])) then: act = 0 else: (if (((obs[0] + 2.2231520158712073) * -0.5980012774902799) < 0.9021838836570574) then: act = 1 else: act = 1))
474.88 (if (obs[3] < ((0.09060235140715406 * -1.2297338559213324) * obs[1])) then: act = 0 else: (if (((((1.0220050594069692 * (0.07706867348537216 + (obs[1] * -1.1777272299376702))) * (obs[1] + obs[0])) + ((((obs[2] * -1.8742360914323781) * (obs[3] * 1.8610245698999615)) + (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296))) * (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[0]))) * -0.3553272343403578) < 0.7765995290618324) then: act = 1 else: act = 1))
475.07 (if (obs[3] < ((0.07605770206641022 * -1.3434201746840608) * obs[1])) then: act = 0 else: (if (((((0.8724058161369805 * -0.24071189891129524) * (obs[1] + obs[0])) + ((((obs[2] * -1.9634611110051452) * (obs[3] * 1.715221695268439)) + (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296))) * (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[0]))) * -0.12993366869506068) < 0.6544519171198904) then: act = 1 else: act = 1))
500
(if (max(0, [ 0.056 -0.286  0.057  0.294] *dot* obs[:] + 0.033) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.281  0.203  0.068 -0.244] *dot* obs[:] + 0.081)) then: act = 0 else: act = 1) else: act = 1) 9.35
174.38 (if (obs[3] < ((max(0, [-0.206 -0.027 -0.096 -0.058] *dot* obs[:] + -0.059) + max(0, [-0.023  0.118  0.134 -0.046] *dot* obs[:] + -0.08)) * obs[0])) then: (if ((2.110162246721079 + 0.7500571874086724) < 1.958511002351287) then: act = 0 else: (if (max(0, [ 0.229  0.152  0.137 -0.091] *dot* obs[:] + 0.088) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.13  -0.068 -0.031 -0.259] *dot* obs[:] + 0.103) * obs[1]) < max(0, [ 0.239  0.134 -0.125  0.118] *dot* obs[:] + 0.058)) then: act = 1 else: act = 1))
309.58 (if (obs[3] < ((max(0, [ 0.176 -0.154 -0.151 -0.015] *dot* obs[:] + -0.081) + max(0, [-0.065 -0.002  0.359  0.4  ] *dot* obs[:] + 0.123)) * (((((obs[1] + -0.6857179552281332) * 0.7431454163876215) + ((max(0, [-0.023  0.339 -0.26   0.198] *dot* obs[:] + -0.034) + obs[1]) * (max(0, [ 0.124  0.064 -0.204  0.144] *dot* obs[:] + 0.026) + max(0, [ 0.239  0.134 -0.125  0.118] *dot* obs[:] + 0.058)))) + (((((obs[2] * obs[2]) + obs[1]) * obs[2]) + (obs[0] + -1.3361846376544282)) * -0.2921049984511636)) * -0.7820116332637586))) then: (if ((obs[2] + -2.977801156960026) < 0.1700494282236733) then: act = 0 else: (if (obs[1] < obs[3]) then: act = 0 else: act = 1)) else: (if ((max(0, [-0.13  -0.068 -0.031 -0.259] *dot* obs[:] + 0.103) * obs[1]) < max(0, [ 0.239  0.134 -0.125  0.118] *dot* obs[:] + 0.058)) then: act = 1 else: act = 1))
433.94 (if (obs[3] < ((max(0, [0.06  0.179 0.291 0.302] *dot* obs[:] + 0.145) + max(0, [-0.065 -0.002  0.359  0.4  ] *dot* obs[:] + 0.123)) * (((((obs[1] + -0.39141225669975893) * 1.185841357636131) + max(0, [ 0.046 -0.111 -0.265 -0.247] *dot* obs[:] + 0.128)) + (((((obs[2] * obs[2]) + obs[1]) * obs[2]) + (obs[0] + -0.743160942905368)) * -0.3452588119979529)) * -0.6163585885245393))) then: (if ((obs[2] + -2.9260168613727044) < -0.10795629370200671) then: act = 0 else: (if (obs[1] < obs[3]) then: act = 0 else: act = 1)) else: (if ((max(0, [-0.13  -0.068 -0.031 -0.259] *dot* obs[:] + 0.103) * obs[1]) < max(0, [ 0.239  0.134 -0.125  0.118] *dot* obs[:] + 0.058)) then: act = 1 else: act = 1))
500.0 (if (obs[3] < ((obs[1] + obs[2]) * ((((max(0, [ 0.216 -0.225 -0.195 -0.158] *dot* obs[:] + 0.097) * obs[1]) + (obs[3] + (-1.7118362031337448 + max(0, [ 0.056 -0.286  0.057  0.294] *dot* obs[:] + 0.033)))) + (max(0, [0.066 0.238 0.191 0.036] *dot* obs[:] + 0.126) * (obs[3] * max(0, [-0.1   -0.04  -0.056  0.312] *dot* obs[:] + 0.025)))) * 0.11813109000121563))) then: (if (-1.957761365693815 < ((max(0, [-0.024 -0.123  0.077  0.317] *dot* obs[:] + 0.008) * 1.1638950087481952) * (obs[0] + (max(0, [-0.385 -0.298 -0.059 -0.114] *dot* obs[:] + -0.025) + obs[0])))) then: act = 0 else: act = 1) else: (if ((max(0, [-0.13  -0.068 -0.031 -0.259] *dot* obs[:] + 0.103) * obs[1]) < max(0, [ 0.239  0.134 -0.125  0.118] *dot* obs[:] + 0.058)) then: act = 1 else: act = 1))
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
189.57 (if ((obs[0] * (obs[2] * 0.9011662863159199)) < (obs[3] * -1.041488997648713)) then: act = 0 else: (if (obs[1] < 0.7727142534826702) then: act = 1 else: (if (obs[3] < -2.029751788956985) then: (if ((obs[2] * obs[2]) < -2.809159535214964) then: (if (0.5539356922936787 < -2.4461615371036993) then: act = 0 else: (if (0.08529358748688431 < -1.492955904230906) then: act = 1 else: act = 1)) else: act = 0) else: (if (0.17614620788361934 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
352.09 (if (((-1.2364652518954373 + ((obs[0] * -1.4161615604378788) + obs[1])) * (obs[2] * -0.27059344907249827)) < (obs[3] * -0.7405841700304319)) then: act = 0 else: (if (obs[1] < 0.6472892409878382) then: act = 1 else: (if (-2.066965263261435 < -2.1320577110268264) then: (if ((obs[1] + ((obs[1] * ((((((-1.829947247456489 * obs[0]) + (obs[2] * -2.25)) + (-2.024088378435795 + (obs[3] + -2.116882642847024))) * -0.057209340841227675) + 0.14354763931520403) + 1.4145751386663625)) * (-0.5732123986977458 * -1.9733917401108623))) < (((obs[0] + obs[1]) + obs[2]) * (((-1.0301319184904314 * 1.1377456355801807) + (-1.3850490529276556 + 1.6000588026708846)) + ((obs[0] + obs[3]) * -2.4797555126743314)))) then: (if (1.9270906536112138 < -2.551749475697923) then: act = 0 else: (if (((0.04465972658403078 * ((obs[2] * 0.7519466805192019) * obs[0])) + -0.6752215137921708) < obs[1]) then: act = 1 else: act = 1)) else: act = 0) else: (if (0.24340125938241405 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
500.0 (if (((-1.3696370832116362 + ((obs[0] * -0.5702448967673902) + obs[1])) * (obs[2] * -1.417101888486898)) < (obs[3] * -1.0566161317335796)) then: act = 0 else: (if (-1.8311094166567001 < 1.223328585911151) then: act = 1 else: (if (-1.1063842086256586 < -2.393664923435933) then: (if (obs[0] < -1.3454641295195373) then: (if (2.341716999885901 < -1.5257683074212947) then: act = 0 else: (if (((0.44338845200909793 * ((obs[2] * 0.2151020244244484) * obs[0])) + -1.5184840535942894) < obs[1]) then: act = 1 else: act = 1)) else: act = 0) else: (if (0.42614369030753074 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
