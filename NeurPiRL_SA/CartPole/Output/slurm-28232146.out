created virtual environment CPython3.8.10.final.0-64 in 20321ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232146.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) < (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) + max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) < max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195)) then: act = 1 else: act = 1))) else: act = 1) 9.36
477.06 (if (((-1.5697291329662035 * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) + 2.475668632399564) < (obs[2] + (1.9677874845823 + -0.2982567737350347))) then: act = 1 else: act = 0)
479.44 (if (((-1.6448159904645538 * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) + 2.335821735934844) < (obs[2] + (1.95168122687345 + -0.447385160602552))) then: act = 1 else: act = 0)
485.31 (if (((-3.306745465522903 * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) + (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) + obs[2])) < (obs[3] + (0.6924779938742516 + -2.1547096295209482))) then: act = 1 else: act = 0)
499.47 (if (((-3.4295854938216257 * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) + (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) + obs[2])) < (((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * 1.75) + -0.25) + (0.5392233028528475 + -2.6786976289167126))) then: act = 1 else: act = 0)
499.59 (if (((-3.4295854938216257 * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) + (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) + obs[2])) < (((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * 1.75) + -0.25) + (0.5392233028528475 + -2.6786976289167126))) then: act = 1 else: act = 0)
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.1    0.087  0.384  0.43 ] *dot* obs[:] + 0.14)) < (max(0, [ 0.161 -0.121  0.08  -0.194] *dot* obs[:] + 0.07) + max(0, [ 0.221  0.177 -0.078 -0.039] *dot* obs[:] + 0.067))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [ 0.341 -0.093  0.2   -0.023] *dot* obs[:] + -0.066)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.09   0.193 -0.127  0.52 ] *dot* obs[:] + 0.117) < max(0, [ 0.128  0.271  0.107 -0.034] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1))) else: act = 1) 9.36
13.66 (if ((-0.22824940697014218 + max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082)) < obs[2]) then: (if (((max(0, [-0.064  0.163  0.302  0.155] *dot* obs[:] + 0.074) * max(0, [ 0.03  -0.036  0.376  0.048] *dot* obs[:] + 0.049)) * max(0, [-0.1    0.087  0.384  0.43 ] *dot* obs[:] + 0.14)) < (obs[0] * (obs[2] * obs[1]))) then: (if (-0.7387040340850565 < obs[3]) then: (if (obs[1] < (((((obs[2] * max(0, [-0.236 -0.015 -0.484 -0.115] *dot* obs[:] + -0.012)) * (max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082) + max(0, [-0.1    0.013 -0.276 -0.349] *dot* obs[:] + 0.143))) * max(0, [-0.051 -0.28  -0.182 -0.001] *dot* obs[:] + 0.061)) * obs[0]) * -2.2156640514736385)) then: act = 0 else: act = 0) else: (if (-1.8736315638647691 < max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.09   0.193 -0.127  0.52 ] *dot* obs[:] + 0.117) < max(0, [ 0.128  0.271  0.107 -0.034] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1))) else: act = 1)
41.93 (if ((-0.3582053435796294 + max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082)) < obs[1]) then: (if (-1.4465760785480448 < ((obs[2] + 2.2109871695093313) + (max(0, [ 0.31  -0.187  0.316  0.207] *dot* obs[:] + 0.09) * (-1.0045140694720414 * obs[2])))) then: (if (0.8735886194986766 < 0.9688562522179411) then: (if (0.46777485754241005 < 0.4463442920534067) then: act = 0 else: act = 0) else: (if (-2.617083840796535 < max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.09   0.193 -0.127  0.52 ] *dot* obs[:] + 0.117) < max(0, [ 0.128  0.271  0.107 -0.034] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1))) else: act = 1)
44.3 (if ((-0.19512993385973104 + max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082)) < obs[1]) then: (if (-1.3494998058354533 < ((max(0, [ 0.285  0.156  0.06  -0.078] *dot* obs[:] + 0.094) + 2.4367422436821973) + (max(0, [ 0.31  -0.187  0.316  0.207] *dot* obs[:] + 0.09) * (-0.942821712324122 * obs[2])))) then: (if (0.9904235185471649 < 1.1564906571202724) then: (if (0.6439063208411857 < 0.5168136119428388) then: act = 0 else: act = 0) else: (if (-2.830334648439317 < max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.09   0.193 -0.127  0.52 ] *dot* obs[:] + 0.117) < max(0, [ 0.128  0.271  0.107 -0.034] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1))) else: act = 1)
52.94 (if ((-0.22126930809412937 + max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082)) < obs[1]) then: (if (-1.6927304166709187 < ((((obs[0] * -0.651950616048613) + (2.0605669163846474 + (max(0, [-0.203  0.302  0.075  0.426] *dot* obs[:] + 0.132) * (max(0, [ 0.221  0.177 -0.078 -0.039] *dot* obs[:] + 0.067) + obs[3])))) * ((-0.508885047473645 + ((obs[3] + -2.5642317864423188) * (obs[2] + max(0, [ 0.111 -0.039 -0.148  0.136] *dot* obs[:] + -0.024)))) + (obs[1] * obs[1]))) + ((0.1922450934285429 * 1.3164580551455918) * -0.8348325894980629))) then: (if (-2.74164075224295 < obs[1]) then: (if (obs[0] < obs[2]) then: act = 0 else: act = 0) else: (if (-3.442847545876681 < max(0, [-0.237 -0.098  0.049  0.423] *dot* obs[:] + 0.082)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.09   0.193 -0.127  0.52 ] *dot* obs[:] + 0.117) < max(0, [ 0.128  0.271  0.107 -0.034] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1))) else: act = 1)
139.04 (if ((-0.19458213685401848 + obs[3]) < obs[1]) then: (if (obs[3] < max(0, [-0.336 -0.031  0.307 -0.358] *dot* obs[:] + 0.067)) then: (if (obs[2] < max(0, [ 0.31  -0.187  0.316  0.207] *dot* obs[:] + 0.09)) then: (if (obs[1] < max(0, [ 0.116 -0.046 -0.049 -0.372] *dot* obs[:] + 0.114)) then: act = 0 else: act = 0) else: (if (max(0, [ 0.001 -0.246 -0.154  0.206] *dot* obs[:] + 0.016) < ((obs[2] + -1.434713495613122) * (max(0, [-0.185 -0.01  -0.001  0.145] *dot* obs[:] + -0.022) + obs[3]))) then: act = 0 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.09   0.193 -0.127  0.52 ] *dot* obs[:] + 0.117) < max(0, [ 0.128  0.271  0.107 -0.034] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1))) else: act = 1)
386.53 (if ((-0.2165551690948856 + obs[3]) < obs[1]) then: (if (obs[3] < max(0, [-0.336 -0.031  0.307 -0.358] *dot* obs[:] + 0.067)) then: (if (obs[2] < max(0, [-0.108 -0.172  0.076 -0.007] *dot* obs[:] + -0.011)) then: (if ((obs[2] * (-2.0789247360909027 * max(0, [ 0.247  0.18  -0.078 -0.108] *dot* obs[:] + -0.052))) < -0.2767696308054865) then: act = 0 else: act = 0) else: (if (max(0, [ 0.001 -0.246 -0.154  0.206] *dot* obs[:] + 0.016) < (((obs[3] + obs[0]) + max(0, [-0.185 -0.01  -0.001  0.145] *dot* obs[:] + -0.022)) * (max(0, [-0.185 -0.01  -0.001  0.145] *dot* obs[:] + -0.022) + obs[3]))) then: act = 0 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.09   0.193 -0.127  0.52 ] *dot* obs[:] + 0.117) < max(0, [ 0.128  0.271  0.107 -0.034] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1))) else: act = 1)
388.15 (if ((-0.06642599352859219 + obs[3]) < obs[1]) then: (if (obs[3] < max(0, [-0.336 -0.031  0.307 -0.358] *dot* obs[:] + 0.067)) then: (if (obs[2] < max(0, [-0.108 -0.172  0.076 -0.007] *dot* obs[:] + -0.011)) then: (if ((obs[2] * (-1.8675200697741592 * max(0, [ 0.247  0.18  -0.078 -0.108] *dot* obs[:] + -0.052))) < -0.22586107010275286) then: act = 0 else: act = 0) else: (if (max(0, [ 0.001 -0.246 -0.154  0.206] *dot* obs[:] + 0.016) < (((obs[3] + obs[0]) + max(0, [-0.185 -0.01  -0.001  0.145] *dot* obs[:] + -0.022)) * (max(0, [-0.185 -0.01  -0.001  0.145] *dot* obs[:] + -0.022) + obs[3]))) then: act = 0 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.09   0.193 -0.127  0.52 ] *dot* obs[:] + 0.117) < max(0, [ 0.128  0.271  0.107 -0.034] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1))) else: act = 1)
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
68.82 (if (obs[0] < (1.0596354831753318 * obs[2])) then: (if (-2.1235375132707572 < ((obs[2] * (-1.6868874891369097 * obs[0])) * obs[3])) then: (if (obs[3] < obs[2]) then: act = 0 else: (if (obs[3] < (obs[3] + obs[1])) then: (if (obs[1] < obs[0]) then: (if (obs[2] < -2.1266121632753103) then: act = 1 else: act = 0) else: act = 1) else: (if (obs[1] < (1.0724386250437337 * obs[1])) then: act = 0 else: act = 1))) else: (if (obs[1] < ((obs[2] + obs[2]) + 0.770395913337621)) then: act = 0 else: act = 1)) else: (if ((obs[2] * obs[2]) < (-1.384594698077679 * obs[1])) then: (if (obs[2] < obs[3]) then: act = 1 else: act = 0) else: act = 0))
75.01 (if ((-1.2370368840860544 + obs[3]) < 0.9679974510710019) then: (if (-3.572264019254021 < ((obs[2] * (-1.7120192358127992 * (obs[3] * (obs[2] + -1.4911163710769642)))) * (obs[1] * -0.07215490264711705))) then: (if (obs[3] < obs[2]) then: act = 0 else: (if (0.17259576847482788 < obs[0]) then: (if (obs[1] < obs[3]) then: act = 0 else: act = 1) else: act = 1)) else: (if (obs[1] < ((obs[2] + obs[1]) + -0.26477761621116686)) then: act = 0 else: act = 1)) else: (if ((obs[2] * obs[2]) < (-1.1826729700891474 * obs[1])) then: (if (obs[2] < obs[3]) then: act = 1 else: act = 0) else: act = 0))
117.41 (if ((-3.1014940996780895 + obs[2]) < -0.5449769323961473) then: (if ((obs[1] * obs[2]) < obs[3]) then: (if (obs[3] < obs[2]) then: act = 0 else: (if (0.37311551735438864 < obs[0]) then: act = 0 else: act = 1)) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.8557361150519172 * obs[1])) then: (if (obs[2] < obs[3]) then: act = 1 else: act = 0) else: act = 0))
164.47 (if (-2.217356747806561 < (-0.03593883620130528 + (-2.1864200141493613 + obs[3]))) then: (if ((obs[0] * obs[2]) < obs[3]) then: (if (obs[2] < obs[2]) then: act = 0 else: (if (0.4969767037759929 < obs[0]) then: act = 0 else: act = 1)) else: act = 0) else: (if (-1.4614030842484615 < (0.7040132040316636 + (obs[1] + 0.3408316986905253))) then: act = 0 else: act = 1))
205.39 (if ((obs[0] * (obs[2] + -0.01610625770884988)) < obs[3]) then: act = 1 else: act = 0)
210.62 (if ((obs[0] * (obs[2] + -0.01610625770884988)) < obs[3]) then: act = 1 else: act = 0)
365.18 (if ((((obs[1] * -0.2820025489289981) * obs[1]) * (obs[3] + obs[1])) < obs[3]) then: act = 1 else: act = 0)
367.76 (if ((((obs[1] * -0.2820025489289981) * obs[1]) * (obs[3] + obs[1])) < obs[3]) then: act = 1 else: act = 0)
500.0 (if ((-0.22911694608910657 * (obs[2] + obs[1])) < obs[3]) then: act = 1 else: act = 0)
