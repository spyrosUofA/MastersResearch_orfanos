created virtual environment CPython3.8.10.final.0-64 in 36662ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232148.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) < (max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) < max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) then: act = 1 else: act = 1))) else: act = 1) 9.36
20.92 (if (obs[0] < 0.7233754302922437) then: (if ((((obs[3] * ((obs[0] * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) * obs[3])) * max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) * 0.9609943602042565) < (obs[0] * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324))) then: (if (-0.17690330323033915 < (max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037))) then: (if (obs[1] < (((-0.02892940698117963 * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) * 1.8148088342553566) * -2.351565965798189)) then: act = 1 else: act = 0) else: (if (-1.8631960057535828 < max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) < max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) then: act = 1 else: act = 1))) else: act = 1)
42.21 (if ((obs[1] + obs[1]) < ((obs[1] + (-2.010165770613621 + (max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) + ((obs[1] + (obs[1] * -1.9530646809865946)) + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037))))) * (max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) * 0.0021696433801298154))) then: act = 1 else: act = 0)
167.29 (if (obs[2] < (obs[3] * ((2.4717051444983476 * 1.5358610588897093) + obs[0]))) then: act = 1 else: act = 0)
239.24 (if (max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) < ((((obs[2] + obs[3]) * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) + ((((obs[2] * max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) + (obs[2] + obs[0])) + 0.25463471808981425) * -0.051054821193662114)) * ((0.9582547797169236 * (1.5995901501989211 + ((max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) * obs[2]) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)))) + obs[0]))) then: act = 1 else: act = 0)
499.88 (if (max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) < (((((0.6476739177493593 + -0.4483573374568763) + -0.9349623286656431) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) * ((((max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) * max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) + 1.6389581320937465) * (1.7162678798464854 + ((max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) * obs[2]) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)))) + obs[0]))) then: act = 1 else: act = 0)
499.96 (if (max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) < (((((0.8841292626867718 + -0.6419692298378405) + -0.9775094099782995) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) * ((((max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) * max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) + 1.5643940827445668) * (1.741756832508695 + ((max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) * obs[2]) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)))) + obs[0]))) then: act = 1 else: act = 0)
500.0 (if (max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) < (((((0.8841292626867718 + -0.6419692298378405) + -0.9775094099782995) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) * ((((max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) * max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) + 1.5643940827445668) * (1.741756832508695 + ((max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) * obs[2]) + max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)))) + obs[0]))) then: act = 1 else: act = 0)
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.176  0.052  0.422  0.443] *dot* obs[:] + 0.131)) < (max(0, [ 0.088  0.019 -0.541 -0.196] *dot* obs[:] + 0.116) + max(0, [ 0.059  0.196 -0.071  0.083] *dot* obs[:] + 0.059))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [ 0.122 -0.021 -0.168  0.252] *dot* obs[:] + -0.052)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.205 -0.267 -0.153 -0.111] *dot* obs[:] + 0.011)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.075  0.222 -0.278 -0.201] *dot* obs[:] + 0.095) < max(0, [ 0.315 -0.13   0.232  0.294] *dot* obs[:] + 0.075)) then: act = 1 else: act = 1))) else: act = 1) 9.36
493.53 (if (((obs[2] + (2.078268539585957 + max(0, [-0.007  0.201 -0.11   0.069] *dot* obs[:] + 0.134))) + -2.093098165557133) < max(0, [ 0.088  0.019 -0.541 -0.196] *dot* obs[:] + 0.116)) then: act = 0 else: act = 1)
498.27 (if (((obs[2] + (2.078268539585957 + max(0, [-0.007  0.201 -0.11   0.069] *dot* obs[:] + 0.134))) + -2.093098165557133) < max(0, [ 0.088  0.019 -0.541 -0.196] *dot* obs[:] + 0.116)) then: act = 0 else: act = 1)
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
55.09 (if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
77.17 (if (1.9359949021420038 < obs[2]) then: (if (-2.474073768172109 < obs[3]) then: (if (obs[2] < -0.00750756475150699) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if (-1.9751687610606454 < obs[0]) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.079632197912511 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
78.22 (if (1.9359949021420038 < obs[2]) then: (if (-2.474073768172109 < obs[3]) then: (if (obs[2] < -0.00750756475150699) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if (-1.9751687610606454 < obs[0]) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.079632197912511 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
90.84 (if (obs[1] < (-1.5096543736109784 * obs[3])) then: (if (1.0117999950521634 < obs[1]) then: act = 1 else: (if ((((-1.5409111772673745 + 1.1987707002124912) + ((1.9334401724654418 * 1.0798764890207087) * ((-0.1212550823337196 * obs[3]) * 1.980243053184319))) + (((-2.2912714492762776 * (0.2720142524876579 * obs[0])) * obs[3]) * obs[1])) < (-1.247376954939148 + obs[1])) then: (if (obs[1] < obs[3]) then: (if ((obs[0] * (1.1190618695439147 + obs[1])) < obs[0]) then: act = 1 else: (if (obs[0] < obs[0]) then: act = 1 else: act = 0)) else: act = 0) else: act = 0)) else: (if (-1.9602533046200319 < obs[2]) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.1783736647172771 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
237.27 (if (obs[1] < (-1.4505595356757959 * obs[3])) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 0) else: (if (-1.2370368840860544 < (((-2.0675444941626546 * obs[3]) + (obs[1] + 1.0310897828581604)) * obs[2])) then: act = 1 else: (if (obs[3] < ((obs[1] + obs[2]) + -2.125719215145896)) then: act = 0 else: (if ((obs[3] * -2.2911430001031645) < obs[2]) then: (if (1.9601896109044037 < -2.1394921113429772) then: act = 0 else: act = 0) else: (if (obs[0] < obs[3]) then: (if (obs[2] < obs[1]) then: act = 0 else: act = 1) else: act = 1)))))
438.48 (if (obs[1] < (-3.987344958484672 * obs[3])) then: (if (obs[1] < obs[1]) then: act = 0 else: act = 0) else: (if (obs[3] < (-1.19640629788421 * -0.03245817507058618)) then: act = 1 else: (if (1.8604406109303722 < ((2.1903110330828404 + obs[2]) + obs[2])) then: act = 1 else: (if (obs[2] < (obs[0] * obs[2])) then: (if (0.10984376886220565 < obs[2]) then: act = 0 else: (if (0.1065036467734905 < -0.8650701715036491) then: act = 0 else: act = 0)) else: act = 0))))
494.37 (if (obs[2] < (-0.7761258100717814 * obs[3])) then: (if (obs[1] < (obs[0] * obs[0])) then: act = 0 else: act = 0) else: (if (obs[3] < (-2.0162381461191745 * -1.8808001206895497)) then: (if ((obs[2] * (obs[3] * -0.6124540806202738)) < 2.681539972321232) then: (if (((-0.9528806585802458 + obs[1]) + (obs[0] + -0.33917444942424463)) < -2.1319724222868395) then: act = 1 else: (if (-0.2867829238859821 < (0.9255054911861607 + 1.3418130325556827)) then: act = 1 else: act = 0)) else: (if (3.3593399728680677 < -1.5197247759370192) then: (if ((-1.1985538091311194 + obs[3]) < (-1.1659241098113713 + 2.27942325553457)) then: (if ((obs[0] + (obs[1] + (obs[2] * obs[1]))) < obs[2]) then: (if (((obs[3] + obs[2]) + (obs[1] + 1.5824804513277893)) < (-0.0029262012654873715 * 0.9149058373746872)) then: (if (obs[3] < 1.7586086375979277) then: act = 0 else: (if (obs[0] < obs[1]) then: act = 0 else: (if (obs[3] < obs[2]) then: act = 1 else: act = 1))) else: act = 1) else: (if (0.6640006136748746 < ((-1.6060927975356123 + -1.5504174022216242) * (obs[3] * -1.9550224228722184))) then: (if (obs[2] < (1.1929036613174522 + obs[3])) then: (if (0.4624146098579906 < obs[0]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: act = 1) else: act = 0) else: (if ((-0.9293826875023969 * obs[0]) < -0.9299343522475645) then: (if (-0.8497059212777063 < obs[3]) then: act = 1 else: (if (2.465244043138917 < 1.5884286579202707) then: act = 0 else: act = 1)) else: act = 0))) else: act = 1) else: act = 1)) else: (if (1.7833052329317227 < (obs[1] * obs[2])) then: act = 1 else: (if (obs[2] < (obs[0] * obs[2])) then: (if (-0.014298437436087996 < obs[2]) then: act = 0 else: (if (0.5838683119786761 < -1.0252724749268909) then: act = 0 else: act = 0)) else: act = 0))))
498.29 (if (obs[2] < (-0.7862939911403843 * obs[3])) then: (if (obs[1] < (obs[0] * obs[0])) then: act = 0 else: act = 0) else: (if (obs[3] < (-1.8546312007986798 * -1.9371855614369249)) then: (if ((obs[2] * (obs[3] * -0.8146952778469604)) < 2.793102917416926) then: (if (((-1.0213013317904018 + obs[1]) + (obs[0] + -0.4611637412006242)) < -2.2909966334216305) then: act = 1 else: (if (-0.2715484966714612 < (1.128592180262844 + 1.3465530836846746)) then: act = 1 else: act = 0)) else: (if (3.4115134415159893 < -1.7134570417831485) then: (if ((-1.0978828380376182 + obs[3]) < (-1.14891681703886 + 2.1724543963287606)) then: (if ((obs[0] + (obs[1] + obs[2])) < obs[2]) then: (if (((obs[3] + obs[2]) + (obs[1] + 1.6479861588237428)) < (-0.14496810486069162 * 0.8375136035567747)) then: (if (obs[3] < 1.5680826081534243) then: act = 0 else: (if (obs[0] < obs[1]) then: act = 0 else: (if (obs[3] < obs[2]) then: act = 1 else: act = 1))) else: act = 1) else: (if (0.8843983194561326 < ((-1.5036553689328374 + -1.5850484245907457) * (obs[3] * -2.0832470537221512))) then: (if (obs[2] < (1.0872478371494634 + obs[3])) then: (if (0.4786166169025559 < obs[0]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: act = 1) else: act = 0) else: (if ((-0.7712722271057062 * obs[0]) < -0.6858067313855345) then: (if (-0.6838141297954909 < obs[3]) then: act = 1 else: (if (2.3583541473141976 < 1.4272196948993723) then: act = 0 else: act = 1)) else: act = 0))) else: act = 1) else: act = 1)) else: (if (1.7418184936138057 < (obs[1] * obs[2])) then: act = 1 else: (if (obs[2] < (obs[0] * obs[2])) then: (if (-0.04189000161666234 < obs[2]) then: act = 0 else: (if (0.5731906759320806 < -0.8372760074103565) then: act = 0 else: act = 0)) else: act = 0))))
