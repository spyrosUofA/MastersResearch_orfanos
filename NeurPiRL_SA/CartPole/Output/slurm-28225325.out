created virtual environment CPython3.8.10.final.0-64 in 31545ms
  creator CPython3Posix(dest=/localscratch/orfanos.28225325.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) then: act = 0 else: act = 1) else: act = 1) 9.35
74.92 (if (obs[1] < (obs[2] * max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43))) then: (if (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) < max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) then: (if ((max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) * obs[0]) < (-0.889837753278921 + 0.7500571874086724)) then: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < -2.0988337136840802) then: act = 0 else: (if (obs[0] < obs[2]) then: act = 0 else: act = 0)) else: act = 0) else: (if (0.9585110023512871 < obs[3]) then: act = 0 else: (if (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) < -0.17662205459144348) then: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43)) then: act = 1 else: act = 0) else: (if (-0.2038307026156011 < obs[2]) then: act = 1 else: act = 1)))) else: act = 0)
80.63 (if (obs[1] < (obs[2] * max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561))) then: (if (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) < max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) then: (if ((obs[1] + 1.7713644766822432) < -2.456378974135845) then: (if ((max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * obs[1]) < -4.144934542875612) then: act = 0 else: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < obs[1]) then: (if (obs[0] < max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) then: (if (obs[0] < max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) then: act = 1 else: act = 1) else: act = 1) else: (if (obs[3] < obs[3]) then: act = 0 else: (if ((max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) + max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) < -2.592563233931041) then: act = 1 else: act = 1)))) else: (if ((obs[3] * (obs[1] * -2.051677192602509)) < obs[1]) then: (if (-3.3983242141543353 < (obs[3] + obs[2])) then: (if (((obs[3] + max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43)) + obs[2]) < (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) * (2.077633468006713 * max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)))) then: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) + 1.440648986884316)) then: act = 1 else: act = 0) else: act = 0) else: (if (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) < max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) then: (if (obs[1] < obs[1]) then: act = 0 else: act = 1) else: act = 1)) else: (if ((max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) + obs[3]) < (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) + max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43))) then: (if (-2.0542944955538665 < obs[3]) then: act = 0 else: act = 0) else: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < -0.40696780609205657) then: act = 1 else: act = 1)))) else: act = 1) else: act = 0)
449.02 (if (1.133165801004013 < ((obs[1] * max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) + (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * (2.517523375693265 + 0.0662614757369634)))) then: act = 1 else: act = 0)
453.83 (if (1.8397699577132347 < (obs[0] + (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * (3.091557073865637 + 1.0006604569873074)))) then: act = 1 else: act = 0)
480.29 (if (1.730738725503761 < (obs[0] + (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * (3.5161793188543427 + 0.397581905991492)))) then: act = 1 else: act = 0)
481.05 (if (1.730738725503761 < (obs[0] + (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * (3.5161793188543427 + 0.397581905991492)))) then: act = 1 else: act = 0)
482.48 (if (1.730738725503761 < (obs[0] + (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * (3.5161793188543427 + 0.397581905991492)))) then: act = 1 else: act = 0)
500
(if (max(0, [-0.064  0.255  0.077  0.13 ] *dot* obs[:] + 0.003) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.139 -0.203  0.148 -0.343] *dot* obs[:] + 0.074)) then: act = 0 else: act = 1) else: act = 1) 9.35
188.61 (if (obs[3] < (max(0, [ 0.068  0.329 -0.208 -0.424] *dot* obs[:] + 0.05) * obs[2])) then: (if (1.8340440094051476 < -0.600840010764397) then: act = 0 else: (if (max(0, [ 0.121 -0.013 -0.285  0.358] *dot* obs[:] + 0.098) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) * obs[1]) < max(0, [ 0.068  0.329 -0.208 -0.424] *dot* obs[:] + 0.05)) then: act = 1 else: act = 1))
188.84 (if (obs[3] < (max(0, [ 0.068  0.329 -0.208 -0.424] *dot* obs[:] + 0.05) * obs[2])) then: (if (1.8340440094051476 < -0.600840010764397) then: act = 0 else: (if (max(0, [ 0.121 -0.013 -0.285  0.358] *dot* obs[:] + 0.098) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) * obs[1]) < max(0, [ 0.068  0.329 -0.208 -0.424] *dot* obs[:] + 0.05)) then: act = 1 else: act = 1))
190.92 (if (obs[3] < (max(0, [ 0.068  0.329 -0.208 -0.424] *dot* obs[:] + 0.05) * obs[2])) then: (if (1.8340440094051476 < -0.600840010764397) then: act = 0 else: (if (max(0, [ 0.121 -0.013 -0.285  0.358] *dot* obs[:] + 0.098) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) * obs[1]) < max(0, [ 0.068  0.329 -0.208 -0.424] *dot* obs[:] + 0.05)) then: act = 1 else: act = 1))
198.53 (if (obs[3] < (((max(0, [ 0.131 -0.055 -0.154 -0.001] *dot* obs[:] + -0.035) * (obs[1] * (obs[2] + max(0, [0.088 0.161 0.244 0.111] *dot* obs[:] + 0.047)))) * -1.4996568755479651) * obs[2])) then: (if (-1.2074449882435647 < 0.28045796300423526) then: act = 0 else: (if (-1.1976674273681605 < obs[1]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) * obs[1]) < max(0, [ 0.068  0.329 -0.208 -0.424] *dot* obs[:] + 0.05)) then: act = 1 else: act = 1))
204.32 (if (obs[3] < (obs[1] * obs[2])) then: (if (1.917022004702574 < 0.6109447031674722) then: act = 0 else: (if (-1.6452776673276484 < obs[1]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) * obs[1]) < max(0, [ 0.068  0.329 -0.208 -0.424] *dot* obs[:] + 0.05)) then: act = 1 else: act = 1))
231.14 (if (obs[3] < ((-0.09765313915909926 * ((-0.9892688211835429 + obs[3]) * obs[3])) * obs[3])) then: act = 0 else: (if (max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043) < -1.076795594370145) then: act = 1 else: (if (((obs[0] * obs[1]) * max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061)) < ((-0.25 * obs[3]) * -0.25)) then: (if (max(0, [-0.308 -0.416  0.263  0.073] *dot* obs[:] + 0.113) < obs[2]) then: (if (obs[1] < -1.1539790135653651) then: (if (max(0, [-0.157  0.17   0.193  0.22 ] *dot* obs[:] + 0.079) < obs[1]) then: act = 1 else: act = 1) else: act = 1) else: act = 1) else: (if (0.04461403773883341 < (max(0, [ 0.131 -0.055 -0.154 -0.001] *dot* obs[:] + -0.035) * max(0, [-0.068 -0.259 -0.12   0.123] *dot* obs[:] + 0.074))) then: act = 0 else: (if (max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061) < obs[2]) then: (if (max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) < -0.907938671208345) then: act = 1 else: act = 1) else: act = 0)))))
350.65 (if (max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107) < ((-0.25703591169367274 * ((-0.17114278300849406 + obs[3]) * obs[0])) * obs[3])) then: act = 0 else: (if (max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043) < -1.583477138977114) then: act = 1 else: (if (((obs[0] * obs[1]) * 0.5597416865728579) < ((-1.5000203924793905 * obs[3]) * -1.2276525936149598)) then: (if (obs[2] < 2.159549769759167) then: act = 1 else: act = 1) else: (if (0.7426135880958398 < (max(0, [ 0.131 -0.055 -0.154 -0.001] *dot* obs[:] + -0.035) * max(0, [-0.068 -0.259 -0.12   0.123] *dot* obs[:] + 0.074))) then: act = 0 else: (if (max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061) < obs[2]) then: (if (max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) < -1.626068998039793) then: act = 1 else: act = 1) else: act = 0)))))
375.72 (if (max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107) < ((-0.40831774930660414 * (obs[0] * obs[0])) * obs[3])) then: act = 0 else: (if (max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043) < max(0, [0.207 0.175 0.042 0.146] *dot* obs[:] + -0.042)) then: act = 1 else: (if ((((((1.1881815484585836 * max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011)) * obs[1]) + obs[1]) * obs[1]) * 0.8194414061347159) < ((-2.1404677720341265 * obs[3]) * -1.8242791093844233)) then: act = 1 else: (if (0.9280169562795357 < (max(0, [ 0.131 -0.055 -0.154 -0.001] *dot* obs[:] + -0.035) * max(0, [-0.068 -0.259 -0.12   0.123] *dot* obs[:] + 0.074))) then: act = 0 else: (if (max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061) < obs[2]) then: (if (max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) < -1.554621657935063) then: act = 1 else: act = 1) else: act = 0)))))
499.2 (if (max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107) < ((-0.068378397341542 * (obs[1] * obs[0])) * (max(0, [0.207 0.175 0.042 0.146] *dot* obs[:] + -0.042) * max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043)))) then: act = 0 else: (if (max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043) < max(0, [0.207 0.175 0.042 0.146] *dot* obs[:] + -0.042)) then: act = 1 else: (if ((((((obs[3] * -1.0385669946880558) * obs[1]) + obs[1]) * (-0.5135775614485747 + (obs[3] * -1.0175500951105558))) * 1.9172714026359867) < ((-2.05854478415903 * obs[3]) * -2.6361349551814435)) then: act = 1 else: (if (0.892647011269268 < (max(0, [ 0.131 -0.055 -0.154 -0.001] *dot* obs[:] + -0.035) * max(0, [-0.068 -0.259 -0.12   0.123] *dot* obs[:] + 0.074))) then: act = 0 else: (if (max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061) < obs[2]) then: (if (max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) < -1.5283685182209243) then: act = 1 else: act = 1) else: act = 0)))))
499.58 (if (max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107) < ((-0.068378397341542 * (obs[1] * obs[0])) * (max(0, [0.207 0.175 0.042 0.146] *dot* obs[:] + -0.042) * max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043)))) then: act = 0 else: (if (max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043) < max(0, [0.207 0.175 0.042 0.146] *dot* obs[:] + -0.042)) then: act = 1 else: (if ((((((obs[3] * -1.0385669946880558) * obs[1]) + obs[1]) * (-0.5135775614485747 + (obs[3] * -1.0175500951105558))) * 1.9172714026359867) < ((-2.05854478415903 * obs[3]) * -2.6361349551814435)) then: act = 1 else: (if (0.892647011269268 < (max(0, [ 0.131 -0.055 -0.154 -0.001] *dot* obs[:] + -0.035) * max(0, [-0.068 -0.259 -0.12   0.123] *dot* obs[:] + 0.074))) then: act = 0 else: (if (max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061) < obs[2]) then: (if (max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) < -1.5283685182209243) then: act = 1 else: act = 1) else: act = 0)))))
499.83 (if (max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107) < ((-0.068378397341542 * (obs[1] * obs[0])) * (max(0, [0.207 0.175 0.042 0.146] *dot* obs[:] + -0.042) * max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043)))) then: act = 0 else: (if (max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043) < max(0, [0.207 0.175 0.042 0.146] *dot* obs[:] + -0.042)) then: act = 1 else: (if ((((((obs[3] * -1.0385669946880558) * obs[1]) + obs[1]) * (-0.5135775614485747 + (obs[3] * -1.0175500951105558))) * 1.9172714026359867) < ((-2.05854478415903 * obs[3]) * -2.6361349551814435)) then: act = 1 else: (if (0.892647011269268 < (max(0, [ 0.131 -0.055 -0.154 -0.001] *dot* obs[:] + -0.035) * max(0, [-0.068 -0.259 -0.12   0.123] *dot* obs[:] + 0.074))) then: act = 0 else: (if (max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061) < obs[2]) then: (if (max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) < -1.5283685182209243) then: act = 1 else: act = 1) else: act = 0)))))
499.86 (if (max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107) < ((-0.068378397341542 * (obs[1] * obs[0])) * (max(0, [0.207 0.175 0.042 0.146] *dot* obs[:] + -0.042) * max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043)))) then: act = 0 else: (if (max(0, [ 0.226  0.066  0.002 -0.191] *dot* obs[:] + 0.043) < max(0, [0.207 0.175 0.042 0.146] *dot* obs[:] + -0.042)) then: act = 1 else: (if ((((((obs[3] * -1.0385669946880558) * obs[1]) + obs[1]) * (-0.5135775614485747 + (obs[3] * -1.0175500951105558))) * 1.9172714026359867) < ((-2.05854478415903 * obs[3]) * -2.6361349551814435)) then: act = 1 else: (if (0.892647011269268 < (max(0, [ 0.131 -0.055 -0.154 -0.001] *dot* obs[:] + -0.035) * max(0, [-0.068 -0.259 -0.12   0.123] *dot* obs[:] + 0.074))) then: act = 0 else: (if (max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061) < obs[2]) then: (if (max(0, [-0.06  -0.035  0.098 -0.138] *dot* obs[:] + 0.04) < -1.5283685182209243) then: act = 1 else: act = 1) else: act = 0)))))
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
69.2 (if (obs[3] < -1.4620959493920545) then: act = 1 else: (if ((obs[3] * ((1.2672160833123867 + obs[2]) * (obs[2] + -2.081403422805672))) < ((obs[2] + ((obs[0] * 0.773573963693974) + 0.3139300199231346)) * -0.8777707297669087)) then: act = 1 else: (if (((-1.568573445259453 + -2.6319033763250976) * obs[0]) < 0.7995648011249397) then: (if (obs[0] < -2.2407517177331515) then: act = 0 else: act = 0) else: (if (0.2396888291192944 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
114.0 (if (obs[3] < -1.959827208357332) then: act = 1 else: (if ((obs[3] * ((1.7479165433838808 + obs[2]) * (obs[1] + -2.894270333565092))) < ((obs[2] + ((obs[0] * obs[2]) + -0.05786716800382069)) * (obs[0] * (obs[1] * obs[3])))) then: act = 1 else: (if (obs[0] < 0.06025822567903244) then: (if (obs[0] < ((obs[3] + ((obs[3] * 2.005457305564475) + -1.7329264359595573)) * (1.7373710329618326 * -1.0639790470669963))) then: act = 0 else: act = 0) else: (if (-0.6508174623241232 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
176.74 (if (obs[3] < -1.4027427562988581) then: act = 0 else: (if (1.0418971315150505 < (obs[3] + 1.0462910633243128)) then: act = 1 else: (if (obs[0] < 0.9006277246000183) then: (if (obs[0] < ((-1.861837710086421 * 0.4575737009838651) * obs[1])) then: act = 0 else: act = 0) else: (if (0.5925802026678575 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
188.15 (if (obs[2] < -1.8631728344022807) then: act = 0 else: (if (0.354539847767193 < (obs[3] + 0.3537773744934626)) then: act = 1 else: (if (obs[0] < 1.5982575792942673) then: (if (obs[0] < 0.180013974341444) then: act = 0 else: act = 0) else: (if (1.1337333214728316 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
201.99 (if (obs[2] < -1.6664673395265435) then: act = 1 else: (if (0.4232771998403118 < (obs[3] + 0.42341554811884186)) then: act = 1 else: (if (-1.846304355645238 < 1.797095997787034) then: (if (obs[0] < 0.031824094045775825) then: act = 0 else: act = 0) else: (if (1.0974876116708485 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
204.45 (if (obs[2] < -1.6664673395265435) then: act = 1 else: (if (0.4232771998403118 < (obs[3] + 0.42341554811884186)) then: act = 1 else: (if (-1.846304355645238 < 1.797095997787034) then: (if (obs[0] < 0.031824094045775825) then: act = 0 else: act = 0) else: (if (1.0974876116708485 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
492.23 (if (((1.122667215453251 * obs[3]) + ((-0.3807299801761055 + obs[1]) + obs[2])) < -1.1426704043776172) then: act = 0 else: (if ((-0.48456683254833277 + (obs[2] + 0.49974590011554754)) < (obs[3] * -0.6186215812974912)) then: act = 0 else: act = 1))
498.35 (if (((1.278952089664448 * obs[3]) + ((-0.21683258278577922 + obs[1]) + obs[2])) < -0.8450292033568234) then: act = 0 else: (if ((-0.4197443877323296 + (obs[2] + 0.429218543525848)) < (obs[3] * -0.7026679549278613)) then: act = 0 else: act = 1))
500.0 (if ((-2.2633427903933216 * -1.9864709488711954) < (-1.5570289503446126 * obs[1])) then: act = 1 else: (if ((obs[2] * 0.9302500823110513) < (obs[3] * -0.46027518298469894)) then: act = 0 else: act = 1))
