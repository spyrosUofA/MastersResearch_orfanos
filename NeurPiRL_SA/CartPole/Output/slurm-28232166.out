created virtual environment CPython3.8.10.final.0-64 in 16171ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232166.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) + max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) < max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377)) then: act = 1 else: act = 1))) else: act = 1) 9.36
9.41 (if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) + max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) < max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377)) then: act = 1 else: act = 1))) else: act = 1)
167.76 (if (max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) < max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377)) then: (if (((max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) + ((max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) + obs[3]) + obs[2])) * max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) * obs[0])) then: act = 1 else: act = 1) else: act = 0)
264.53 (if ((0.5836160149827205 + (max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) + obs[2])) < (obs[3] + 0.9512850171855695)) then: (if ((obs[2] * max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377)) < ((obs[3] + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) + obs[0])) then: (if ((max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) * ((obs[3] + obs[2]) * (-0.914657236982987 + obs[3]))) < (((max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) * max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) + (1.9616239976179113 * obs[3])) * -2.045735633158103)) then: (if (obs[1] < max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) then: act = 0 else: (if ((-2.1799162584312657 * obs[1]) < 1.65767223245674) then: (if (max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) < max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377)) then: act = 0 else: act = 1) else: act = 1)) else: (if (obs[3] < obs[1]) then: act = 1 else: (if (obs[0] < (obs[0] * -1.4533463896111594)) then: act = 1 else: (if (obs[2] < -0.9851732275473886) then: act = 0 else: (if (max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) < obs[2]) then: act = 1 else: act = 1))))) else: act = 1) else: act = 0)
316.85 (if ((0.3744989048391292 + (max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) + obs[2])) < (obs[3] + 0.8499436831021892)) then: (if ((obs[2] * max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < ((max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) + obs[2])) then: (if ((obs[3] * (obs[1] * (-1.6174282536433051 + obs[3]))) < (((max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) * obs[1]) + (2.5112515306082246 * obs[3])) * -1.2553730583956697)) then: (if (obs[1] < max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) then: act = 0 else: (if ((-3.9582407702750424 * obs[1]) < 1.627303324336176) then: (if (obs[3] < obs[0]) then: act = 0 else: act = 1) else: act = 1)) else: (if (obs[3] < obs[1]) then: act = 1 else: (if (obs[0] < (obs[0] * -2.1072374784504584)) then: act = 1 else: (if (obs[2] < -0.32185377527647163) then: act = 0 else: (if (max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) < obs[2]) then: act = 1 else: act = 1))))) else: act = 1) else: act = 0)
340.96 (if ((-0.06347187367276236 + (max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) + obs[2])) < (obs[3] + 0.42974856913393833)) then: (if ((obs[2] * max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < ((max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) * ((max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) + obs[3]) * (max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)))) + obs[2])) then: (if ((obs[3] * (obs[1] * (-1.877962681197118 + obs[3]))) < (((max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) * obs[1]) + (1.8475271684186332 * obs[3])) * -2.214628116929453)) then: act = 0 else: (if (obs[3] < obs[1]) then: act = 1 else: (if (obs[0] < (obs[0] * -2.6469637588548416)) then: act = 1 else: (if (obs[2] < -0.3153654095362387) then: act = 0 else: (if (max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) < obs[2]) then: act = 1 else: act = 1))))) else: act = 1) else: act = 0)
401.75 (if (((obs[2] * obs[2]) + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (obs[3] + 0.3658554755603765)) then: (if (obs[0] < obs[1]) then: (if ((obs[3] * (obs[1] * ((((2.097494591994542 * obs[3]) * (1.1764551376310166 * (obs[2] * (0.8756713368429732 * (obs[0] * max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)))))) + ((obs[0] + 0.6079088146339835) + (max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) + obs[3]))) * ((((1.0454960224522312 + -2.0161791308239647) + (1.2496711231865867 * max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377))) * (obs[3] + (obs[2] + obs[2]))) * obs[3])))) < ((1.5429811642427949 + (1.7393743588314654 * obs[3])) * -1.7631198046994947)) then: act = 0 else: act = 1) else: act = 1) else: act = 0)
419.45 (if (((obs[2] * obs[2]) + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (obs[3] + 0.3658554755603765)) then: (if (obs[0] < obs[1]) then: (if ((obs[3] * (obs[1] * ((((2.097494591994542 * obs[3]) * (1.1764551376310166 * (obs[2] * (0.8756713368429732 * (obs[0] * max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)))))) + ((obs[0] + 0.6079088146339835) + (max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408) + obs[3]))) * ((((1.0454960224522312 + -2.0161791308239647) + (1.2496711231865867 * max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377))) * (obs[3] + (obs[2] + obs[2]))) * obs[3])))) < ((1.5429811642427949 + (1.7393743588314654 * obs[3])) * -1.7631198046994947)) then: act = 0 else: act = 1) else: act = 1) else: act = 0)
441.39 (if (((max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) * (0.08074066335772068 * (max(0, [ 0.789 -0.08   0.02  -1.183] *dot* obs[:] + 0.377) + (obs[3] + 1.8352385667418853)))) + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (obs[3] + 0.4432156288196158)) then: act = 1 else: act = 0)
453.33 (if (((obs[0] * (-1.922257273395084 + 2.0923074426815083)) + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (obs[3] + 0.37909290350496616)) then: act = 1 else: act = 0)
454.38 (if (((obs[0] * (-1.922257273395084 + 2.0923074426815083)) + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (obs[3] + 0.37909290350496616)) then: act = 1 else: act = 0)
455.8 (if (((obs[0] * (-1.922257273395084 + 2.0923074426815083)) + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (obs[3] + 0.37909290350496616)) then: act = 1 else: act = 0)
469.17 (if (((obs[0] * (-1.922257273395084 + 2.0923074426815083)) + max(0, [-0.421 -0.013 -2.091 -1.696] *dot* obs[:] + 0.408)) < (obs[3] + 0.37909290350496616)) then: act = 1 else: act = 0)
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.142  0.065 -0.016 -0.443] *dot* obs[:] + 0.059)) < (max(0, [-0.011 -0.058 -0.206 -0.214] *dot* obs[:] + 0.071) + max(0, [0.022 0.081 0.131 0.113] *dot* obs[:] + -0.044))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.116  0.12  -0.382  0.098] *dot* obs[:] + -0.048)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.098 -0.307 -0.192 -0.325] *dot* obs[:] + 0.145)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.315 -0.119  0.277  0.115] *dot* obs[:] + 0.081) < max(0, [ 0.025 -0.074 -0.35  -0.176] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1) 9.36
9.41 (if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.142  0.065 -0.016 -0.443] *dot* obs[:] + 0.059)) < (max(0, [-0.011 -0.058 -0.206 -0.214] *dot* obs[:] + 0.071) + max(0, [0.022 0.081 0.131 0.113] *dot* obs[:] + -0.044))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.116  0.12  -0.382  0.098] *dot* obs[:] + -0.048)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.098 -0.307 -0.192 -0.325] *dot* obs[:] + 0.145)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.315 -0.119  0.277  0.115] *dot* obs[:] + 0.081) < max(0, [ 0.025 -0.074 -0.35  -0.176] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1)
100.23 (if (max(0, [-0.113  0.137 -0.269 -0.179] *dot* obs[:] + 0.038) < max(0, [-0.166 -0.109  0.418  0.383] *dot* obs[:] + 0.093)) then: (if (((max(0, [-0.171  0.385  0.013  0.197] *dot* obs[:] + 0.164) + ((max(0, [-0.003 -0.129  0.266  0.001] *dot* obs[:] + -0.012) + obs[3]) + obs[2])) * max(0, [ 0.156 -0.009 -0.041  0.428] *dot* obs[:] + 0.11)) < (max(0, [0.306 0.26  0.147 0.058] *dot* obs[:] + -0.044) * obs[0])) then: act = 1 else: act = 1) else: act = 0)
167.26 (if ((obs[0] * ((max(0, [ 0.061  0.101 -0.011 -0.114] *dot* obs[:] + 0.07) * (-1.4638154493407791 + max(0, [0.022 0.081 0.131 0.113] *dot* obs[:] + -0.044))) * -2.239836998525924)) < obs[3]) then: (if (max(0, [ 0.156 -0.009 -0.041  0.428] *dot* obs[:] + 0.11) < (0.6511227825511418 + ((obs[2] + 1.5256537356346118) + (max(0, [ 0.048  0.123 -0.199 -0.424] *dot* obs[:] + 0.083) * (-1.0054761795726175 * obs[2]))))) then: act = 1 else: act = 1) else: act = 0)
254.97 (if (((obs[2] + 0.05078191651417635) * ((max(0, [ 0.217 -0.163 -0.041 -0.464] *dot* obs[:] + 0.101) * (1.818612493439916 + 1.1238978768941703)) * -1.6143333723508921)) < obs[3]) then: act = 1 else: act = 0)
312.01 (if (((obs[0] + -0.44921808348582365) * obs[1]) < obs[3]) then: act = 1 else: act = 0)
391.58 (if (((0.19476003197307246 + -0.5284112571502688) * obs[1]) < obs[3]) then: act = 1 else: act = 0)
392.57 (if (((0.19476003197307246 + -0.5284112571502688) * obs[1]) < obs[3]) then: act = 1 else: act = 0)
490.87 (if (((((((obs[0] * 0.021235009606633937) + obs[2]) * -0.9683119448304824) + (1.2290982999564417 * (-1.3288334769482644 * max(0, [-0.113  0.137 -0.269 -0.179] *dot* obs[:] + 0.038)))) + (0.6260603050329236 * (max(0, [ 0.219 -0.089  0.191  0.189] *dot* obs[:] + 0.101) * -1.132220138628867))) + max(0, [ 0.035 -0.112  0.477  0.091] *dot* obs[:] + 0.125)) < obs[3]) then: act = 1 else: act = 0)
494.64 (if (((((((obs[0] * 0.0139848174322114) + obs[2]) * -1.8433469369145907) + (1.458446359108122 * (-0.9083196893996711 * max(0, [-0.113  0.137 -0.269 -0.179] *dot* obs[:] + 0.038)))) + (0.6489243772263567 * (max(0, [ 0.219 -0.089  0.191  0.189] *dot* obs[:] + 0.101) * -1.508152006439547))) + max(0, [ 0.035 -0.112  0.477  0.091] *dot* obs[:] + 0.125)) < obs[3]) then: act = 1 else: act = 0)
498.4 (if (((((((obs[0] * 0.0139848174322114) + obs[2]) * -1.8433469369145907) + (1.458446359108122 * (-0.9083196893996711 * max(0, [-0.113  0.137 -0.269 -0.179] *dot* obs[:] + 0.038)))) + (0.6489243772263567 * (max(0, [ 0.219 -0.089  0.191  0.189] *dot* obs[:] + 0.101) * -1.508152006439547))) + max(0, [ 0.035 -0.112  0.477  0.091] *dot* obs[:] + 0.125)) < obs[3]) then: act = 1 else: act = 0)
500.0 (if ((((((max(0, [ 0.156 -0.009 -0.041  0.428] *dot* obs[:] + 0.11) + obs[2]) * -3.791838781667596) + (obs[2] * (1.028418861087395 * (-0.2559177966643318 + (0.9808713004649389 * (obs[1] + (max(0, [ 0.002 -0.094 -0.226 -0.255] *dot* obs[:] + 0.089) * ((obs[0] + max(0, [ 0.17  -0.104 -0.048 -0.003] *dot* obs[:] + 0.098)) * 1.901967044848636)))))))) + (-0.9542571449170457 * (max(0, [ 0.219 -0.089  0.191  0.189] *dot* obs[:] + 0.101) * -2.590642942494541))) + max(0, [ 0.035 -0.112  0.477  0.091] *dot* obs[:] + 0.125)) < obs[3]) then: act = 1 else: act = 0)
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
60.96 (if (((obs[1] + 0.06878703634075539) + 0.2888893477418369) < 0.04665992712134237) then: (if (obs[0] < -1.1654247485770268) then: (if (obs[2] < obs[0]) then: act = 0 else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < 1.9676611963091384) then: (if (obs[2] < obs[3]) then: act = 1 else: act = 0) else: act = 0))
116.79 (if (obs[3] < -0.011540021333659334) then: act = 0 else: (if (obs[2] < obs[3]) then: act = 1 else: act = 0))
163.38 (if (obs[3] < -0.0316263684866005) then: act = 0 else: (if (obs[2] < 1.0102693967825576) then: act = 1 else: act = 0))
455.71 (if (obs[3] < -0.06386383213943797) then: act = 0 else: (if (((-0.023112172940882 * (-1.0342275465062938 + (obs[1] + 2.0488891429674205))) + (obs[1] * (3.7092804193142426 * (obs[2] + obs[2])))) < (obs[3] + obs[2])) then: act = 1 else: act = 0))
500.0 (if ((((obs[3] + 1.241569180521536) * 0.19263183720524457) + (obs[3] * ((obs[0] * -1.0111318234968123) + (1.7938937774424972 + obs[3])))) < -0.16220046454558906) then: act = 0 else: (if (0.4449413176739799 < (((1.5858176000833104 + obs[2]) + -1.1297652701488314) + (obs[2] + (obs[2] + obs[3])))) then: act = 1 else: act = 0))
