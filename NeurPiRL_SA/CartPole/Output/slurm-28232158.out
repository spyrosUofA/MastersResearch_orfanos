created virtual environment CPython3.8.10.final.0-64 in 28723ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232158.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04)) < (max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 1 else: act = 1))) else: act = 1) 9.36
9.41 (if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04)) < (max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 1 else: act = 1))) else: act = 1)
82.89 (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < (((-2.2193093959405585 * (obs[1] * obs[3])) * (((0.02511289519311727 + obs[1]) * -1.5797932516106297) + obs[0])) * (max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) + 2.050576265818421))) then: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 1 else: act = 1) else: act = 0)
172.87 (if ((max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) * (max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) * max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332))) < ((-0.26411395882581373 * (((-1.887922179562618 + obs[0]) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) + ((max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) * obs[2]))) * 0.044688036828178346)) then: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 1 else: act = 1) else: act = 0)
179.56 (if ((max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) * (max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) * max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332))) < ((-0.26411395882581373 * (((-1.887922179562618 + obs[0]) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) + ((max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) * obs[2]))) * 0.044688036828178346)) then: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 1 else: act = 1) else: act = 0)
492.05 (if (max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) < ((0.46307761916483436 * (((-2.829367211632998 + obs[3]) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) + max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04))) * -0.33189599735618414)) then: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 1 else: act = 1) else: act = 0)
496.31 (if (max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) < ((0.46307761916483436 * (((-2.829367211632998 + obs[3]) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) + max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04))) * -0.33189599735618414)) then: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 1 else: act = 1) else: act = 0)
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.201 -0.387  0.023  0.235] *dot* obs[:] + 0.08)) < (max(0, [ 0.325 -0.088  0.46   0.161] *dot* obs[:] + 0.117) + max(0, [ 0.117  0.045 -0.04  -0.165] *dot* obs[:] + -0.068))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.113 -0.117 -0.322 -0.146] *dot* obs[:] + 0.116)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.078  0.204  0.139  0.109] *dot* obs[:] + -0.018)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.248 -0.193  0.025  0.016] *dot* obs[:] + -0.035) < max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1))) else: act = 1) 9.36
13.82 (if ((0.0026230450608519806 + max(0, [-0.078  0.204  0.139  0.109] *dot* obs[:] + -0.018)) < obs[2]) then: (if (((max(0, [ 0.017 -0.002  0.207 -0.228] *dot* obs[:] + 0.028) * max(0, [0.098 0.08  0.035 0.112] *dot* obs[:] + 0.1)) * max(0, [-0.201 -0.387  0.023  0.235] *dot* obs[:] + 0.08)) < (obs[0] * (obs[2] * obs[1]))) then: (if (-0.9036361611253694 < obs[3]) then: (if (obs[1] < (((((obs[2] * max(0, [-0.195 -0.2   -0.222 -0.142] *dot* obs[:] + 0.033)) * (max(0, [-0.078  0.204  0.139  0.109] *dot* obs[:] + -0.018) + max(0, [ 0.539 -0.006 -0.427 -0.423] *dot* obs[:] + 0.11))) * max(0, [-0.226  0.046 -0.168 -0.378] *dot* obs[:] + 0.084)) * obs[0]) * -2.266412149551417)) then: act = 0 else: act = 0) else: (if (-1.9937839230741035 < max(0, [-0.078  0.204  0.139  0.109] *dot* obs[:] + -0.018)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.248 -0.193  0.025  0.016] *dot* obs[:] + -0.035) < max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1))) else: act = 1)
48.93 (if ((obs[3] * max(0, [ 0.325 -0.088  0.46   0.161] *dot* obs[:] + 0.117)) < obs[1]) then: (if (max(0, [ 0.308 -0.451  0.016  0.201] *dot* obs[:] + 0.044) < 0.23324410951196414) then: (if (((max(0, [ 0.116 -0.195 -0.065 -0.241] *dot* obs[:] + 0.064) + (obs[0] + -1.597536205245337)) * (obs[1] * (0.8063881076190358 * obs[2]))) < (0.869223577454693 * 1.8053083270243888)) then: (if (obs[1] < max(0, [ 0.01  -0.002  0.106  0.017] *dot* obs[:] + -0.021)) then: act = 0 else: act = 0) else: (if ((0.8943698459734112 * obs[1]) < (obs[2] + max(0, [ 0.073 -0.158 -0.393 -0.166] *dot* obs[:] + 0.087))) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.248 -0.193  0.025  0.016] *dot* obs[:] + -0.035) < max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1))) else: act = 1)
108.49 (if (-0.9403645168246682 < (obs[2] * max(0, [ 0.189  0.003 -0.043  0.316] *dot* obs[:] + 0.095))) then: (if (obs[3] < max(0, [ 0.129 -0.095  0.294  0.099] *dot* obs[:] + 0.055)) then: (if (((-0.549436023638017 * max(0, [ 0.01  -0.002  0.106  0.017] *dot* obs[:] + -0.021)) * (obs[1] * (-0.27855248761748536 * obs[2]))) < (0.025736597029444808 * 0.4225803561880149)) then: (if (obs[1] < 2.112852439324208) then: act = 0 else: act = 0) else: (if ((-2.3629586688230733 * (max(0, [ 0.117  0.045 -0.04  -0.165] *dot* obs[:] + -0.068) * max(0, [-0.043 -0.426  0.026  0.361] *dot* obs[:] + 0.082))) < (obs[2] + max(0, [ 0.073 -0.158 -0.393 -0.166] *dot* obs[:] + 0.087))) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.248 -0.193  0.025  0.016] *dot* obs[:] + -0.035) < max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1))) else: act = 1)
195.78 (if (-1.0668904066508011 < (obs[3] * max(0, [ 0.189  0.003 -0.043  0.316] *dot* obs[:] + 0.095))) then: (if (obs[3] < (obs[2] * ((max(0, [-0.003  0.128  0.471 -0.081] *dot* obs[:] + 0.027) * (obs[1] * max(0, [ 0.026 -0.018 -0.002 -0.184] *dot* obs[:] + 0.03))) + obs[1]))) then: (if (((-1.1017552245851034 * obs[3]) * (0.4587753932324183 * -1.9490900998895917)) < (-0.0019332930860617714 * 1.5306475108363244)) then: (if (obs[1] < 1.8699464093934353) then: act = 0 else: act = 0) else: (if (max(0, [-0.339  0.089 -0.187 -0.056] *dot* obs[:] + -0.044) < ((((max(0, [-0.113 -0.117 -0.322 -0.146] *dot* obs[:] + 0.116) + max(0, [ 0.189  0.003 -0.043  0.316] *dot* obs[:] + 0.095)) * obs[0]) * 1.1078735421431771) * ((1.75422418178941 + obs[0]) + (max(0, [ 0.302  0.061  0.215 -0.487] *dot* obs[:] + 0.089) * max(0, [-0.209  0.125  0.202 -0.376] *dot* obs[:] + 0.05))))) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.248 -0.193  0.025  0.016] *dot* obs[:] + -0.035) < max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1))) else: act = 1)
200.28 (if (-0.0016362488429424449 < ((obs[3] + max(0, [ 0.179 -0.153 -0.098 -0.361] *dot* obs[:] + 0.096)) * (max(0, [0.097 0.165 0.019 0.195] *dot* obs[:] + 0.019) * max(0, [-0.049 -0.     0.159  0.39 ] *dot* obs[:] + 0.107)))) then: (if (obs[3] < (obs[2] * (((max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121) * (max(0, [-0.025  0.217  0.082 -0.041] *dot* obs[:] + 0.051) * (((max(0, [ 0.017 -0.002  0.207 -0.228] *dot* obs[:] + 0.028) * max(0, [ 0.189  0.003 -0.043  0.316] *dot* obs[:] + 0.095)) * obs[2]) + -0.5448918609428839))) * (-1.96252551122463 * max(0, [ 0.046 -0.14   0.364  0.259] *dot* obs[:] + 0.09))) + obs[2]))) then: (if (((-1.2050423874527127 * obs[3]) * (1.7560324065127069 * -2.789900380057939)) < (obs[3] * obs[3])) then: (if (obs[2] < -0.8442086242357676) then: act = 0 else: act = 0) else: (if (obs[0] < ((obs[0] * 0.33592233522928505) * ((0.8786282222938894 + obs[0]) + (max(0, [ 0.302  0.061  0.215 -0.487] *dot* obs[:] + 0.089) * max(0, [-0.209  0.125  0.202 -0.376] *dot* obs[:] + 0.05))))) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.248 -0.193  0.025  0.016] *dot* obs[:] + -0.035) < max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1))) else: act = 1)
205.78 (if (-0.0016362488429424449 < ((obs[3] + max(0, [ 0.179 -0.153 -0.098 -0.361] *dot* obs[:] + 0.096)) * (max(0, [0.097 0.165 0.019 0.195] *dot* obs[:] + 0.019) * max(0, [-0.049 -0.     0.159  0.39 ] *dot* obs[:] + 0.107)))) then: (if (obs[3] < (obs[2] * (((max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121) * (max(0, [-0.025  0.217  0.082 -0.041] *dot* obs[:] + 0.051) * (((max(0, [ 0.017 -0.002  0.207 -0.228] *dot* obs[:] + 0.028) * max(0, [ 0.189  0.003 -0.043  0.316] *dot* obs[:] + 0.095)) * obs[2]) + -0.5448918609428839))) * (-1.96252551122463 * max(0, [ 0.046 -0.14   0.364  0.259] *dot* obs[:] + 0.09))) + obs[2]))) then: (if (((-1.2050423874527127 * obs[3]) * (1.7560324065127069 * -2.789900380057939)) < (obs[3] * obs[3])) then: (if (obs[2] < -0.8442086242357676) then: act = 0 else: act = 0) else: (if (obs[0] < ((obs[0] * 0.33592233522928505) * ((0.8786282222938894 + obs[0]) + (max(0, [ 0.302  0.061  0.215 -0.487] *dot* obs[:] + 0.089) * max(0, [-0.209  0.125  0.202 -0.376] *dot* obs[:] + 0.05))))) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.248 -0.193  0.025  0.016] *dot* obs[:] + -0.035) < max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1))) else: act = 1)
238.08 (if (-0.23981780965577654 < ((max(0, [-0.003  0.128  0.471 -0.081] *dot* obs[:] + 0.027) + max(0, [-0.028  0.318  0.153 -0.257] *dot* obs[:] + 0.03)) * (((max(0, [ 0.539 -0.006 -0.427 -0.423] *dot* obs[:] + 0.11) + ((max(0, [ 0.07   0.028  0.101 -0.049] *dot* obs[:] + -0.019) * max(0, [-0.049 -0.     0.159  0.39 ] *dot* obs[:] + 0.107)) * (-1.9825515074995161 + max(0, [ 0.302  0.061  0.215 -0.487] *dot* obs[:] + 0.089)))) + -1.8130548001970546) * (obs[3] + ((obs[0] * max(0, [ 0.308 -0.451  0.016  0.201] *dot* obs[:] + 0.044)) + obs[1]))))) then: (if (obs[3] < (obs[2] * ((max(0, [ 0.081 -0.101  0.085 -0.287] *dot* obs[:] + 0.078) * (max(0, [ 0.325 -0.088  0.46   0.161] *dot* obs[:] + 0.117) * max(0, [0.097 0.165 0.019 0.195] *dot* obs[:] + 0.019))) + obs[2]))) then: act = 0 else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.248 -0.193  0.025  0.016] *dot* obs[:] + -0.035) < max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1))) else: act = 1)
425.6 (if (-0.0006326547654900705 < ((max(0, [-0.225 -0.224  0.305  0.111] *dot* obs[:] + 0.076) + max(0, [-0.028  0.318  0.153 -0.257] *dot* obs[:] + 0.03)) * (((max(0, [-0.225 -0.224  0.305  0.111] *dot* obs[:] + 0.076) + (obs[2] * (-2.3246345596425533 + -1.1442012082919302))) + -2.6113299713506395) * (obs[3] + ((obs[1] * -0.7853758723655782) + obs[1]))))) then: (if ((-1.7769681372070214 * (max(0, [ 0.173  0.125  0.321 -0.1  ] *dot* obs[:] + -0.035) * (-0.03269613059677656 * 1.1732036361685383))) < (1.829606833795706 + max(0, [-0.135 -0.157 -0.173 -0.307] *dot* obs[:] + 0.109))) then: act = 0 else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.248 -0.193  0.025  0.016] *dot* obs[:] + -0.035) < max(0, [-0.094  0.079  0.276  0.302] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1))) else: act = 1)
429.29 (if (obs[3] < ((-0.8230123536802556 + 2.3974439577137514) * (((-0.4745177991083413 + (max(0, [0.009 0.149 0.121 0.203] *dot* obs[:] + 0.113) * (((obs[2] + (-2.185668692637043 + 2.152342098010358)) + (((max(0, [-0.347 -0.285  0.136 -0.258] *dot* obs[:] + 0.005) * max(0, [ 0.173  0.125  0.321 -0.1  ] *dot* obs[:] + -0.035)) * -1.112942122055739) + obs[0])) + obs[2]))) + -0.8178661084042649) * (obs[3] + ((obs[1] * -0.6468943799828963) + obs[1]))))) then: act = 0 else: act = 1)
440.84 (if (obs[3] < ((-0.8224041278367121 + 2.400487374470071) * (((-0.7221860377408165 + (max(0, [0.009 0.149 0.121 0.203] *dot* obs[:] + 0.113) * (((obs[2] + (-2.1539806374675257 + 2.3406230322220214)) + (((max(0, [-0.347 -0.285  0.136 -0.258] *dot* obs[:] + 0.005) * max(0, [ 0.173  0.125  0.321 -0.1  ] *dot* obs[:] + -0.035)) * 1.0887924201139547) + obs[0])) + obs[2]))) + -0.9584557152395785) * (obs[3] + ((obs[1] * -0.6879762579815385) + obs[1]))))) then: act = 0 else: act = 1)
500.0 (if (obs[2] < ((obs[3] + 1.011636823470947) * (((obs[0] + (obs[3] * max(0, [ 0.046 -0.14   0.364  0.259] *dot* obs[:] + 0.09))) + -2.3995821691103663) * (obs[3] + ((obs[1] * -0.8204616066059878) + obs[1]))))) then: act = 0 else: act = 1)
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
393.52 (if ((obs[3] * 3.6346843940308493) < (obs[1] * (obs[1] + obs[2]))) then: (if (obs[1] < obs[1]) then: act = 0 else: (if ((((-0.9939131664873613 * obs[1]) * obs[1]) * -0.9849531888462195) < (-1.1192580100632084 * (obs[2] * (obs[0] * -2.811481294276291)))) then: (if (obs[0] < -1.5497094212121105) then: act = 1 else: act = 0) else: (if (0.044586264074231 < obs[2]) then: act = 1 else: (if (obs[3] < obs[3]) then: act = 1 else: act = 0)))) else: act = 1)
430.89 (if ((obs[3] * 4.6736034500407415) < (obs[1] * (-1.1327161088927422 + obs[2]))) then: (if (obs[2] < obs[2]) then: act = 0 else: (if (obs[0] < -2.168850700748843) then: (if ((obs[2] * -1.2023753531195156) < -0.7638769845457449) then: act = 1 else: act = 0) else: (if (0.6109446979639482 < obs[2]) then: act = 1 else: (if (obs[3] < obs[3]) then: act = 1 else: act = 0)))) else: act = 1)
431.04 (if ((obs[3] * 4.989553251894472) < (obs[1] * (-1.206455581179962 + obs[2]))) then: (if (((obs[0] * ((((-0.9475822630403539 * obs[3]) * -1.1470728720692676) + 1.2331140567173686) + ((obs[3] * obs[3]) + 2.0617815922810654))) + obs[2]) < obs[2]) then: act = 0 else: (if (1.0761909890516106 < obs[2]) then: act = 1 else: (if (obs[3] < obs[3]) then: act = 1 else: act = 0))) else: act = 1)
435.29 (if ((obs[3] * 4.989553251894472) < (obs[1] * (-1.206455581179962 + obs[2]))) then: (if (((obs[0] * ((((-0.9475822630403539 * obs[3]) * -1.1470728720692676) + 1.2331140567173686) + ((obs[3] * obs[3]) + 2.0617815922810654))) + obs[2]) < obs[2]) then: act = 0 else: (if (1.0761909890516106 < obs[2]) then: act = 1 else: (if (obs[3] < obs[3]) then: act = 1 else: act = 0))) else: act = 1)
448.04 (if ((obs[3] * 4.9294964638342496) < (obs[1] * (-0.9862832802999493 + obs[2]))) then: (if (0.004898948850534213 < ((((-0.066938970330712 * obs[1]) * -0.5128587351308408) + obs[0]) + obs[0])) then: act = 0 else: (if (0.9220260266242783 < obs[2]) then: act = 1 else: (if (obs[3] < obs[3]) then: act = 1 else: act = 0))) else: act = 1)
449.92 (if ((obs[3] * 1.98389374229115) < (obs[1] * -0.3738361407400273)) then: act = 0 else: act = 1)
450.78 (if ((obs[3] * 1.98389374229115) < (obs[1] * -0.3738361407400273)) then: act = 0 else: act = 1)
