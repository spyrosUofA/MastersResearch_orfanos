created virtual environment CPython3.8.10.final.0-64 in 13730ms
  creator CPython3Posix(dest=/localscratch/orfanos.28220344.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 0 else: act = 1) else: act = 1) 9.35
194.89 (if (obs[3] < (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[2])) then: (if (1.8755330070538607 < -0.711002257485476) then: act = 0 else: (if (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1]) < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 1 else: act = 1))
196.58 (if (obs[3] < (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[2])) then: (if (1.8755330070538607 < -0.711002257485476) then: act = 0 else: (if (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1]) < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 1 else: act = 1))
198.24 (if (obs[3] < ((obs[3] * (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[2])) * (2.1503722843377684 * -0.7658692121403012))) then: (if (1.5610787413017282 < 1.5340608188168203) then: act = 1 else: (if ((max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) * (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * -0.0026724058494230762)) < 1.4529385738726928) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1]) < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 1 else: act = 1))
200.83 (if (obs[3] < ((obs[1] * (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[2])) * (2.276750061207175 * -0.9826009714632438))) then: (if (1.6259374948125105 < 1.38914782377424) then: act = 1 else: (if ((max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) * (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * 0.14970487602224963)) < 1.3330961231619631) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1]) < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 1 else: act = 1))
207.41 (if (obs[3] < ((obs[1] * (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[2])) * (2.276750061207175 * -0.9826009714632438))) then: (if (1.6259374948125105 < 1.38914782377424) then: act = 1 else: (if ((max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) * (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * 0.14970487602224963)) < 1.3330961231619631) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1]) < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 1 else: act = 1))
444.59 (if (obs[3] < (-0.21732302803585496 * obs[1])) then: (if (-0.8791081761031203 < ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) + -0.9836185521386703) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48))) then: act = 0 else: (if ((obs[0] + obs[0]) < ((-1.8476227181283273 + -0.15328285868833613) + ((obs[2] + max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) * -2.18026955956003))) then: (if (obs[0] < (1.2623351545618668 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024))) then: act = 1 else: act = 1) else: act = 0)) else: (if ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1]) < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 1 else: act = 1))
498.39 (if (obs[2] < (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) + ((-0.6174150472729353 + (-0.06706592472488865 * ((obs[1] + -1.54453170801663) + obs[1]))) + obs[2]))) then: (if (((obs[0] * obs[1]) + (((obs[1] + (obs[2] + obs[1])) + obs[3]) * 2.539341049027497)) < 1.026174219546935) then: act = 0 else: (if ((max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) < -0.9970274825721205) then: (if (obs[3] < (-2.4252645766013465 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024))) then: act = 1 else: act = 1) else: act = 0)) else: (if ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1]) < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 1 else: act = 1))
500
(if (max(0, [ 0.016  0.165 -0.097 -0.372] *dot* obs[:] + 0.037) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.1    0.098 -0.043  0.474] *dot* obs[:] + 0.136)) then: act = 0 else: act = 1) else: act = 1) 9.35
153.37 (if (obs[3] < (max(0, [-0.029 -0.247  0.15   0.07 ] *dot* obs[:] + 0.059) * obs[1])) then: (if (1.6265990211615822 < -0.05002877715900189) then: act = 0 else: (if (1.500114374817345 < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139) * obs[1]) < max(0, [-0.029 -0.247  0.15   0.07 ] *dot* obs[:] + 0.059)) then: act = 1 else: act = 1))
308.47 (if (obs[3] < (max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131) * obs[1])) then: (if (1.3433947787857594 < (((max(0, [-0.1    0.098 -0.043  0.474] *dot* obs[:] + 0.136) * obs[1]) * obs[2]) + ((obs[0] * obs[2]) + obs[0]))) then: act = 1 else: (if (max(0, [-0.219 -0.142  0.131 -0.045] *dot* obs[:] + -0.078) < max(0, [-0.055  0.022  0.179  0.418] *dot* obs[:] + 0.138)) then: (if ((1.656173924855181 * obs[2]) < max(0, [ 0.068  0.076  0.315 -0.278] *dot* obs[:] + 0.013)) then: (if (obs[1] < obs[3]) then: act = 0 else: act = 0) else: (if (-1.9926902069480648 < max(0, [-0.175  0.196  0.276 -0.076] *dot* obs[:] + 0.078)) then: (if (obs[2] < obs[2]) then: act = 0 else: act = 1) else: act = 0)) else: act = 0)) else: (if ((max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139) * obs[1]) < max(0, [-0.029 -0.247  0.15   0.07 ] *dot* obs[:] + 0.059)) then: act = 1 else: act = 1))
500.0 (if (obs[3] < (((2.1673128359486866 + max(0, [-0.08   0.057 -0.311  0.125] *dot* obs[:] + 0.02)) * (0.7591441386720958 + -0.8749278425275162)) * obs[1])) then: (if (1.3432978792966976 < 0.13392992747742072) then: act = 1 else: (if (max(0, [-0.219 -0.142  0.131 -0.045] *dot* obs[:] + -0.078) < max(0, [-0.055  0.022  0.179  0.418] *dot* obs[:] + 0.138)) then: (if ((2.259697291042504 * obs[2]) < max(0, [ 0.068  0.076  0.315 -0.278] *dot* obs[:] + 0.013)) then: (if (obs[1] < obs[3]) then: act = 0 else: act = 0) else: (if (-1.8049709829809248 < max(0, [-0.175  0.196  0.276 -0.076] *dot* obs[:] + 0.078)) then: (if (obs[2] < obs[2]) then: act = 0 else: act = 1) else: act = 0)) else: act = 0)) else: (if ((max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139) * obs[1]) < max(0, [-0.029 -0.247  0.15   0.07 ] *dot* obs[:] + 0.059)) then: act = 1 else: act = 1))
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
189.57 (if ((obs[0] * (obs[2] * 0.9011662863159199)) < (obs[3] * -1.041488997648713)) then: act = 0 else: (if (obs[1] < 0.7727142534826702) then: act = 1 else: (if (obs[3] < -2.029751788956985) then: (if ((obs[2] * obs[2]) < -2.809159535214964) then: (if (0.5539356922936787 < -2.4461615371036993) then: act = 0 else: (if (0.08529358748688431 < -1.492955904230906) then: act = 1 else: act = 1)) else: act = 0) else: (if (0.17614620788361934 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
194.77 (if ((obs[0] * obs[2]) < (obs[3] * -2.688232971570417)) then: act = 0 else: (if (obs[1] < 1.2222417620455068) then: act = 1 else: (if (-0.28907937220118546 < (-0.3796845663734573 * 0.7051895474844394)) then: (if ((obs[3] + 1.9008955427108272) < -0.9438266781124414) then: (if ((2.0537797316175688 + -1.0978508454031943) < obs[1]) then: (if (((((-2.206623636562986 * obs[0]) + (obs[2] * -1.6106109202766126)) + (-1.307964521571522 + (obs[3] + -2.048792612976752))) * 0.13227607722036233) < 0.5706694681784652) then: (if (1.1790577840498797 < obs[1]) then: act = 0 else: act = 1) else: (if (-0.9855924216389105 < -1.9069412924127747) then: act = 1 else: act = 0)) else: act = 0) else: (if ((obs[1] + -2.18435598954398) < (obs[3] + -1.4261855826672003)) then: (if (obs[2] < obs[1]) then: (if (-1.8414956114245402 < 1.7807759272156019) then: act = 0 else: act = 1) else: (if (obs[2] < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) else: act = 1)))
200.96 (if ((obs[0] * obs[3]) < (obs[3] * -2.363660291285291)) then: act = 0 else: (if (obs[1] < 0.49456218462164586) then: act = 1 else: (if (-0.3768869061540729 < (-0.38626100414468095 * 1.5880295925740762)) then: (if ((obs[3] + 1.4997661928782522) < obs[1]) then: (if ((1.9652478537646263 + -1.7278287637348753) < obs[1]) then: act = 0 else: act = 0) else: (if ((obs[1] + -1.9003514306959923) < (obs[3] + -1.8691501496202647)) then: (if (obs[2] < obs[1]) then: (if (-2.3420778093252985 < 0.8450255109783802) then: act = 0 else: act = 1) else: (if (obs[2] < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) else: act = 1)))
500.0 (if (((((((((obs[3] * ((1.676247520551954 + 1.4566300858277559) + (obs[2] + obs[1]))) + (((2.1209899550489837 + obs[3]) + (-0.9795670477604931 * -0.07055706859036566)) + obs[2])) + -1.689168015534632) + (((((obs[2] * -0.6505928585240449) + obs[3]) + ((2.25 + 0.2723531328275052) + obs[3])) * (((-0.3058953932209643 * obs[1]) * obs[3]) + ((-0.8483752234707989 * -0.44057386546696836) * obs[2]))) + 1.9546601994635489)) + (2.965055742370297 * 2.318683576372381)) + obs[2]) + obs[0]) * obs[2]) < (obs[3] * -2.572832314494941)) then: act = 0 else: act = 1)
