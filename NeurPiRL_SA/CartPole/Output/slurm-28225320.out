created virtual environment CPython3.8.10.final.0-64 in 34610ms
  creator CPython3Posix(dest=/localscratch/orfanos.28225320.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
479
(if (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 0 else: act = 1) else: act = 1) 9.35
187.02 (if (obs[3] < (max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * obs[2])) then: (if (1.6265990211615822 < -0.05002877715900189) then: act = 0 else: (if (1.500114374817345 < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
198.24 (if (obs[3] < ((obs[3] * (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[2])) * (1.7500571874086726 * -1.0988337136840802))) then: (if (1.2946870399718786 < 0.8312691966096302) then: act = 1 else: (if ((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * -0.3026644162996812)) < 1.3234923202259017) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
232.5 (if (obs[3] < (obs[1] * ((obs[0] + obs[1]) * (max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * (-0.7165798393499612 + ((-0.7308225971381461 + obs[0]) + -0.34067948396002534)))))) then: (if (0.7381528801067252 < 0.4480516636370992) then: act = 1 else: (if (obs[0] < -0.3981710869988086) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
317.52 (if (obs[3] < (obs[1] * ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * ((-1.7708851424217618 + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) + max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068))) * (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * 0.8731045204745119)))) then: (if (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) < max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
436.58 (if (obs[3] < (obs[1] * ((3.7095082383068783 * ((0.5679897646118248 + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) + (-2.3772228154661272 + 1.446173563749504))) * obs[1]))) then: (if (-0.7749119403764602 < ((obs[1] + (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * (-0.9752260392457187 + obs[0]))) * (-1.7921968251168627 + 1.0707831044731688))) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
493.73 (if (obs[3] < (((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * ((-0.8089486239842414 + 1.2054056749610929) * (-2.29926020826523 + obs[0]))) + -0.3386595015816268) + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41))) then: (if (-0.46925394154895145 < ((obs[1] + (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * (obs[2] + (0.9951170165912282 + (obs[2] + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)))))) * (-1.7676911131287518 + 0.8859503937501927))) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
495.11 (if (obs[3] < (((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * ((-0.8089486239842414 + 1.2054056749610929) * (-2.29926020826523 + obs[0]))) + -0.3386595015816268) + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41))) then: (if (-0.46925394154895145 < ((obs[1] + (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * (obs[2] + (0.9951170165912282 + (obs[2] + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)))))) * (-1.7676911131287518 + 0.8859503937501927))) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
497.51 (if (obs[3] < (((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * ((-0.8089486239842414 + 1.2054056749610929) * (-2.29926020826523 + obs[0]))) + -0.3386595015816268) + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41))) then: (if (-0.46925394154895145 < ((obs[1] + (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * (obs[2] + (0.9951170165912282 + (obs[2] + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)))))) * (-1.7676911131287518 + 0.8859503937501927))) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
498.93 (if (obs[2] < (((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * ((-2.208892499282812 + 2.3554933978530435) * (-3.09079028524554 + obs[0]))) + -0.38861342472001487) + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41))) then: (if (-0.9707170484920391 < ((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) + obs[2]) * obs[2])) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
499.67 (if (obs[2] < (((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * ((-2.208892499282812 + 2.3554933978530435) * (-3.09079028524554 + obs[0]))) + -0.38861342472001487) + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41))) then: (if (-0.9707170484920391 < ((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) + obs[2]) * obs[2])) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * obs[1]) < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 1 else: act = 1))
500
(if (max(0, [ 0.164 -0.078  0.005  0.184] *dot* obs[:] + 0.046) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [ 0.039 -0.379  0.129  0.209] *dot* obs[:] + 0.077)) then: act = 0 else: act = 1) else: act = 1) 9.35
154.64 (if (obs[3] < ((max(0, [ 0.056 -0.322  0.083  0.182] *dot* obs[:] + 0.051) + max(0, [ 0.099  0.17  -0.316  0.319] *dot* obs[:] + 0.04)) * obs[0])) then: (if ((2.110162246721079 + 0.7500571874086724) < 1.958511002351287) then: act = 0 else: (if (max(0, [0.082 0.024 0.092 0.164] *dot* obs[:] + 0.069) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.169  0.134  0.044 -0.472] *dot* obs[:] + 0.096) * obs[1]) < max(0, [-0.194  0.177 -0.001 -0.048] *dot* obs[:] + -0.065)) then: act = 1 else: act = 1))
313.24 (if (obs[3] < ((-0.31631936204454353 + max(0, [ 0.19  -0.256 -0.135  0.124] *dot* obs[:] + 0.104)) * obs[1])) then: (if ((2.6289376256708774 + 2.234198642288947) < max(0, [ 0.109 -0.21  -0.286 -0.327] *dot* obs[:] + 0.103)) then: (if (((1.058739756878895 * max(0, [ 0.19  -0.256 -0.135  0.124] *dot* obs[:] + 0.104)) * max(0, [ 0.109 -0.21  -0.286 -0.327] *dot* obs[:] + 0.103)) < (((-2.239810338377415 + obs[2]) * obs[2]) + (obs[0] * (obs[2] * obs[1])))) then: (if (0.6326248886101642 < ((max(0, [ 0.214 -0.086  0.575  0.062] *dot* obs[:] + 0.089) + max(0, [ 0.155 -0.051 -0.242 -0.132] *dot* obs[:] + -0.031)) * (max(0, [0.082 0.024 0.092 0.164] *dot* obs[:] + 0.069) + -1.1599833579067556))) then: (if (max(0, [ 0.043 -0.307  0.149  0.06 ] *dot* obs[:] + 0.041) < obs[0]) then: act = 1 else: act = 0) else: act = 1) else: (if (1.3973651669512934 < -0.3607517991227209) then: act = 0 else: act = 1)) else: (if (max(0, [ 0.064 -0.013 -0.007  0.312] *dot* obs[:] + 0.097) < max(0, [0.164 0.008 0.205 0.199] *dot* obs[:] + 0.098)) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.169  0.134  0.044 -0.472] *dot* obs[:] + 0.096) * obs[1]) < max(0, [-0.194  0.177 -0.001 -0.048] *dot* obs[:] + -0.065)) then: act = 1 else: act = 1))
338.64 (if (obs[3] < ((-0.5468319543081258 + max(0, [ 0.069 -0.224 -0.151 -0.33 ] *dot* obs[:] + 0.11)) * obs[1])) then: (if (((max(0, [-0.182 -0.05  -0.17  -0.234] *dot* obs[:] + 0.124) + (1.8740366360862388 + (obs[0] + (obs[3] * -0.897289737151086)))) + ((((obs[0] * obs[3]) * 0.8621923474750077) * max(0, [-0.197 -0.101 -0.102 -0.247] *dot* obs[:] + 0.068)) * (1.6365290471727236 * (max(0, [ 0.116  0.257 -0.237 -0.042] *dot* obs[:] + 0.053) * (obs[3] * max(0, [ 0.18  -0.09  -0.145  0.05 ] *dot* obs[:] + -0.071)))))) < (-0.2109820655053372 * (max(0, [ 0.047 -0.185 -0.26   0.057] *dot* obs[:] + 0.009) * obs[2]))) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.169  0.134  0.044 -0.472] *dot* obs[:] + 0.096) * obs[1]) < max(0, [-0.194  0.177 -0.001 -0.048] *dot* obs[:] + -0.065)) then: act = 1 else: act = 1))
384.71 (if (obs[3] < ((-0.4194768044596424 + max(0, [ 0.009 -0.089 -0.158 -0.393] *dot* obs[:] + 0.126)) * obs[1])) then: (if ((-1.1461027088473863 * obs[0]) < obs[2]) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.169  0.134  0.044 -0.472] *dot* obs[:] + 0.096) * obs[1]) < max(0, [-0.194  0.177 -0.001 -0.048] *dot* obs[:] + -0.065)) then: act = 1 else: act = 1))
416.52 (if (obs[3] < ((-0.3742318054538211 + max(0, [ 0.009 -0.089 -0.158 -0.393] *dot* obs[:] + 0.126)) * obs[1])) then: (if ((obs[2] * obs[0]) < obs[2]) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.169  0.134  0.044 -0.472] *dot* obs[:] + 0.096) * obs[1]) < max(0, [-0.194  0.177 -0.001 -0.048] *dot* obs[:] + -0.065)) then: act = 1 else: act = 1))
437.42 (if (obs[3] < ((-0.3247829533831739 + max(0, [0.044 0.056 0.211 0.181] *dot* obs[:] + 0.092)) * obs[1])) then: (if (obs[1] < -0.22519748760342315) then: act = 0 else: act = 0) else: (if ((max(0, [ 0.169  0.134  0.044 -0.472] *dot* obs[:] + 0.096) * obs[1]) < max(0, [-0.194  0.177 -0.001 -0.048] *dot* obs[:] + -0.065)) then: act = 1 else: act = 1))
500.0 (if (obs[3] < ((-0.3826590189096026 + max(0, [0.044 0.056 0.211 0.181] *dot* obs[:] + 0.092)) * obs[1])) then: (if (max(0, [ 0.096 -0.006 -0.014 -0.3  ] *dot* obs[:] + 0.114) < obs[2]) then: (if ((((max(0, [-0.032  0.022  0.203 -0.089] *dot* obs[:] + -0.021) * ((-1.2457030267804667 + (-0.6894143721595201 + max(0, [-0.032  0.022  0.203 -0.089] *dot* obs[:] + -0.021))) * obs[0])) * (1.1511318936255073 + max(0, [ 0.106 -0.133 -0.178 -0.008] *dot* obs[:] + -0.004))) * obs[0]) < ((max(0, [-0.024  0.096  0.065  0.596] *dot* obs[:] + 0.145) * -1.889837753278921) * obs[2])) then: act = 0 else: (if (max(0, [ 0.016 -0.035  0.014 -0.157] *dot* obs[:] + 0.024) < (((max(0, [-0.067  0.176  0.06  -0.048] *dot* obs[:] + -0.086) * max(0, [ 0.122  0.033  0.228 -0.123] *dot* obs[:] + 0.116)) + (max(0, [-0.024  0.096  0.065  0.596] *dot* obs[:] + 0.145) * obs[3])) + (1.7726056582958611 + obs[2]))) then: (if (1.63784006154915 < -0.07617417015209066) then: act = 1 else: act = 1) else: act = 0)) else: act = 0) else: (if ((max(0, [ 0.169  0.134  0.044 -0.472] *dot* obs[:] + 0.096) * obs[1]) < max(0, [-0.194  0.177 -0.001 -0.048] *dot* obs[:] + -0.065)) then: act = 1 else: act = 1))
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
9.36 (if (obs[3] < obs[0]) then: act = 1 else: (if ((obs[3] * obs[0]) < (((-1.8542557883551973 + (1.6605687348853824 + -0.42582844905141776)) + 0.917760588710061) * 0.024223353425173205)) then: act = 1 else: (if (obs[1] < 2.1426480141108093) then: act = 0 else: (if (obs[0] < obs[2]) then: act = 1 else: (if ((obs[0] * obs[2]) < obs[2]) then: (if (obs[0] < 2.019220296297272) then: act = 0 else: act = 1) else: (if (obs[1] < 1.1833041370832564) then: (if (-1.7750970043231868 < obs[3]) then: act = 0 else: act = 1) else: (if (obs[2] < obs[1]) then: act = 0 else: act = 0)))))))
52.2 (if ((((obs[3] + (obs[0] + 1.9298587776442433)) * (((obs[2] + obs[0]) * -1.4501768282351124) + 0.9474909811064982)) + (((-1.3200182000502396 + (obs[3] + obs[3])) + -1.611564938859908) + 0.6596199549889713)) < obs[1]) then: act = 0 else: act = 1)
438.92 (if ((((0.18265528400028164 + (obs[1] + 1.8925010189967404)) * ((obs[3] + ((1.3891440298388311 + -0.10319292581316025) * obs[3])) + 1.7090801541577496)) + (((-2.288763097119684 + (obs[3] + obs[3])) + -2.054414653598866) + 0.9072955514132746)) < obs[1]) then: act = 0 else: act = 1)
500.0 (if ((((-2.111201078810501 * obs[3]) + (-0.3249715243076356 * (((obs[2] + (obs[2] + obs[1])) + obs[3]) + obs[1]))) * (-2.3053601104989863 + -1.2133936928627431)) < ((1.9995834004664905 + -1.1705223724440779) + -0.9625546902496476)) then: act = 0 else: act = 1)
