created virtual environment CPython3.8.10.final.0-64 in 29074ms
  creator CPython3Posix(dest=/localscratch/orfanos.28225319.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04)) then: act = 0 else: act = 1) else: act = 1) 9.35
188.33 (if (obs[3] < (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) * obs[2])) then: (if (1.8755330070538607 < -0.711002257485476) then: act = 0 else: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) * obs[1]) < max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04)) then: act = 1 else: act = 1))
490.61 (if ((-0.32585960335032693 + 0.8409655887868068) < ((max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) + 0.9328901428139147) + (2.227791822636049 * -0.34965438640785257))) then: (if ((((max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) * (-0.8349352647231656 + obs[2])) + obs[2]) * (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) * (1.653984815343519 * max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04)))) < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 0 else: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < obs[2]) then: act = 1 else: act = 0)) else: (if (-2.0747484718198033 < obs[0]) then: act = 1 else: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < obs[0]) then: act = 1 else: act = 0)))
492.98 (if ((-0.32585960335032693 + 0.8409655887868068) < ((max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) + 0.9328901428139147) + (2.227791822636049 * -0.34965438640785257))) then: (if ((((max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) * (-0.8349352647231656 + obs[2])) + obs[2]) * (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) * (1.653984815343519 * max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04)))) < max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) then: act = 0 else: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < obs[2]) then: act = 1 else: act = 0)) else: (if (-2.0747484718198033 < obs[0]) then: act = 1 else: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < obs[0]) then: act = 1 else: act = 0)))
499.47 (if ((-0.5023466437276944 + 0.6861191297677047) < ((max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) + ((-0.6879285064586076 + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) + max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04))) + (obs[1] * -0.11033717914082308))) then: (if ((max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) + ((max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) + (obs[2] + 2.4353837393079734))) < (obs[2] * 0.40735472263867084)) then: act = 0 else: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < obs[2]) then: act = 1 else: act = 0)) else: (if (-2.6852481100852783 < obs[0]) then: act = 1 else: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < obs[0]) then: act = 1 else: act = 0)))
500.0 (if ((max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) * obs[0]) < ((max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332) + ((-1.1104258010489634 + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332)) + max(0, [ 0.285 -0.879 -1.785 -1.182] *dot* obs[:] + 0.332))) + (obs[1] * 0.360109531947984))) then: (if ((max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) + (((obs[3] + obs[0]) + obs[2]) + max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04))) < (((obs[1] * obs[3]) * -0.08957201921013902) * -0.6140140924953933)) then: act = 0 else: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < obs[2]) then: act = 1 else: act = 0)) else: (if (-3.8899527312112605 < obs[0]) then: act = 1 else: (if (max(0, [-0.368  0.851 -1.144 -1.239] *dot* obs[:] + 0.04) < obs[0]) then: act = 1 else: act = 0)))
500
(if (max(0, [0.009 0.149 0.121 0.203] *dot* obs[:] + 0.113) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [ 0.002 -0.081 -0.287 -0.14 ] *dot* obs[:] + 0.068)) then: act = 0 else: act = 1) else: act = 1) 9.35
193.08 (if (obs[3] < ((max(0, [-0.084  0.133 -0.054 -0.078] *dot* obs[:] + 0.014) + max(0, [ 0.026 -0.018 -0.002 -0.184] *dot* obs[:] + 0.03)) * obs[2])) then: (if (1.917022004702574 < -0.821164504206555) then: act = 0 else: (if (max(0, [-0.201 -0.387  0.023  0.235] *dot* obs[:] + 0.08) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.225 -0.224  0.305  0.111] *dot* obs[:] + 0.076) * obs[1]) < max(0, [ 0.195 -0.286 -0.202 -0.474] *dot* obs[:] + 0.109)) then: act = 1 else: act = 1))
270.22 (if (obs[3] < ((max(0, [ 0.046 -0.14   0.364  0.259] *dot* obs[:] + 0.09) + max(0, [-0.028  0.318  0.153 -0.257] *dot* obs[:] + 0.03)) * ((-3.174300666346065 + max(0, [-0.032 -0.102  0.173 -0.212] *dot* obs[:] + 0.056)) * max(0, [-0.084  0.133 -0.054 -0.078] *dot* obs[:] + 0.014)))) then: (if (-2.9473061451309523 < ((-1.2810503390940773 + max(0, [ 0.081 -0.101  0.085 -0.287] *dot* obs[:] + 0.078)) + obs[2])) then: act = 0 else: (if (((obs[2] * (0.019408367001678473 + max(0, [ 0.308 -0.451  0.016  0.201] *dot* obs[:] + 0.044))) + -2.0516162628846653) < (max(0, [ 0.195 -0.286 -0.202 -0.474] *dot* obs[:] + 0.109) + obs[2])) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.225 -0.224  0.305  0.111] *dot* obs[:] + 0.076) * obs[1]) < max(0, [ 0.195 -0.286 -0.202 -0.474] *dot* obs[:] + 0.109)) then: act = 1 else: act = 1))
419.49 (if (obs[3] < (-0.2444531250213559 * obs[1])) then: (if (1.2176750607920164 < max(0, [-0.135 -0.157 -0.173 -0.307] *dot* obs[:] + 0.109)) then: act = 0 else: (if ((-3.2074927725238194 + 1.0537051054807574) < (max(0, [-0.062  0.125  0.36   0.302] *dot* obs[:] + 0.139) + max(0, [-0.113 -0.117 -0.322 -0.146] *dot* obs[:] + 0.116))) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.225 -0.224  0.305  0.111] *dot* obs[:] + 0.076) * obs[1]) < max(0, [ 0.195 -0.286 -0.202 -0.474] *dot* obs[:] + 0.109)) then: act = 1 else: act = 1))
439.26 (if (obs[3] < (-0.21884515785101932 * obs[1])) then: (if (((obs[3] + obs[0]) + obs[0]) < -0.39995443998855473) then: act = 0 else: (if (max(0, [-0.044  0.341 -0.131  0.027] *dot* obs[:] + 0.027) < (max(0, [ 0.017 -0.002  0.207 -0.228] *dot* obs[:] + 0.028) + max(0, [-0.135 -0.157 -0.173 -0.307] *dot* obs[:] + 0.109))) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.225 -0.224  0.305  0.111] *dot* obs[:] + 0.076) * obs[1]) < max(0, [ 0.195 -0.286 -0.202 -0.474] *dot* obs[:] + 0.109)) then: act = 1 else: act = 1))
444.8 (if (obs[3] < (-0.2045373888035829 * obs[1])) then: (if (((obs[3] + obs[0]) + obs[0]) < -0.649867215568574) then: act = 0 else: act = 0) else: (if ((max(0, [-0.225 -0.224  0.305  0.111] *dot* obs[:] + 0.076) * obs[1]) < max(0, [ 0.195 -0.286 -0.202 -0.474] *dot* obs[:] + 0.109)) then: act = 1 else: act = 1))
449.74 (if (obs[3] < (-0.2045373888035829 * obs[1])) then: (if (((obs[3] + obs[0]) + obs[0]) < -0.649867215568574) then: act = 0 else: act = 0) else: (if ((max(0, [-0.225 -0.224  0.305  0.111] *dot* obs[:] + 0.076) * obs[1]) < max(0, [ 0.195 -0.286 -0.202 -0.474] *dot* obs[:] + 0.109)) then: act = 1 else: act = 1))
458.7 (if (obs[3] < (-0.19301965120552617 * obs[1])) then: (if (-0.08786146308270759 < (((2.0370588027460066 * 1.916845695649542) + (2.1444631834497936 * (((1.2535594444528861 * obs[1]) * max(0, [ 0.179 -0.153 -0.098 -0.361] *dot* obs[:] + 0.096)) * obs[2]))) * max(0, [ 0.179 -0.153 -0.098 -0.361] *dot* obs[:] + 0.096))) then: act = 0 else: act = 0) else: (if ((max(0, [-0.225 -0.224  0.305  0.111] *dot* obs[:] + 0.076) * obs[1]) < max(0, [ 0.195 -0.286 -0.202 -0.474] *dot* obs[:] + 0.109)) then: act = 1 else: act = 1))
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
189.57 (if ((obs[0] * (obs[2] * 0.9011662863159199)) < (obs[3] * -1.041488997648713)) then: act = 0 else: (if (obs[1] < 0.7727142534826702) then: act = 1 else: (if (obs[3] < -2.029751788956985) then: (if ((obs[2] * obs[2]) < -2.809159535214964) then: (if (0.5539356922936787 < -2.4461615371036993) then: act = 0 else: (if (0.08529358748688431 < -1.492955904230906) then: act = 1 else: act = 1)) else: act = 0) else: (if (0.17614620788361934 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
193.95 (if ((obs[0] * (obs[2] * 0.2996202665452721)) < (obs[3] * -1.7635781244887172)) then: act = 0 else: (if (obs[1] < 0.9023617939794673) then: act = 1 else: (if ((-0.2271663880924607 + (-1.2848525454321902 + obs[3])) < obs[3]) then: act = 1 else: (if (0.34322454078494147 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
196.84 (if ((obs[0] * (obs[2] * 1.3057548574041817)) < (obs[3] * -1.264478666189767)) then: act = 0 else: (if (obs[3] < obs[0]) then: act = 1 else: (if ((((obs[1] + (obs[3] * -2.2687502713663963)) + obs[2]) + (-2.0423683042942162 + 0.9928223336812614)) < (-1.2954985638655356 * -1.1934970327688825)) then: act = 1 else: (if ((((((0.25 * obs[0]) * 0.25) * -2.25) + obs[2]) + (((obs[1] * -1.75) + (obs[0] + 1.8956833193640752)) + (((-1.75 + obs[3]) + (obs[2] * obs[3])) * obs[1]))) < -2.9168744611408934) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
240.46 (if ((obs[0] * (obs[2] * obs[0])) < (obs[3] * -0.23275454979778276)) then: act = 0 else: (if (obs[3] < obs[2]) then: act = 1 else: (if (((obs[3] + obs[2]) + (-1.3147078176577347 + -0.5457380754651002)) < (-1.5603153010912325 * 0.2275262416275075)) then: (if (-2.6018264812470027 < (obs[3] + obs[3])) then: act = 1 else: (if (0.40551271508563935 < (obs[1] + 0.6504045718984248)) then: (if (obs[3] < 0.6815819416372493) then: (if ((((-2.363098083647807 * 0.4746471386456195) * -0.05210493802382371) + (((1.5839527050463071 + -1.1993230607108019) + -2.60346051903716) + ((0.19304924770631893 + obs[2]) * obs[1]))) < obs[0]) then: act = 0 else: (if (obs[0] < 1.291680420774429) then: act = 1 else: act = 1)) else: act = 1) else: (if (-2.194384511958931 < -2.478173761509275) then: (if ((((((-0.3405283698211809 + 1.8584076710685762) + (obs[0] * -1.8611331053734936)) + ((0.620864810326891 * obs[2]) + 1.9474076887608718)) + 1.2141174036861269) * (-1.5308779648018227 * (obs[0] + ((obs[1] * obs[0]) + (-0.6757349869638871 + obs[3]))))) < -2.4147334416683135) then: (if (-0.14325114071781547 < obs[0]) then: act = 0 else: act = 0) else: act = 0) else: (if (-2.3334737885109957 < -2.1309755401339014) then: (if (obs[2] < obs[2]) then: act = 1 else: act = 1) else: act = 1)))) else: (if ((((((obs[1] * 1.2196428738960257) * (obs[2] * obs[3])) * -1.9124266006547308) + obs[2]) + (((obs[1] * -1.9468398866305363) + (obs[0] + 1.668402424617968)) + (((-1.7210800038627336 + obs[3]) + (obs[2] * obs[3])) * obs[1]))) < -3.4466703667123744) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
316.56 (if ((obs[0] * (obs[2] * obs[1])) < (obs[3] * -0.07471521101337009)) then: act = 0 else: (if (obs[3] < obs[2]) then: act = 1 else: (if (((-0.8133495719194754 + obs[3]) + (-2.3095666979581027 + -0.7914002711570335)) < (0.5243450264308478 * 0.6733278761214586)) then: (if (-0.6991742251977375 < (obs[3] + obs[3])) then: act = 1 else: (if (((((((obs[1] * 0.6024835102091806) * (obs[3] + -1.495633680151451)) * ((obs[3] * ((-0.6181401503452941 + (obs[2] * obs[3])) + (obs[0] * ((obs[3] + 1.9891034358927424) * obs[2])))) + -2.4485401963448714)) + obs[3]) * obs[2]) + -2.714124408444115) < obs[1]) then: act = 1 else: (if (1.3399358029849773 < 0.6461021094011841) then: act = 1 else: (if ((0.9834157139318838 + obs[2]) < (-1.5689287558576952 * 1.9544501377917969)) then: (if (((((-1.229737940416017 * (0.1861631241364471 * obs[1])) + -0.2702555231560702) + 1.5404830474020672) * (-2.50635207470039 + ((-1.455215174048984 + (obs[0] + obs[0])) * ((-2.123144076535434 * 0.5390652945262691) * (obs[1] * obs[0]))))) < (-0.047405811462446434 + 1.3795455795534113)) then: act = 0 else: act = 0) else: (if (2.219291984946818 < 0.09732149700146134) then: act = 0 else: act = 0))))) else: (if ((((((obs[1] * 1.8442505263351785) * (obs[2] * obs[3])) * -1.5930432659989073) + obs[2]) + (((obs[1] * -2.1689048523288155) + (obs[0] + 2.0447636442044135)) + (((-1.6288436117551293 + obs[3]) + (obs[2] * obs[3])) * obs[1]))) < -1.8336830539509175) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
349.02 (if ((obs[0] * (obs[2] * obs[1])) < (obs[3] * -0.0523541402462146)) then: act = 0 else: (if (obs[3] < obs[2]) then: act = 1 else: (if (((-0.8166619898064467 + obs[3]) + (-2.3267387181934835 + -1.0387338394186363)) < (0.48584457825525335 * 0.856426744667252)) then: (if (-0.7018184791106198 < (obs[3] + obs[3])) then: act = 1 else: (if (((((((obs[1] * 0.6298519008238443) * (obs[3] + (((((obs[0] * 2.1949136707236874) + 2.084398302961435) * -0.7627982655434987) * ((obs[1] + 1.912983603654493) * ((obs[2] * obs[0]) * (obs[0] * -0.8741461395403666)))) * 1.0129009849757349))) * ((obs[3] * ((-0.7475367748271411 + (obs[2] * obs[3])) + (obs[0] * ((obs[3] + 2.1442001442961) * obs[2])))) + ((-1.2854850175080341 + obs[1]) * (obs[1] + (obs[2] * (obs[1] + -2.1841721221016703)))))) + obs[3]) * obs[2]) + -2.9907987369031543) < obs[1]) then: act = 1 else: (if (1.512896222067621 < 1.0231456948612196) then: act = 1 else: (if ((1.2412348031440115 + obs[2]) < (-1.1705172806574242 * 1.9755716275049648)) then: (if (((((-0.8891245256616187 * (0.01891789266822841 * obs[1])) + -0.4779162983318679) + 1.887697840317005) * (-2.571609814532892 + ((-1.3146473505885936 + (obs[0] + obs[0])) * ((-2.44799134762489 * 0.6955380801586005) * (obs[1] * obs[0]))))) < (0.05033354268618745 + 1.2992518116938554)) then: act = 0 else: act = 0) else: (if (2.1740223422392226 < -0.22909908040398408) then: act = 0 else: act = 0))))) else: (if ((((((obs[1] * 1.9020409637030065) * (obs[2] * obs[3])) * -1.5510744735108342) + obs[2]) + (((obs[1] * -2.499314142728648) + (obs[0] + 1.934810913593946)) + (((-1.698056040073803 + obs[3]) + (obs[2] * obs[3])) * obs[1]))) < -1.7830129934875223) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
