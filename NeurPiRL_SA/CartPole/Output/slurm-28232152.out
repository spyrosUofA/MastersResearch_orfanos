created virtual environment CPython3.8.10.final.0-64 in 36205ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232152.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) < (max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) + max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) < max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)) then: act = 1 else: act = 1))) else: act = 1) 9.36
18.93 (if ((((((3.0628011827832626 + 1.163124914217079) + obs[2]) * obs[0]) * max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) + 0.5520215878617748) < (1.8849721439729696 * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296))) then: act = 1 else: (if (max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) < (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1])) then: act = 1 else: act = 0))
23.16 (if ((((((2.793634011214119 + (((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) + -0.6869280468631696) * (-0.07778491675045818 + max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296))) + obs[0])) + ((-1.6631991799222605 * obs[1]) + ((((obs[2] + (obs[2] + (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296)))) + -1.9436407730297505) + (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) + 1.8527190672473386)) + -1.4047502408946129))) * obs[0]) * max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) + 0.30178605475972514) < (1.045238437318202 * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296))) then: act = 1 else: (if (max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) < (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1])) then: act = 1 else: act = 0))
26.05 (if ((((((3.268760651601168 + (((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) + (-2.040124241635052 + max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425))) * (1.3447634120706469 * ((obs[3] * max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) * max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)))) + obs[0])) + (obs[0] + (obs[2] + -2.285322035396029))) * max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) * max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425)) + 0.08076524610244801) < (0.8825883142645031 * max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296))) then: act = 1 else: (if (max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) < (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[1])) then: act = 1 else: act = 0))
480.43 (if (max(0, [ 1.117 -0.239  0.842  0.806] *dot* obs[:] + 0.296) < (obs[1] + (-1.9394330836153526 * obs[3]))) then: act = 0 else: (if ((max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * 0.014571047138519533) < (obs[3] + obs[2])) then: act = 1 else: act = 0))
498.85 (if (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) < (obs[1] + (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) * obs[3]))) then: act = 1 else: (if ((obs[1] * -0.10881869099487151) < (obs[3] + obs[2])) then: act = 1 else: act = 0))
498.86 (if (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) < obs[2]) then: act = 1 else: (if ((obs[1] * -0.13230456468929622) < (obs[3] + obs[2])) then: act = 1 else: act = 0))
500.0 (if (max(0, [ 0.46  -0.308 -0.621 -1.79 ] *dot* obs[:] + 0.425) < obs[2]) then: act = 1 else: (if ((obs[1] * -0.13230456468929622) < (obs[3] + obs[2])) then: act = 1 else: act = 0))
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.229  0.152  0.137 -0.091] *dot* obs[:] + 0.088)) < (max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128) + max(0, [ 0.216 -0.225 -0.195 -0.158] *dot* obs[:] + 0.097))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.211  0.086  0.095 -0.183] *dot* obs[:] + 0.095)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.289 -0.118 -0.533 -0.087] *dot* obs[:] + 0.132)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.032  0.319  0.169 -0.228] *dot* obs[:] + 0.018) < max(0, [-0.051 -0.355  0.047 -0.075] *dot* obs[:] + 0.051)) then: act = 1 else: act = 1))) else: act = 1) 9.36
9.41 (if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.229  0.152  0.137 -0.091] *dot* obs[:] + 0.088)) < (max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128) + max(0, [ 0.216 -0.225 -0.195 -0.158] *dot* obs[:] + 0.097))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.211  0.086  0.095 -0.183] *dot* obs[:] + 0.095)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.289 -0.118 -0.533 -0.087] *dot* obs[:] + 0.132)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.032  0.319  0.169 -0.228] *dot* obs[:] + 0.018) < max(0, [-0.051 -0.355  0.047 -0.075] *dot* obs[:] + 0.051)) then: act = 1 else: act = 1))) else: act = 1)
43.19 (if (max(0, [ 0.274 -0.232  0.177  0.09 ] *dot* obs[:] + -0.066) < max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089)) then: (if ((max(0, [-0.033  0.232  0.001  0.187] *dot* obs[:] + -0.055) * obs[1]) < (max(0, [ 0.051  0.275 -0.169  0.038] *dot* obs[:] + 0.037) * obs[0])) then: act = 1 else: act = 1) else: act = 0)
131.34 (if (max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089) < (3.3281303359912675 * obs[3])) then: act = 1 else: (if ((obs[0] * obs[1]) < max(0, [-0.153  0.008 -0.135 -0.179] *dot* obs[:] + 0.083)) then: (if (obs[1] < obs[1]) then: act = 1 else: (if (-1.4373784215079919 < ((obs[3] * max(0, [-0.028  0.147  0.267  0.578] *dot* obs[:] + 0.148)) + obs[1])) then: act = 0 else: (if ((max(0, [-0.211  0.086  0.095 -0.183] *dot* obs[:] + 0.095) + obs[2]) < max(0, [-0.033  0.232  0.001  0.187] *dot* obs[:] + -0.055)) then: (if (max(0, [-0.206 -0.027 -0.096 -0.058] *dot* obs[:] + -0.059) < obs[3]) then: (if (-2.6181159707902486 < -0.9574311410415045) then: act = 1 else: act = 1) else: (if (max(0, [-0.065 -0.002  0.359  0.4  ] *dot* obs[:] + 0.123) < -1.761468626866256) then: act = 1 else: act = 1)) else: act = 0))) else: (if (0.9580600908532344 < max(0, [-0.014  0.099  0.235  0.273] *dot* obs[:] + 0.1)) then: (if (-1.9653784201834288 < max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) then: act = 0 else: act = 1) else: (if (obs[2] < 1.2772424762120176) then: act = 0 else: act = 0))))
199.78 (if (max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089) < (3.9406434952521483 * obs[3])) then: act = 1 else: (if ((obs[0] * max(0, [ 0.117 -0.004 -0.228 -0.261] *dot* obs[:] + 0.092)) < obs[1]) then: (if ((obs[3] * -2.156066459827737) < obs[3]) then: act = 1 else: (if (max(0, [-0.023  0.339 -0.26   0.198] *dot* obs[:] + -0.034) < (max(0, [ 0.12  -0.043 -0.042 -0.485] *dot* obs[:] + 0.114) * max(0, [ 0.051  0.275 -0.169  0.038] *dot* obs[:] + 0.037))) then: act = 0 else: act = 0)) else: (if (1.7878454940834236 < max(0, [-0.014  0.099  0.235  0.273] *dot* obs[:] + 0.1)) then: (if (-2.959591487076168 < max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) then: act = 0 else: act = 1) else: (if (obs[2] < 0.16855805543839297) then: act = 0 else: act = 0))))
200.87 (if (max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089) < (3.9406434952521483 * obs[3])) then: act = 1 else: (if ((obs[0] * max(0, [ 0.117 -0.004 -0.228 -0.261] *dot* obs[:] + 0.092)) < obs[1]) then: (if ((obs[3] * -2.156066459827737) < obs[3]) then: act = 1 else: (if (max(0, [-0.023  0.339 -0.26   0.198] *dot* obs[:] + -0.034) < (max(0, [ 0.12  -0.043 -0.042 -0.485] *dot* obs[:] + 0.114) * max(0, [ 0.051  0.275 -0.169  0.038] *dot* obs[:] + 0.037))) then: act = 0 else: act = 0)) else: (if (1.7878454940834236 < max(0, [-0.014  0.099  0.235  0.273] *dot* obs[:] + 0.1)) then: (if (-2.959591487076168 < max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) then: act = 0 else: act = 1) else: (if (obs[2] < 0.16855805543839297) then: act = 0 else: act = 0))))
251.11 (if (max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089) < (3.9416624039828663 * obs[3])) then: act = 1 else: (if ((obs[3] * max(0, [ 0.117 -0.004 -0.228 -0.261] *dot* obs[:] + 0.092)) < obs[1]) then: (if ((obs[3] * -3.2706735990688616) < obs[1]) then: act = 1 else: (if (((0.9873306628619853 * (-2.0219425006961615 * obs[0])) + ((-1.5427379420474738 * 0.37083240828567265) + (obs[3] + 0.648441807329347))) < (-1.2112165932366679 + (obs[0] * (obs[3] + -1.932880612078041)))) then: (if (((obs[3] * ((max(0, [-0.259 -0.157 -0.518 -0.392] *dot* obs[:] + 0.165) * 1.2299163870104834) + max(0, [ 0.069 -0.077 -0.168 -0.043] *dot* obs[:] + 0.035))) * -0.00490388332796049) < (1.9528964082838016 + 1.7308277616947965)) then: act = 0 else: act = 1) else: (if (2.6933376895520684 < (-0.6542316361435381 * obs[1])) then: act = 1 else: act = 0))) else: (if (1.7488841715220467 < max(0, [-0.014  0.099  0.235  0.273] *dot* obs[:] + 0.1)) then: (if (-3.7136576586597214 < max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) then: act = 0 else: act = 1) else: (if (obs[2] < -0.13727217208414128) then: act = 0 else: act = 0))))
254.21 (if (max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089) < (3.9416624039828663 * obs[3])) then: act = 1 else: (if ((obs[3] * max(0, [ 0.117 -0.004 -0.228 -0.261] *dot* obs[:] + 0.092)) < obs[1]) then: (if ((obs[3] * -3.2706735990688616) < obs[1]) then: act = 1 else: (if (((0.9873306628619853 * (-2.0219425006961615 * obs[0])) + ((-1.5427379420474738 * 0.37083240828567265) + (obs[3] + 0.648441807329347))) < (-1.2112165932366679 + (obs[0] * (obs[3] + -1.932880612078041)))) then: (if (((obs[3] * ((max(0, [-0.259 -0.157 -0.518 -0.392] *dot* obs[:] + 0.165) * 1.2299163870104834) + max(0, [ 0.069 -0.077 -0.168 -0.043] *dot* obs[:] + 0.035))) * -0.00490388332796049) < (1.9528964082838016 + 1.7308277616947965)) then: act = 0 else: act = 1) else: (if (2.6933376895520684 < (-0.6542316361435381 * obs[1])) then: act = 1 else: act = 0))) else: (if (1.7488841715220467 < max(0, [-0.014  0.099  0.235  0.273] *dot* obs[:] + 0.1)) then: (if (-3.7136576586597214 < max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) then: act = 0 else: act = 1) else: (if (obs[2] < -0.13727217208414128) then: act = 0 else: act = 0))))
264.17 (if (max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089) < (3.93878082267383 * obs[3])) then: act = 1 else: (if ((obs[3] * max(0, [ 0.117 -0.004 -0.228 -0.261] *dot* obs[:] + 0.092)) < obs[1]) then: (if ((obs[3] * -3.4672007569138703) < obs[1]) then: act = 1 else: (if (((1.0575340254694428 * (-2.2392992485027223 * obs[0])) + ((-1.5786767782487792 * 0.16909786611597893) + (obs[3] + 0.4620217931799857))) < (-1.2273228509455176 + (obs[0] * (obs[3] + -1.8845079575887431)))) then: (if (((obs[3] * max(0, [ 0.229  0.152  0.137 -0.091] *dot* obs[:] + 0.088)) * -0.013368965552084666) < (2.1261771509625356 + 1.520650500199327)) then: act = 0 else: act = 1) else: (if (2.544209302684551 < (-0.6516085910826861 * obs[1])) then: act = 1 else: act = 0))) else: (if (1.6118901718241645 < max(0, [-0.014  0.099  0.235  0.273] *dot* obs[:] + 0.1)) then: (if (-3.8535045551244416 < max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) then: act = 0 else: act = 1) else: (if (obs[2] < -0.21235902958249164) then: act = 0 else: act = 0))))
302.57 (if (max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089) < (3.323109251638269 * obs[3])) then: act = 1 else: (if ((max(0, [ 0.032 -0.077 -0.265 -0.197] *dot* obs[:] + 0.083) * (obs[3] * (obs[3] * obs[3]))) < obs[1]) then: (if ((obs[3] * -4.400752519200496) < obs[1]) then: act = 1 else: (if ((max(0, [-0.248  0.075  0.263  0.394] *dot* obs[:] + 0.112) + obs[1]) < (-1.7161765725874607 + -1.4577336921319723)) then: (if (obs[0] < max(0, [ 0.051  0.275 -0.169  0.038] *dot* obs[:] + 0.037)) then: (if (0.30300879151619553 < max(0, [0.066 0.238 0.191 0.036] *dot* obs[:] + 0.126)) then: act = 1 else: act = 1) else: (if (0.3408936820405372 < ((obs[1] * 0.0802262375470037) + obs[2])) then: (if (0.4581877735567501 < max(0, [ 0.069 -0.077 -0.168 -0.043] *dot* obs[:] + 0.035)) then: (if ((obs[3] + obs[0]) < obs[3]) then: act = 1 else: (if ((-2.2507089344908895 + obs[3]) < obs[3]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((obs[0] + 0.7357550625178841) + -1.6462655245034765) < ((1.6079708645224864 + max(0, [-0.072  0.102 -0.199 -0.082] *dot* obs[:] + 0.098)) * ((max(0, [ 0.287  0.06  -0.079  0.249] *dot* obs[:] + 0.052) + (max(0, [0.066 0.238 0.191 0.036] *dot* obs[:] + 0.126) * obs[3])) * max(0, [ 0.289 -0.118 -0.533 -0.087] *dot* obs[:] + 0.132)))) then: (if (obs[3] < (-1.4644293065763034 + obs[0])) then: act = 1 else: (if (max(0, [ 0.117 -0.004 -0.228 -0.261] *dot* obs[:] + 0.092) < obs[2]) then: (if (obs[2] < max(0, [ 0.003 -0.282  0.144  0.403] *dot* obs[:] + 0.098)) then: act = 1 else: act = 1) else: (if (2.1203154504563027 < max(0, [ 0.06  -0.034 -0.207 -0.331] *dot* obs[:] + 0.131)) then: act = 0 else: act = 1))) else: (if (obs[0] < (max(0, [0.283 0.128 0.497 0.326] *dot* obs[:] + 0.123) * obs[1])) then: act = 1 else: act = 0)))) else: (if (2.169159485006775 < (-2.374164473034146 * obs[1])) then: act = 1 else: act = 0))) else: (if (2.6640348330680097 < max(0, [-0.014  0.099  0.235  0.273] *dot* obs[:] + 0.1)) then: (if (-5.24636443758649 < max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) then: act = 0 else: act = 1) else: (if (obs[2] < 0.7360979442781588) then: act = 0 else: act = 0))))
308.46 (if (max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089) < (3.323109251638269 * obs[3])) then: act = 1 else: (if ((max(0, [ 0.032 -0.077 -0.265 -0.197] *dot* obs[:] + 0.083) * (obs[3] * (obs[3] * obs[3]))) < obs[1]) then: (if ((obs[3] * -4.400752519200496) < obs[1]) then: act = 1 else: (if ((max(0, [-0.248  0.075  0.263  0.394] *dot* obs[:] + 0.112) + obs[1]) < (-1.7161765725874607 + -1.4577336921319723)) then: (if (obs[0] < max(0, [ 0.051  0.275 -0.169  0.038] *dot* obs[:] + 0.037)) then: (if (0.30300879151619553 < max(0, [0.066 0.238 0.191 0.036] *dot* obs[:] + 0.126)) then: act = 1 else: act = 1) else: (if (0.3408936820405372 < ((obs[1] * 0.0802262375470037) + obs[2])) then: (if (0.4581877735567501 < max(0, [ 0.069 -0.077 -0.168 -0.043] *dot* obs[:] + 0.035)) then: (if ((obs[3] + obs[0]) < obs[3]) then: act = 1 else: (if ((-2.2507089344908895 + obs[3]) < obs[3]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((obs[0] + 0.7357550625178841) + -1.6462655245034765) < ((1.6079708645224864 + max(0, [-0.072  0.102 -0.199 -0.082] *dot* obs[:] + 0.098)) * ((max(0, [ 0.287  0.06  -0.079  0.249] *dot* obs[:] + 0.052) + (max(0, [0.066 0.238 0.191 0.036] *dot* obs[:] + 0.126) * obs[3])) * max(0, [ 0.289 -0.118 -0.533 -0.087] *dot* obs[:] + 0.132)))) then: (if (obs[3] < (-1.4644293065763034 + obs[0])) then: act = 1 else: (if (max(0, [ 0.117 -0.004 -0.228 -0.261] *dot* obs[:] + 0.092) < obs[2]) then: (if (obs[2] < max(0, [ 0.003 -0.282  0.144  0.403] *dot* obs[:] + 0.098)) then: act = 1 else: act = 1) else: (if (2.1203154504563027 < max(0, [ 0.06  -0.034 -0.207 -0.331] *dot* obs[:] + 0.131)) then: act = 0 else: act = 1))) else: (if (obs[0] < (max(0, [0.283 0.128 0.497 0.326] *dot* obs[:] + 0.123) * obs[1])) then: act = 1 else: act = 0)))) else: (if (2.169159485006775 < (-2.374164473034146 * obs[1])) then: act = 1 else: act = 0))) else: (if (2.6640348330680097 < max(0, [-0.014  0.099  0.235  0.273] *dot* obs[:] + 0.1)) then: (if (-5.24636443758649 < max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) then: act = 0 else: act = 1) else: (if (obs[2] < 0.7360979442781588) then: act = 0 else: act = 0))))
436.45 (if (max(0, [0.178 0.084 0.048 0.341] *dot* obs[:] + 0.089) < (3.0700434053372216 * obs[3])) then: act = 1 else: (if ((max(0, [ 0.032 -0.077 -0.265 -0.197] *dot* obs[:] + 0.083) * (obs[1] * (obs[3] * obs[3]))) < obs[2]) then: (if ((obs[3] * -4.031678362295828) < obs[1]) then: act = 1 else: (if ((((max(0, [-0.023  0.339 -0.26   0.198] *dot* obs[:] + -0.034) * obs[3]) * (obs[3] * max(0, [-0.1   -0.04  -0.056  0.312] *dot* obs[:] + 0.025))) + (((max(0, [-0.138 -0.161 -0.179  0.153] *dot* obs[:] + -0.047) * -2.730237586086699) + -0.8309145912982827) + (-2.9445532826933385 + max(0, [ 0.274 -0.232  0.177  0.09 ] *dot* obs[:] + -0.066)))) < 0.38001357179052697) then: act = 0 else: (if (obs[0] < max(0, [-0.206 -0.027 -0.096 -0.058] *dot* obs[:] + -0.059)) then: act = 1 else: (if (obs[0] < (max(0, [-0.032  0.319  0.169 -0.228] *dot* obs[:] + 0.018) + obs[1])) then: (if ((obs[2] + (obs[0] * ((obs[0] * max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) * obs[0]))) < -0.10862412401207948) then: (if (obs[2] < -0.5877863720122063) then: act = 0 else: act = 0) else: (if (-2.1436750580326853 < 1.3869913157264335) then: act = 1 else: act = 0)) else: (if (-0.059437524791910355 < max(0, [-0.248  0.075  0.263  0.394] *dot* obs[:] + 0.112)) then: act = 0 else: act = 1))))) else: (if (2.593300819184797 < max(0, [-0.014  0.099  0.235  0.273] *dot* obs[:] + 0.1)) then: (if (-5.251263545544009 < max(0, [ 0.378  0.004 -0.296 -0.449] *dot* obs[:] + 0.128)) then: act = 0 else: act = 1) else: (if (obs[2] < 1.0894282392531909) then: act = 0 else: act = 0))))
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
82.32 (if (1.5211787004450552 < obs[2]) then: (if (-3.015349180191675 < obs[3]) then: (if (obs[2] < -0.8418020445970565) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((((((obs[1] + 2.2775925378478856) + (obs[3] + 1.0764534753506072)) + ((obs[2] * ((1.888695513340449 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -1.1437206782161076) < (-1.2201876813493189 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.3876194271973001 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
210.75 (if (0.04232351870824058 < obs[2]) then: (if (-1.8327739260597462 < obs[3]) then: (if ((-0.34759005041570923 * -1.476858675502777) < obs[2]) then: (if (obs[3] < obs[0]) then: act = 0 else: act = 0) else: act = 1) else: act = 1) else: (if ((((((((1.1597480130362 + 1.3459353467808388) + obs[2]) + obs[3]) + ((1.5857857759341185 + (obs[1] + obs[0])) * ((((obs[3] + (-1.0668287991624898 * obs[1])) + obs[2]) * (((2.175425252002251 * obs[3]) + 0.7910474611375125) * (obs[3] + (1.9531375215239755 + 1.7636011829474247)))) * obs[0]))) + ((obs[2] * ((1.1800486239228407 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -0.6356714717708989) < (-0.593352876056495 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.541852543238362 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
253.25 (if (0.03132774627321541 < obs[2]) then: (if (1.7083678630729464 < obs[3]) then: (if ((-0.13587507687684508 * -1.5155950840564028) < obs[2]) then: (if (obs[3] < obs[0]) then: act = 0 else: act = 0) else: act = 1) else: act = 1) else: (if ((((((((1.3839582732662394 + 1.360764180275187) + obs[2]) + obs[2]) + ((1.8769397171789237 + (obs[1] + obs[0])) * (((((((((2.3353804067400055 + -1.5142529420701631) + obs[2]) * (((((-2.2506866391063864 + 0.9326846217952328) * -2.2227429405449852) + ((obs[1] + obs[0]) + (obs[1] + (obs[3] * -1.1260231326535473)))) * obs[1]) + -1.4844446367439526)) + -1.2506383108678625) + (((-1.0739097548362693 * ((obs[0] * (obs[2] * 1.1597312824198092)) + obs[2])) * obs[1]) * (((obs[0] + 1.530355213418822) * 1.904521864561287) * ((-1.600991428858486 * obs[1]) * (obs[0] + obs[0]))))) + (-1.3617577476330378 * obs[1])) + obs[2]) * (((2.820452369561301 * obs[3]) + 0.9570363163070201) * (obs[3] + (1.3054060570158899 + 1.3020582217144208)))) * obs[0]))) + ((obs[2] * ((0.8635930616195466 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -0.7083545991023203) < (-0.47063809933037165 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-0.8133993656341828 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
498.93 (if (0.02986188797349265 < obs[2]) then: (if (0.7002643111648873 < obs[3]) then: (if (obs[1] < -2.4183364597155133) then: (if (obs[3] < obs[0]) then: act = 0 else: (if ((-0.06340296467027245 * ((1.8034120995205585 * obs[2]) * 0.15012128200858113)) < -2.048593916435854) then: act = 1 else: (if ((obs[3] + obs[0]) < -0.16493723441995184) then: act = 0 else: (if ((obs[0] * -0.702782055675345) < 2.205329934126922) then: (if (obs[3] < obs[0]) then: act = 0 else: (if (obs[2] < obs[2]) then: act = 0 else: act = 0)) else: act = 0)))) else: act = 1) else: act = 1) else: (if ((-1.8512975304837032 * obs[1]) < ((1.8846943987981506 + (obs[0] * (obs[2] + 1.9117706587673493))) * obs[3])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-0.9801553035449365 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
500.0 (if (0.03648068736191984 < obs[2]) then: (if (0.5002817044420795 < obs[3]) then: (if (obs[1] < -2.8717470592071077) then: (if (obs[3] < obs[0]) then: act = 0 else: (if ((0.32567016807048665 * ((1.9665782984062161 * obs[2]) * -0.1466876396850022)) < -2.5052408878373336) then: act = 1 else: (if ((obs[3] + obs[0]) < (((obs[0] + ((obs[0] * obs[3]) + -0.7677244599553724)) * (obs[3] + ((obs[0] * -0.8052399680269275) + 1.0000041805851083))) + 0.14681872722078854)) then: act = 0 else: (if ((obs[0] * -0.36565882608465394) < 2.1322219088865877) then: (if (obs[3] < obs[0]) then: act = 0 else: (if (obs[2] < obs[2]) then: act = 0 else: act = 0)) else: act = 1)))) else: act = 1) else: act = 1) else: (if ((-1.5901196098030543 * obs[1]) < ((1.6224568279078513 + (obs[0] * (obs[2] + 1.757416056376099))) * obs[3])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-0.7591908225173518 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
