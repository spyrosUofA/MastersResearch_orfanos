created virtual environment CPython3.8.10.final.0-64 in 32998ms
  creator CPython3Posix(dest=/localscratch/orfanos.28225324.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
480
(if (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) then: act = 0 else: act = 1) else: act = 1) 9.35
39.35 (if (0.5306518550403454 < obs[1]) then: (if (-0.4345203796784659 < obs[1]) then: act = 0 else: (if (-1.9629411972539934 < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: act = 1 else: (if (obs[2] < (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) * max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486))) then: act = 1 else: act = 0))) else: (if ((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) * max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) < max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) then: act = 1 else: act = 0))
119.96 (if ((obs[3] * ((2.328754502807938 + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) * (2.341249025994578 + -0.5821106038373987))) < obs[2]) then: (if (-1.3731865408666497 < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: (if (2.0657213736934334 < (((obs[0] * obs[0]) + obs[0]) * (obs[3] + (-2.6483030590282723 + obs[0])))) then: (if (-2.3156366775259754 < (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) + obs[2])) then: (if ((obs[1] + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) < ((max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) * max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) + (obs[2] + obs[2]))) then: (if (obs[3] < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: act = 1 else: act = 0) else: (if (-1.9256565565444983 < max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) then: act = 1 else: (if (obs[0] < 2.0945780576331257) then: (if (-0.8083469543970951 < obs[2]) then: act = 0 else: act = 0) else: (if (obs[0] < 1.8760254391881233) then: act = 0 else: act = 1)))) else: (if (((obs[0] * 3.1129989926752257) * max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) < 1.966624396875938) then: act = 0 else: (if (-0.11873370017136764 < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: act = 1 else: act = 1))) else: act = 0) else: (if (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) < -1.2473070079621245) then: act = 1 else: act = 0)) else: (if ((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) * max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) < max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) then: act = 1 else: act = 0))
141.26 (if ((obs[3] * ((2.0899299587707008 + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) * (2.8480500118236174 + (-2.121418873680969 * -2.578233006593497)))) < obs[2]) then: (if (((-2.5814010355166155 * obs[3]) + (obs[3] * (obs[0] + 0.9873970578016925))) < (obs[0] * obs[3])) then: (if ((max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) * ((obs[2] * 0.09074087567699608) * (1.607677808932657 + (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) * max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495))))) < (1.141386965477576 + 2.4902316192524956)) then: (if (obs[0] < 0.12212769416922276) then: (if (2.1784961728542958 < obs[2]) then: act = 0 else: act = 0) else: (if (obs[3] < 0.5500568628115912) then: act = 0 else: (if (0.7824673062253747 < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: act = 1 else: act = 1))) else: act = 0) else: (if (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) < -1.861432265801032) then: act = 1 else: act = 0)) else: (if ((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) * max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) < max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) then: act = 1 else: act = 0))
149.77 (if ((obs[3] * 2.6667559084609653) < obs[2]) then: act = 0 else: (if ((0.32138615894184336 * obs[0]) < max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) then: act = 1 else: act = 0))
164.82 (if ((obs[3] * 3.980509371847682) < obs[2]) then: (if (obs[2] < -3.8548904390077317) then: (if ((-2.1827241948811373 + obs[3]) < obs[3]) then: act = 1 else: (if (obs[2] < (obs[2] * (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) * obs[2]))) then: (if (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) < (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) + obs[1])) then: act = 1 else: (if (obs[3] < obs[0]) then: (if (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) < -0.6576880258777238) then: (if (obs[0] < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: (if (1.4216345396322443 < (((2.0851975711541195 + -1.3748028072444765) * -2.2884891224697124) + 1.9408342497162936)) then: act = 1 else: (if (-1.331234458418125 < ((max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) * obs[3])) then: (if (obs[3] < max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) then: (if (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) < obs[1]) then: (if ((max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) + obs[3]) < -1.7703266441602645) then: (if (obs[2] < obs[2]) then: act = 1 else: act = 0) else: (if (-1.019522404331495 < obs[3]) then: (if (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: act = 0 else: act = 0) else: (if (obs[2] < -2.3602888689236514) then: act = 1 else: act = 1))) else: (if (obs[2] < 0.3053052747920397) then: (if (obs[1] < 0.7619752215105442) then: act = 1 else: act = 0) else: (if (obs[1] < -0.9948070529096538) then: act = 1 else: (if (-2.110021449728629 < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: act = 1 else: act = 1)))) else: (if ((-0.14480437803519108 * (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + -0.6519320672012399)) < obs[1]) then: (if ((obs[2] + max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) < (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + obs[1])) then: (if (obs[0] < max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) then: (if (2.019796173952006 < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: act = 0 else: act = 1) else: act = 0) else: act = 0) else: (if (obs[0] < -0.6751182719388522) then: (if (2.0537797316175688 < -2.0978508454031943) then: (if (obs[3] < 2.0515524202501307) then: act = 1 else: act = 1) else: act = 0) else: (if (obs[3] < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: (if (-0.1837440043651789 < obs[2]) then: act = 0 else: act = 0) else: act = 0)))) else: act = 1)) else: act = 1) else: act = 0) else: act = 0)) else: act = 1)) else: (if (((-1.9056037283286447 + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) * (obs[2] + max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495))) < obs[1]) then: (if ((obs[0] + 1.4924475173862983) < (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) + obs[3])) then: act = 1 else: act = 0) else: act = 1)) else: (if ((obs[2] + -1.5351710593556995) < obs[3]) then: act = 1 else: act = 0))
177.02 (if ((obs[3] * 5.521944216149285) < obs[2]) then: act = 0 else: (if ((obs[2] + -1.2205011215636026) < obs[3]) then: act = 1 else: act = 0))
470.68 (if (((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) + ((max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) + 0.7657929901633116) * obs[3]))) + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) < (obs[2] * obs[3])) then: act = 0 else: (if ((-0.7163402816352764 * (((obs[2] * max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) + (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) * (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) + max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)))) * ((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + -1.0501636923362172) + obs[1]))) < (((-0.3122166859212721 + obs[3]) + obs[2]) + (0.9973466667910467 * max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)))) then: act = 1 else: act = 0))
491.57 (if (((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) + max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) < -0.01310929132273217) then: act = 0 else: (if ((-0.32936405093394244 * (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) * ((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + -2.3557849153967427) + obs[1]))) < (((-0.8399112463502415 + obs[3]) + obs[2]) + (2.3229929916396865 * max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)))) then: act = 1 else: act = 0))
495.64 (if (((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) + max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) < -0.01310929132273217) then: act = 0 else: (if ((-0.32936405093394244 * (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) * ((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + -2.3557849153967427) + obs[1]))) < (((-0.8399112463502415 + obs[3]) + obs[2]) + (2.3229929916396865 * max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)))) then: act = 1 else: act = 0))
495.69 (if (((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) + max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) < -0.01310929132273217) then: act = 0 else: (if ((-0.32936405093394244 * (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) * ((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + -2.3557849153967427) + obs[1]))) < (((-0.8399112463502415 + obs[3]) + obs[2]) + (2.3229929916396865 * max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)))) then: act = 1 else: act = 0))
496.55 (if (((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) + max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) < -0.01310929132273217) then: act = 0 else: (if ((-0.32936405093394244 * (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) * ((max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + -2.3557849153967427) + obs[1]))) < (((-0.8399112463502415 + obs[3]) + obs[2]) + (2.3229929916396865 * max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)))) then: act = 1 else: act = 0))
500
(if (max(0, [-0.031  0.215  0.069  0.439] *dot* obs[:] + 0.12) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [ 0.013 -0.17   0.087 -0.106] *dot* obs[:] + 0.081)) then: act = 0 else: act = 1) else: act = 1) 9.35
140.05 (if (obs[3] < (max(0, [ 0.088  0.063 -0.038  0.26 ] *dot* obs[:] + 0.083) * -0.819986025658556)) then: (if (1.6045255556836957 < 0.0865444589049601) then: act = 0 else: (if (1.4211870084058205 < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.032 -0.115  0.238  0.236] *dot* obs[:] + 0.09) * obs[1]) < max(0, [-0.013  0.044  0.102  0.091] *dot* obs[:] + -0.07)) then: act = 1 else: act = 1))
142.21 (if (obs[3] < (max(0, [ 0.088  0.063 -0.038  0.26 ] *dot* obs[:] + 0.083) * -0.819986025658556)) then: (if (1.6045255556836957 < 0.0865444589049601) then: act = 0 else: (if (1.4211870084058205 < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.032 -0.115  0.238  0.236] *dot* obs[:] + 0.09) * obs[1]) < max(0, [-0.013  0.044  0.102  0.091] *dot* obs[:] + -0.07)) then: act = 1 else: act = 1))
143.85 (if (obs[3] < (max(0, [ 0.088  0.063 -0.038  0.26 ] *dot* obs[:] + 0.083) * -0.819986025658556)) then: (if (1.6045255556836957 < 0.0865444589049601) then: act = 0 else: (if (1.4211870084058205 < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.032 -0.115  0.238  0.236] *dot* obs[:] + 0.09) * obs[1]) < max(0, [-0.013  0.044  0.102  0.091] *dot* obs[:] + -0.07)) then: act = 1 else: act = 1))
202.1 (if (obs[3] < (max(0, [ 0.088  0.063 -0.038  0.26 ] *dot* obs[:] + 0.083) * -0.16044318859467332)) then: (if (obs[2] < 0.3153155683910533) then: act = 0 else: (if (1.3802927963755238 < obs[3]) then: (if (max(0, [-0.11  -0.093 -0.335 -0.413] *dot* obs[:] + 0.108) < obs[3]) then: (if (-2.107161203020305 < obs[2]) then: (if ((0.7467530697340088 * obs[1]) < (-0.6717044114711863 + max(0, [ 0.254 -0.034  0.167  0.114] *dot* obs[:] + 0.043))) then: (if (obs[3] < max(0, [ 0.118  0.078 -0.429 -0.117] *dot* obs[:] + 0.04)) then: act = 0 else: (if (max(0, [-0.044 -0.021 -0.018 -0.117] *dot* obs[:] + 0.062) < 0.36617124209538354) then: act = 1 else: act = 1)) else: (if (max(0, [ 0.043  0.34  -0.188 -0.05 ] *dot* obs[:] + 0.086) < -1.7868943429060713) then: (if (0.28828445241551226 < max(0, [ 0.021  0.131  0.145 -0.259] *dot* obs[:] + 0.007)) then: act = 1 else: act = 0) else: (if (obs[2] < obs[2]) then: act = 0 else: act = 0))) else: (if ((-1.8163090829224848 * max(0, [-0.223 -0.065 -0.038  0.076] *dot* obs[:] + 0.102)) < max(0, [-0.031  0.215  0.069  0.439] *dot* obs[:] + 0.12)) then: act = 1 else: act = 1)) else: act = 1) else: act = 0)) else: (if ((max(0, [ 0.032 -0.115  0.238  0.236] *dot* obs[:] + 0.09) * obs[1]) < max(0, [-0.013  0.044  0.102  0.091] *dot* obs[:] + -0.07)) then: act = 1 else: act = 1))
448.52 (if (obs[3] < (obs[1] * -0.1930663917309522)) then: (if (obs[2] < (max(0, [ 0.019 -0.093 -0.155 -0.053] *dot* obs[:] + 0.046) * obs[1])) then: act = 0 else: (if (obs[2] < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.032 -0.115  0.238  0.236] *dot* obs[:] + 0.09) * obs[1]) < max(0, [-0.013  0.044  0.102  0.091] *dot* obs[:] + -0.07)) then: act = 1 else: act = 1))
457.49 (if (obs[3] < (obs[1] * -0.18017278040838952)) then: (if (obs[3] < -1.1470077074862566) then: act = 0 else: (if ((max(0, [-0.139  0.325  0.23  -0.117] *dot* obs[:] + 0.105) * obs[3]) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.032 -0.115  0.238  0.236] *dot* obs[:] + 0.09) * obs[1]) < max(0, [-0.013  0.044  0.102  0.091] *dot* obs[:] + -0.07)) then: act = 1 else: act = 1))
457.56 (if (obs[3] < (obs[1] * -0.17292435356767516)) then: (if (obs[3] < -1.2021454308363528) then: act = 0 else: (if ((max(0, [-0.288  0.203  0.087 -0.294] *dot* obs[:] + 0.009) * obs[2]) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.032 -0.115  0.238  0.236] *dot* obs[:] + 0.09) * obs[1]) < max(0, [-0.013  0.044  0.102  0.091] *dot* obs[:] + -0.07)) then: act = 1 else: act = 1))
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
9.36 (if (obs[1] < obs[1]) then: act = 1 else: (if ((obs[3] * obs[0]) < (((2.691391353718811 * ((((1.9426087308990834 + obs[3]) + obs[0]) + (-0.8288135457976213 + -1.1238035731493108)) + obs[1])) + 1.4718706766971001) * 0.03846216843327588)) then: act = 1 else: (if (((((((1.0293221909396852 + (0.020673123991465037 + 1.9806685237413668)) * ((obs[2] * obs[0]) + 1.801087325038826)) + (1.7725560529804167 * obs[3])) + ((obs[1] + (obs[1] + (1.809524308458824 + -0.7746292608288265))) + -2.005215870557134)) + 1.1646847283512247) * obs[0]) < -1.7109680093019137) then: (if ((obs[2] * obs[2]) < -2.903294464148273) then: (if (1.4768171563030008 < -3.0420528714824666) then: act = 0 else: act = 0) else: act = 0) else: (if (0.6185641645256225 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
9.8 (if (obs[1] < obs[1]) then: act = 1 else: (if ((-1.291488997648713 * (((-2.4999428125913274 * (1.0461692973843988 * obs[1])) * obs[2]) + (((-2.4068698943111646 * obs[3]) + -0.06085714960981395) * ((-2.119301062946863 + obs[2]) + 0.5913581345117702)))) < (((2.7362949625182873 * ((0.2974940447612133 + (((obs[2] + ((((obs[3] * obs[3]) + obs[3]) + ((obs[3] * 1.1017321233568735) * obs[1])) * 0.011147420493405835)) * ((-0.4156400526832277 * (-0.23169695254574907 * (1.1192731366487547 * obs[0]))) * 2.8434927236208654)) + -0.7528450864109082)) + obs[1])) + 1.1716138257542743) * 0.34281072417692215)) then: act = 1 else: (if (((((((1.8310386092937487 + (0.06823660319854785 + 1.20116346015053)) * ((obs[2] * obs[0]) + 1.0773442653425076)) + (1.884782852869009 * obs[3])) + ((obs[1] + (obs[1] + (1.7195848133586797 + -1.226390004536443))) + -1.8403983234766412)) + 0.7647399761405713) * obs[0]) < -1.73168809472234) then: (if ((obs[2] * obs[2]) < -2.79013921292523) then: (if (1.6199640500300134 < -3.134491466892405) then: act = 0 else: act = 0) else: act = 0) else: (if (0.30165389826428907 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
160.94 (if (obs[1] < obs[1]) then: act = 1 else: (if ((-1.3563304084558903 * 0.034368287976917766) < (((2.9169296612137177 * ((1.355119057701426 + ((obs[1] + (obs[2] + ((-1.2103547235973542 + obs[1]) * (1.213146440091272 * -0.8666636019285041)))) * (((-0.15412498560293186 + (0.12852535904769302 + obs[3])) * (0.18177092727971433 * (1.407633134036944 * obs[1]))) + (0.6050354474204086 + obs[3])))) + obs[1])) + -0.9711155712171593) * obs[3])) then: act = 1 else: (if ((-1.8871453306960726 + obs[2]) < ((((obs[0] * -0.8632983920347408) * obs[0]) + obs[1]) + obs[3])) then: (if ((obs[2] * obs[2]) < -2.4910634444494866) then: (if (1.574738687488421 < -4.289329972834748) then: act = 0 else: act = 0) else: act = 0) else: (if (-0.11844233935441767 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
167.44 (if (((obs[0] + (-2.9761758594734884 + obs[1])) * -0.9952274895823126) < obs[2]) then: act = 1 else: (if ((-0.43957432003247515 * -0.1848047263451612) < (((3.3146073491132544 * ((1.304063899215469 + ((obs[2] + (obs[0] * obs[0])) * (((1.9881582738292718 + (-0.7282904925492957 + obs[3])) * (0.7715670407593829 * (1.6031458774069427 * obs[1]))) + (1.1035891107384512 + obs[3])))) + obs[1])) + -1.160232396400752) * obs[3])) then: (if ((obs[2] * (0.0400437381664448 * (0.4180226648009993 + obs[0]))) < 1.7600847452662975) then: (if (((0.6468821727208298 + -1.6453215876860015) + 1.267306244119712) < ((-0.7936522711561445 + ((2.734148107166898 * 2.3182908614084563) + 1.4366146857273474)) + (obs[2] + (((obs[3] + 1.8307298842524002) + obs[2]) + 0.23028072947182537)))) then: act = 1 else: (if (obs[2] < ((obs[2] + obs[2]) + -1.121208228395058)) then: (if (0.1685345371454951 < 1.6578675656390662) then: (if (1.1137053229368539 < -0.38278770100199844) then: act = 1 else: act = 1) else: act = 1) else: act = 1)) else: act = 1) else: (if ((-0.9297472086997127 + obs[2]) < ((((obs[2] * -1.3959068577365863) * obs[0]) + obs[1]) + obs[2])) then: (if ((obs[2] * obs[2]) < -2.3578462887981435) then: (if (1.3087091376819924 < -5.825091655538496) then: act = 0 else: act = 0) else: act = 0) else: (if (0.8732016660217508 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
313.56 (if (((obs[0] + (-0.8496277156622316 + (obs[1] + (obs[3] + -0.9147662449107989)))) * -1.4470339920923276) < ((((obs[0] + obs[3]) + 0.0031369322546329625) + (((0.29958742154036794 + obs[0]) + -1.8831102729572171) * (0.980846486921994 + -2.784349471555823))) + (0.4630487509918987 * ((-2.3860981823923804 * (obs[0] * 1.0053395450357547)) + -1.8116021570417378)))) then: act = 1 else: (if ((-0.03496620113571369 * -0.9409024116660973) < (((4.229352112335353 * 1.847099022417065) + -1.0981407025612038) * obs[3])) then: (if ((obs[2] * 2.266258293031721) < (obs[0] + (-3.4870785286905837 + obs[3]))) then: act = 1 else: act = 1) else: (if ((-1.9459832387775804 + obs[1]) < ((0.88684114236919 + obs[1]) + obs[2])) then: (if ((obs[2] * obs[2]) < -2.797104542959222) then: (if (1.021726898350217 < -8.970101031550763) then: act = 0 else: act = 0) else: act = 0) else: (if (1.5243869934479441 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
317.71 (if (((obs[0] + (-0.8496277156622316 + (obs[1] + (obs[3] + -0.9147662449107989)))) * -1.4470339920923276) < ((((obs[0] + obs[3]) + 0.0031369322546329625) + (((0.29958742154036794 + obs[0]) + -1.8831102729572171) * (0.980846486921994 + -2.784349471555823))) + (0.4630487509918987 * ((-2.3860981823923804 * (obs[0] * 1.0053395450357547)) + -1.8116021570417378)))) then: act = 1 else: (if ((-0.03496620113571369 * -0.9409024116660973) < (((4.229352112335353 * 1.847099022417065) + -1.0981407025612038) * obs[3])) then: (if ((obs[2] * 2.266258293031721) < (obs[0] + (-3.4870785286905837 + obs[3]))) then: act = 1 else: act = 1) else: (if ((-1.9459832387775804 + obs[1]) < ((0.88684114236919 + obs[1]) + obs[2])) then: (if ((obs[2] * obs[2]) < -2.797104542959222) then: (if (1.021726898350217 < -8.970101031550763) then: act = 0 else: act = 0) else: act = 0) else: (if (1.5243869934479441 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
318.58 (if (((obs[0] + (-0.8496277156622316 + (obs[1] + (obs[3] + -0.9147662449107989)))) * -1.4470339920923276) < ((((obs[0] + obs[3]) + 0.0031369322546329625) + (((0.29958742154036794 + obs[0]) + -1.8831102729572171) * (0.980846486921994 + -2.784349471555823))) + (0.4630487509918987 * ((-2.3860981823923804 * (obs[0] * 1.0053395450357547)) + -1.8116021570417378)))) then: act = 1 else: (if ((-0.03496620113571369 * -0.9409024116660973) < (((4.229352112335353 * 1.847099022417065) + -1.0981407025612038) * obs[3])) then: (if ((obs[2] * 2.266258293031721) < (obs[0] + (-3.4870785286905837 + obs[3]))) then: act = 1 else: act = 1) else: (if ((-1.9459832387775804 + obs[1]) < ((0.88684114236919 + obs[1]) + obs[2])) then: (if ((obs[2] * obs[2]) < -2.797104542959222) then: (if (1.021726898350217 < -8.970101031550763) then: act = 0 else: act = 0) else: act = 0) else: (if (1.5243869934479441 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
427.38 (if (((obs[0] + (-0.6348662999761823 + (obs[1] + (obs[3] + ((((1.7386718919572917 * obs[3]) * ((2.3540434228341045 + obs[2]) * 0.9674113637303289)) + ((-0.04718522783125867 * (obs[0] * 2.1006382331460887)) * ((obs[0] * obs[0]) + ((((0.8810726418149317 + obs[2]) + obs[0]) + (((obs[1] + obs[1]) * (-1.8961431422338113 + obs[1])) + obs[3])) * (0.2137978194427932 + -1.1814276660740999))))) + 0.4345509377420138))))) * -0.699288736769721) < ((obs[0] + (((0.31759362448442024 + obs[0]) + 0.11583056859114077) * -1.679682431440092)) + (-0.4383505508823677 * ((((((((-0.5788626527820118 + obs[1]) * (obs[2] + obs[1])) + ((obs[1] + obs[2]) + (obs[0] + obs[1]))) * (obs[1] * ((obs[0] * 1.5150691922508615) + obs[3]))) + 1.7745446229897925) + -0.8923997271358377) * (obs[0] * 0.2634461272227222)) + -1.883037631580307)))) then: act = 1 else: (if (((obs[0] + -2.3466051545171784) * -1.4368610789211067) < (((4.4414019440607415 * 1.8788595521044003) + 0.2400153323680217) * obs[3])) then: (if ((obs[0] * obs[1]) < obs[1]) then: act = 1 else: act = 1) else: (if ((-1.2321550393815714 + obs[1]) < ((1.290803548928172 + obs[1]) + obs[2])) then: (if ((obs[2] * obs[2]) < -3.6603789536796802) then: (if (1.2877728657656413 < -8.327720262986064) then: act = 0 else: act = 0) else: act = 0) else: (if (0.029938271138267636 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
