created virtual environment CPython3.8.10.final.0-64 in 4021ms
  creator CPython3Posix(dest=/localscratch/orfanos.28219769.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) then: act = 0 else: act = 1) else: act = 1) 9.35
198.26 (if (obs[3] < (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) * obs[2])) then: (if (1.6265990211615822 < -0.05002877715900189) then: act = 0 else: (if (1.500114374817345 < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * obs[1]) < max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) then: act = 1 else: act = 1))
334.27 (if (obs[3] < (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) * max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195))) then: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (1.5696381736253793 + -1.0909608048823238)) then: act = 0 else: act = 1) else: (if ((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * obs[1]) < max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) then: act = 1 else: act = 1))
388.26 (if (obs[2] < 0.4314093961103757) then: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (1.820707295144701 + -1.3381541440342983)) then: act = 0 else: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) + (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) * obs[3])) + (2.633020740491415 + (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) * (1.209366717816803 + max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)))))) then: (if (1.8205668777298563 < -0.24946375219701988) then: act = 1 else: act = 1) else: act = 0)) else: (if ((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * obs[1]) < max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) then: act = 1 else: act = 1))
390.44 (if (obs[2] < 0.44392658086648934) then: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (2.23141109640185 + -1.7556193772998143)) then: act = 0 else: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * (obs[0] + ((obs[1] * obs[2]) + max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195)))) + (-2.2305972775745184 * obs[3])) + (3.538370501252921 + (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) * 1.6916725183211503)))) then: (if (2.0290697412325365 < -0.7490772448794288) then: act = 1 else: act = 1) else: act = 0)) else: (if ((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * obs[1]) < max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) then: act = 1 else: act = 1))
413.51 (if (((-1.003115142865635 + -0.19002214080931012) * 0.11992387957379308) < obs[2]) then: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (2.026487804899014 + -1.5514142757804825)) then: act = 0 else: act = 1) else: act = 0)
414.65 (if (((-1.003115142865635 + -0.19002214080931012) * 0.11992387957379308) < obs[2]) then: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (2.026487804899014 + -1.5514142757804825)) then: act = 0 else: act = 1) else: act = 0)
476.55 (if (((0.23857418804983765 + (((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) + (obs[2] + ((obs[3] * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) + (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) + (((obs[1] * obs[0]) + obs[3]) * ((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * -0.6251451107747252) + obs[2])))))) + (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * (-1.6460503215579407 + (-1.5587009155974962 * (obs[3] + 1.5877609085399405))))) * (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)))) * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) < obs[2]) then: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (3.171616194945996 + -2.69433013504157)) then: act = 0 else: act = 1) else: act = 0)
497.16 (if (((0.48972980674625616 + (((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) + (obs[2] + ((obs[3] * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) + (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) + (((obs[1] * obs[0]) + obs[3]) * ((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * -0.932645147036002) + obs[2])))))) + (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * (-1.8023900806717303 + (-1.6473077897468384 * (obs[3] + 2.0242485429809047))))) * (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)))) * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) < obs[2]) then: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (3.317587707865769 + -2.843048670288048)) then: act = 0 else: act = 1) else: act = 0)
499.78 (if (((0.48972980674625616 + (((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) + (obs[2] + ((obs[3] * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) + (max(0, [ 0.865 -0.721  0.872 -0.017] *dot* obs[:] + -0.195) + (((obs[1] * obs[0]) + obs[3]) * ((max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * -0.932645147036002) + obs[2])))))) + (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * (-1.8023900806717303 + (-1.6473077897468384 * (obs[3] + 2.0242485429809047))))) * (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)))) * max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408)) < obs[2]) then: (if (max(0, [0.186 0.148 1.232 2.087] *dot* obs[:] + 0.408) < (3.317587707865769 + -2.843048670288048)) then: act = 0 else: act = 1) else: act = 0)
500
(if (max(0, [ 0.139 -0.036  0.043  0.003] *dot* obs[:] + -0.038) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [ 0.028 -0.213  0.254  0.521] *dot* obs[:] + 0.087)) then: act = 0 else: act = 1) else: act = 1) 9.35
198.24 (if (obs[3] < (max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051) * obs[2])) then: (if (1.8340440094051476 < -0.600840010764397) then: act = 0 else: (if (max(0, [-0.1    0.087  0.384  0.43 ] *dot* obs[:] + 0.14) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.     0.464  0.124 -0.221] *dot* obs[:] + 0.02) * obs[1]) < max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051)) then: act = 1 else: act = 1))
199.27 (if (obs[3] < (max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051) * obs[2])) then: (if (1.8340440094051476 < -0.600840010764397) then: act = 0 else: (if (max(0, [-0.1    0.087  0.384  0.43 ] *dot* obs[:] + 0.14) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.     0.464  0.124 -0.221] *dot* obs[:] + 0.02) * obs[1]) < max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051)) then: act = 1 else: act = 1))
204.6 (if (obs[3] < (max(0, [-0.05   0.2    0.337  0.362] *dot* obs[:] + 0.132) * -0.041488997648713)) then: (if ((obs[2] * 0.20601974721709815) < (obs[2] * 1.0805439275719095)) then: act = 0 else: (if (max(0, [ 0.046 -0.152 -0.164  0.236] *dot* obs[:] + 0.029) < obs[1]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.     0.464  0.124 -0.221] *dot* obs[:] + 0.02) * obs[1]) < max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051)) then: act = 1 else: act = 1))
208.15 (if (obs[3] < (max(0, [-0.05   0.2    0.337  0.362] *dot* obs[:] + 0.132) * -0.041488997648713)) then: (if ((obs[2] * 0.20601974721709815) < (obs[2] * 1.0805439275719095)) then: act = 0 else: (if (max(0, [ 0.046 -0.152 -0.164  0.236] *dot* obs[:] + 0.029) < obs[1]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.     0.464  0.124 -0.221] *dot* obs[:] + 0.02) * obs[1]) < max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051)) then: act = 1 else: act = 1))
228.06 (if (obs[3] < ((((max(0, [ 0.03  -0.036  0.376  0.048] *dot* obs[:] + 0.049) + (obs[0] + max(0, [ 0.161 -0.121  0.08  -0.194] *dot* obs[:] + 0.07))) * obs[1]) * obs[0]) * -0.16977064195373232)) then: (if ((max(0, [-0.188 -0.117 -0.111 -0.024] *dot* obs[:] + -0.055) * max(0, [-0.128 -0.07  -0.194 -0.126] *dot* obs[:] + 0.075)) < (obs[2] * 1.225579941933413)) then: act = 0 else: (if (max(0, [ 0.046 -0.152 -0.164  0.236] *dot* obs[:] + 0.029) < obs[1]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.     0.464  0.124 -0.221] *dot* obs[:] + 0.02) * obs[1]) < max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051)) then: act = 1 else: act = 1))
437.32 (if (obs[3] < ((1.8468463646243685 * obs[1]) * -0.11120396438600816)) then: (if (obs[2] < (((max(0, [-0.012 -0.123  0.027  0.048] *dot* obs[:] + 0.109) + obs[2]) * obs[0]) * (obs[2] + obs[1]))) then: act = 0 else: (if (max(0, [ 0.046 -0.152 -0.164  0.236] *dot* obs[:] + 0.029) < obs[1]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.     0.464  0.124 -0.221] *dot* obs[:] + 0.02) * obs[1]) < max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051)) then: act = 1 else: act = 1))
444.06 (if (obs[3] < ((1.139782467015519 * obs[1]) * -0.17990301104541911)) then: (if ((obs[1] * max(0, [-0.188 -0.117 -0.111 -0.024] *dot* obs[:] + -0.055)) < 1.980979024105088) then: act = 0 else: act = 0) else: (if ((max(0, [-0.     0.464  0.124 -0.221] *dot* obs[:] + 0.02) * obs[1]) < max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051)) then: act = 1 else: act = 1))
500.0 (if (obs[3] < ((-1.1878645190139177 * obs[1]) * ((-1.1556790392199683 + 0.928059996744411) * ((2.0373510874992977 * -0.3445470992900989) + ((-3.920400635900289 * (obs[2] * -2.5394712310961287)) * obs[3]))))) then: act = 0 else: (if ((max(0, [-0.     0.464  0.124 -0.221] *dot* obs[:] + 0.02) * obs[1]) < max(0, [-0.002  0.022  0.009  0.069] *dot* obs[:] + -0.051)) then: act = 1 else: act = 1))
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
54.89 (if (obs[3] < -1.8377846683526418) then: act = 1 else: (if ((obs[3] * obs[1]) < (((2.0397364012272345 * obs[1]) + 0.6482837856603315) * -0.011481902227589658)) then: act = 1 else: (if (-1.3540981219387622 < -1.2128840672872567) then: act = 0 else: (if (1.0354878498869111 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
61.41 (if (obs[1] < -2.614263594448282) then: act = 1 else: (if ((obs[3] * -1.9140574862783994) < (((0.7688601131753834 * obs[1]) + 0.0750156715612269) * 0.20048822783162934)) then: act = 1 else: (if (-0.9928316576947618 < -0.1211639143811643) then: (if (((obs[2] + obs[2]) * (obs[1] * obs[0])) < obs[0]) then: (if (obs[0] < ((obs[3] + obs[0]) + 1.7229931377877565)) then: act = 1 else: act = 0) else: act = 0) else: (if (0.6585590926621991 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
375.54 (if (2.0807374833784418 < -2.606842297195409) then: act = 0 else: (if ((obs[3] * -2.209041941487339) < obs[2]) then: act = 1 else: (if (-1.6794482998882638 < -0.3227131229422321) then: (if (((obs[2] + obs[2]) * -1.831702862032759) < obs[0]) then: (if (obs[0] < ((obs[0] + obs[0]) + 1.5926446122042162)) then: (if (obs[1] < -0.9027999211361275) then: act = 1 else: act = 0) else: act = 0) else: act = 0) else: (if (0.975718136315961 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
407.31 (if (2.0944911728326265 < -2.8958348667991722) then: act = 1 else: (if ((obs[3] * -1.90578749372313) < obs[2]) then: act = 1 else: (if ((((obs[3] + (obs[3] + obs[3])) * (obs[1] + 0.8968070741868397)) * obs[1]) < 0.801613003288821) then: (if (((obs[2] + obs[3]) * -1.4556979253862943) < obs[0]) then: (if (obs[0] < ((obs[0] + obs[1]) + 1.8443467712914796)) then: (if ((1.9428201792630384 + obs[0]) < -0.07198672126563543) then: act = 1 else: act = 0) else: act = 0) else: act = 0) else: (if (1.2226227278508306 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
500.0 (if (2.698108931986278 < obs[2]) then: act = 1 else: (if ((obs[3] * -0.47277942635868286) < obs[2]) then: act = 1 else: (if ((((obs[3] + (obs[0] + obs[3])) * -0.09964202194651386) * obs[1]) < 0.392716528823221) then: (if (((obs[2] + obs[3]) * 2.1596685554062636) < obs[0]) then: (if ((((((obs[2] + 2.253038348193326) + ((((1.8469233146310178 + obs[2]) + obs[2]) * ((obs[1] * obs[0]) * -2.4317256402498635)) + obs[2])) * 1.1916013479217866) + obs[3]) + (((0.3730331464130298 * (-1.7875892421557058 * -0.22081072538867907)) * (-1.0783812213564097 + -2.25)) + 2.6510316521618873)) < ((obs[0] + obs[1]) + 1.1520612852583727)) then: (if ((1.026900688850165 + obs[0]) < -0.9254277099579457) then: act = 1 else: act = 0) else: act = 0) else: act = 0) else: (if (1.0148768103395283 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
