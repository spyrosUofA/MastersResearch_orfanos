created virtual environment CPython3.8.10.final.0-64 in 18243ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232169.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
480
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) < (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) < max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)) then: act = 1 else: act = 1))) else: act = 1) 9.36
500.0 (if (((-2.2896134555489702 * max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486)) + 1.8318902901995424) < (2.0433452305839026 * (((max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) + 2.43132527149508) + ((1.8632991736076494 + -2.3215525474597936) * (((1.7388921190887063 + obs[1]) * (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) + 2.517901062474592)) + max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495)))) + obs[1]))) then: act = 1 else: (if (max(0, [ 0.437 -1.293  1.043  0.091] *dot* obs[:] + 0.495) < (max(0, [ 0.231 -0.078  1.227  1.909] *dot* obs[:] + 0.486) * obs[1])) then: act = 1 else: act = 0))
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.11  -0.093 -0.335 -0.413] *dot* obs[:] + 0.108)) < (max(0, [-0.095  0.164  0.024  0.226] *dot* obs[:] + 0.091) + max(0, [ 0.105 -0.075 -0.104 -0.249] *dot* obs[:] + 0.086))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [ 0.007  0.495 -0.115 -0.068] *dot* obs[:] + -0.039)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.088  0.063 -0.038  0.26 ] *dot* obs[:] + 0.083)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.118 -0.31  -0.102 -0.002] *dot* obs[:] + -0.038) < max(0, [ 0.19  -0.068  0.304  0.238] *dot* obs[:] + 0.097)) then: act = 1 else: act = 1))) else: act = 1) 9.36
9.53 (if ((0.01780208674882816 + max(0, [ 0.088  0.063 -0.038  0.26 ] *dot* obs[:] + 0.083)) < obs[2]) then: (if (((max(0, [ 0.07   0.044 -0.103  0.238] *dot* obs[:] + 0.05) * max(0, [ 0.045  0.137 -0.232  0.031] *dot* obs[:] + -0.024)) * max(0, [-0.11  -0.093 -0.335 -0.413] *dot* obs[:] + 0.108)) < (obs[0] * (obs[2] * obs[1]))) then: (if (-0.45940829984637505 < obs[3]) then: (if (obs[1] < (((((obs[2] * max(0, [-0.265 -0.107 -0.031 -0.056] *dot* obs[:] + -0.037)) * (max(0, [ 0.088  0.063 -0.038  0.26 ] *dot* obs[:] + 0.083) + max(0, [-0.309 -0.048 -0.003  0.26 ] *dot* obs[:] + 0.109))) * max(0, [ 0.256 -0.072 -0.004  0.077] *dot* obs[:] + 0.008)) * obs[0]) * -2.273630146244211)) then: act = 0 else: act = 0) else: (if (-1.935741006798747 < max(0, [ 0.088  0.063 -0.038  0.26 ] *dot* obs[:] + 0.083)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.118 -0.31  -0.102 -0.002] *dot* obs[:] + -0.038) < max(0, [ 0.19  -0.068  0.304  0.238] *dot* obs[:] + 0.097)) then: act = 1 else: act = 1))) else: act = 1)
53.55 (if (2.204803585321143 < (max(0, [-0.076  0.116 -0.09  -0.007] *dot* obs[:] + 0.027) + obs[2])) then: act = 1 else: (if (obs[2] < max(0, [-0.041 -0.027  0.177  0.014] *dot* obs[:] + 0.011)) then: (if ((max(0, [ 0.021  0.131  0.145 -0.259] *dot* obs[:] + 0.007) + (((-0.8739551882107551 * obs[2]) + -0.17262118870929413) * (0.25 + obs[1]))) < (max(0, [-0.305 -0.247 -0.254 -0.321] *dot* obs[:] + 0.104) * obs[3])) then: act = 1 else: (if (-0.8693583822609502 < obs[1]) then: act = 0 else: act = 1)) else: (if (1.8101195012364182 < 2.593041206347711) then: act = 0 else: act = 0)))
438.56 (if ((obs[3] * -1.8591040499874532) < obs[1]) then: act = 1 else: (if (obs[2] < max(0, [-0.108 -0.308  0.29  -0.094] *dot* obs[:] + 0.105)) then: (if ((max(0, [ 0.195  0.156  0.261 -0.242] *dot* obs[:] + 0.039) + ((((obs[0] * 1.5468685668613) * obs[2]) + 0.191086657821691) * ((obs[1] * (-1.8649346652571048 * max(0, [0.217 0.102 0.128 0.224] *dot* obs[:] + 0.075))) + max(0, [ 0.168 -0.412 -0.012  0.352] *dot* obs[:] + 0.082)))) < (-0.022659822270785612 + obs[3])) then: act = 1 else: (if (-2.3411383959623784 < obs[1]) then: act = 0 else: act = 1)) else: (if (0.7789392564487563 < 2.4826512857821426) then: act = 0 else: act = 0)))
441.21 (if ((obs[3] * -4.792274540980303) < obs[1]) then: act = 1 else: (if (obs[2] < max(0, [-0.475 -0.225 -0.094 -0.307] *dot* obs[:] + 0.109)) then: (if (1.7910474611375125 < max(0, [ 0.054 -0.004 -0.599 -0.154] *dot* obs[:] + 0.08)) then: act = 0 else: (if (-3.2831834322155835 < obs[1]) then: act = 0 else: act = 1)) else: (if (1.5241650953482324 < 1.8697009648984795) then: act = 0 else: act = 0)))
443.8 (if ((obs[3] * -4.792274540980303) < obs[1]) then: act = 1 else: (if (obs[2] < max(0, [-0.475 -0.225 -0.094 -0.307] *dot* obs[:] + 0.109)) then: (if (1.7910474611375125 < max(0, [ 0.054 -0.004 -0.599 -0.154] *dot* obs[:] + 0.08)) then: act = 0 else: (if (-3.2831834322155835 < obs[1]) then: act = 0 else: act = 1)) else: (if (1.5241650953482324 < 1.8697009648984795) then: act = 0 else: act = 0)))
454.57 (if ((obs[3] * -5.275473119350792) < obs[1]) then: (if (-1.1535570374520723 < (((obs[3] + max(0, [ 0.032 -0.115  0.238  0.236] *dot* obs[:] + 0.09)) + -2.47408230205482) * ((obs[3] + max(0, [ 0.007  0.495 -0.115 -0.068] *dot* obs[:] + -0.039)) + obs[1]))) then: act = 1 else: act = 1) else: (if (max(0, [-0.044 -0.021 -0.018 -0.117] *dot* obs[:] + 0.062) < max(0, [-0.223 -0.065 -0.038  0.076] *dot* obs[:] + 0.102)) then: (if (1.241617857094395 < max(0, [ 0.054 -0.004 -0.599 -0.154] *dot* obs[:] + 0.08)) then: act = 0 else: act = 0) else: (if (1.1467611833314035 < 1.507407535665394) then: act = 0 else: act = 0)))
500
(if (1.9066292642148568 < obs[2]) then: (if (-2.229101145092345 < obs[3]) then: (if (obs[2] < 0.11919987931045017) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-0.921243806170478 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.1426821268000231 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
55.06 (if (0.7364722907359794 < obs[1]) then: (if (((-1.599688041957278 * 1.0750364141700386) + obs[1]) < (-2.1866920306401063 * ((-2.63649056452696 + obs[1]) * obs[2]))) then: act = 1 else: (if ((obs[1] * 0.9794382086273695) < obs[1]) then: (if (-1.6122138779082364 < (obs[3] * obs[3])) then: act = 0 else: act = 0) else: act = 0)) else: (if ((obs[2] * obs[2]) < (-0.894281850779789 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-2.4168446957987992 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
78.22 (if (1.5129419395919623 < obs[1]) then: (if (obs[2] < -2.948129527461539) then: act = 1 else: act = 1) else: (if ((((((obs[2] + (obs[0] * -2.41166457271418)) * (1.4904816669971208 * 1.3487645007702178)) * 2.057627286732138) * obs[0]) * obs[2]) < 2.650804727064232) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-3.4319709717948452 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
79.5 (if (1.5129419395919623 < obs[1]) then: (if (obs[2] < -2.948129527461539) then: act = 1 else: act = 1) else: (if ((((((obs[2] + (obs[0] * -2.41166457271418)) * (1.4904816669971208 * 1.3487645007702178)) * 2.057627286732138) * obs[0]) * obs[2]) < 2.650804727064232) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-3.4319709717948452 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
111.55 (if (0.07871214451519831 < obs[2]) then: act = 1 else: (if ((((((obs[2] + (obs[0] * -2.7562277158133535)) * (obs[2] * obs[0])) * 1.9149058132923624) * obs[0]) * ((-0.15814969999155143 + (obs[1] * obs[1])) + ((-1.6731675660535141 * obs[3]) + 1.1092972243964325))) < 1.9868926281329267) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-4.197015309334932 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
454.97 (if ((((1.3082152149746764 * ((1.5980666543415796 * 0.7462850868581856) * -0.5541051013217555)) + obs[0]) * obs[3]) < obs[2]) then: act = 1 else: (if (((obs[2] * (0.840959318157736 * -1.537431175390433)) * obs[1]) < 2.1102130220200945) then: (if (obs[3] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-3.347384821641202 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
456.38 (if ((((0.5745670028109369 * -1.9991284050112057) + (((-1.7436397394353806 * (obs[3] + obs[0])) * obs[3]) + obs[0])) * obs[3]) < obs[2]) then: act = 1 else: act = 0)
498.36 (if ((((((-0.9738886363079199 * obs[0]) + (obs[0] * obs[0])) * -1.2062187454994386) + (1.7110739773811217 + (1.9417072294205089 * -1.1990237762625924))) * obs[3]) < obs[2]) then: act = 1 else: act = 0)
