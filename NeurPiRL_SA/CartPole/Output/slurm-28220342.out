created virtual environment CPython3.8.10.final.0-64 in 14752ms
  creator CPython3Posix(dest=/localscratch/orfanos.28220342.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) then: act = 0 else: act = 1) else: act = 1) 9.35
135.39 (if (obs[3] < ((max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) * obs[0])) then: (if ((2.110162246721079 + 0.7500571874086724) < 1.958511002351287) then: act = 0 else: (if (max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) * obs[1]) < max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) then: act = 1 else: act = 1))
155.67 (if (obs[3] < max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) then: (if ((max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) * ((0.406409449365003 * max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324))) < obs[1]) then: (if (((-0.42769713354352623 * (obs[0] * 0.8986967486066606)) + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) < ((obs[3] + 0.004749608452208232) + ((obs[2] + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)))) then: (if (max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) < (obs[0] * ((obs[1] + obs[2]) * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)))) then: (if ((((obs[3] + obs[3]) + -3.5306324198122128) * (0.14709310395558384 * max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037))) < max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) then: act = 1 else: act = 1) else: act = 1) else: act = 0) else: (if (((-1.598997439630013 * obs[3]) + (obs[1] * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324))) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) * obs[1]) < max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) then: act = 1 else: act = 1))
255.07 (if (obs[3] < max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) then: (if ((max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037) * ((0.21756414237964689 * max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324))) < obs[1]) then: (if (((-0.08689459857841902 * (obs[0] * 0.8149430466156139)) + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) < ((obs[3] + 0.027034849794003835) + ((obs[2] + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)) + max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037)))) then: (if (obs[1] < (obs[0] * ((obs[1] + obs[2]) * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)))) then: (if ((((-1.8463197355575793 + obs[3]) + 2.148148628633618) * (-0.02720269456104421 * max(0, [-0.945 -0.705  0.861  0.29 ] *dot* obs[:] + -0.037))) < max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) then: act = 1 else: act = 1) else: act = 1) else: act = 0) else: (if (((-1.0713906626934016 * obs[3]) + (obs[1] * max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324))) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) * obs[1]) < max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324)) then: act = 1 else: act = 1))
499.9 (if (max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) < (1.7453432406462182 * 0.20963280787814265)) then: act = 0 else: act = 1)
500.0 (if (max(0, [-0.109  0.559  1.653  1.484] *dot* obs[:] + 0.324) < (0.8522261248657588 * 0.39869152607361535)) then: act = 0 else: act = 1)
500
(if (max(0, [-0.071 -0.065  0.108 -0.552] *dot* obs[:] + 0.111) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [ 0.383  0.319 -0.138  0.029] *dot* obs[:] + 0.011)) then: act = 0 else: act = 1) else: act = 1) 9.35
155.71 (if (obs[3] < ((max(0, [ 0.08  -0.4    0.006  0.109] *dot* obs[:] + 0.099) + max(0, [ 0.088 -0.002 -0.393 -0.311] *dot* obs[:] + 0.106)) * obs[0])) then: (if ((2.110162246721079 + 0.7500571874086724) < 1.958511002351287) then: act = 0 else: (if (max(0, [-0.176  0.052  0.422  0.443] *dot* obs[:] + 0.131) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.003 -0.078 -0.426 -0.15 ] *dot* obs[:] + 0.109) * obs[1]) < max(0, [-0.193  0.196 -0.338 -0.084] *dot* obs[:] + 0.053)) then: act = 1 else: act = 1))
201.71 (if (obs[3] < ((max(0, [ 0.08  -0.4    0.006  0.109] *dot* obs[:] + 0.099) + max(0, [ 0.088 -0.002 -0.393 -0.311] *dot* obs[:] + 0.106)) * 0.0872470709836714)) then: (if ((max(0, [0.011 0.093 0.209 0.297] *dot* obs[:] + 0.116) + max(0, [-0.228 -0.004 -0.196 -0.099] *dot* obs[:] + -0.077)) < obs[3]) then: (if (-1.7137608189876494 < obs[1]) then: (if (obs[2] < max(0, [-0.222  0.098 -0.016  0.246] *dot* obs[:] + 0.038)) then: act = 1 else: act = 0) else: act = 0) else: (if ((-1.4574735726524888 + obs[0]) < -1.786031325497561) then: act = 0 else: (if (obs[2] < ((max(0, [-0.222  0.239  0.318  0.218] *dot* obs[:] + 0.083) * (obs[2] * (-0.5120266996443283 + max(0, [-0.179  0.025  0.093  0.25 ] *dot* obs[:] + 0.05)))) + max(0, [-0.096  0.106  0.069 -0.227] *dot* obs[:] + 0.089))) then: (if (-1.9010225899121447 < max(0, [-0.055 -0.042  0.102  0.21 ] *dot* obs[:] + 0.02)) then: act = 0 else: (if (max(0, [ 0.088 -0.002 -0.393 -0.311] *dot* obs[:] + 0.106) < obs[3]) then: act = 0 else: act = 0)) else: act = 1))) else: (if ((max(0, [ 0.003 -0.078 -0.426 -0.15 ] *dot* obs[:] + 0.109) * obs[1]) < max(0, [-0.193  0.196 -0.338 -0.084] *dot* obs[:] + 0.053)) then: act = 1 else: act = 1))
204.81 (if (obs[3] < ((max(0, [ 0.08  -0.4    0.006  0.109] *dot* obs[:] + 0.099) + max(0, [ 0.088 -0.002 -0.393 -0.311] *dot* obs[:] + 0.106)) * 0.08493760191727662)) then: (if ((max(0, [0.011 0.093 0.209 0.297] *dot* obs[:] + 0.116) + max(0, [-0.228 -0.004 -0.196 -0.099] *dot* obs[:] + -0.077)) < obs[3]) then: (if (-1.4252945223443534 < obs[1]) then: (if (obs[2] < max(0, [-0.028 -0.272  0.032  0.188] *dot* obs[:] + 0.047)) then: act = 1 else: act = 0) else: act = 0) else: (if ((-1.1717570976141 + obs[0]) < -1.735406257934135) then: act = 0 else: (if (obs[2] < ((max(0, [-0.222  0.239  0.318  0.218] *dot* obs[:] + 0.083) * (((((max(0, [ 0.08  -0.4    0.006  0.109] *dot* obs[:] + 0.099) + max(0, [-0.087 -0.028  0.21  -0.058] *dot* obs[:] + -0.038)) * -2.0599624362556157) + (1.00748870568582 * obs[1])) * (max(0, [0.185 0.263 0.051 0.119] *dot* obs[:] + -0.027) + max(0, [-0.209  0.183 -0.231  0.162] *dot* obs[:] + -0.071))) * (-0.4324416713839428 + max(0, [-0.179  0.025  0.093  0.25 ] *dot* obs[:] + 0.05)))) + max(0, [-0.096  0.106  0.069 -0.227] *dot* obs[:] + 0.089))) then: (if (-2.131711648862479 < max(0, [-0.055 -0.042  0.102  0.21 ] *dot* obs[:] + 0.02)) then: act = 0 else: (if (max(0, [ 0.088 -0.002 -0.393 -0.311] *dot* obs[:] + 0.106) < obs[3]) then: act = 0 else: act = 0)) else: act = 1))) else: (if ((max(0, [ 0.003 -0.078 -0.426 -0.15 ] *dot* obs[:] + 0.109) * obs[1]) < max(0, [-0.193  0.196 -0.338 -0.084] *dot* obs[:] + 0.053)) then: act = 1 else: act = 1))
489.64 (if (obs[3] < (-0.08533661870853379 * (obs[1] + obs[2]))) then: (if (max(0, [ 0.073 -0.251 -0.141 -0.128] *dot* obs[:] + 0.066) < (obs[3] + ((max(0, [ 0.12   0.123 -0.121  0.104] *dot* obs[:] + -0.052) * (((1.5482302134648978 + (obs[0] + (0.5682319179230103 * 1.5653417901305464))) * (-0.26227293817653496 + max(0, [-0.205 -0.267 -0.153 -0.111] *dot* obs[:] + 0.011))) + max(0, [-0.097 -0.097 -0.171 -0.253] *dot* obs[:] + 0.12))) * (((((-1.6647435017339103 + obs[3]) + max(0, [ 0.122 -0.021 -0.168  0.252] *dot* obs[:] + -0.052)) * (0.7807479749097229 * -2.0126535975333177)) + obs[0]) * obs[2])))) then: (if ((1.7591387802285945 + obs[2]) < -0.13587436732943015) then: (if ((obs[2] * max(0, [-0.222  0.239  0.318  0.218] *dot* obs[:] + 0.083)) < (max(0, [-0.183 -0.118  0.028 -0.051] *dot* obs[:] + -0.026) * obs[2])) then: act = 1 else: act = 1) else: (if (((-1.25 + max(0, [-0.222  0.098 -0.016  0.246] *dot* obs[:] + 0.038)) + 0.8863965621058715) < -0.06780803501257583) then: act = 1 else: (if ((-2.030648163230699 * max(0, [-0.222  0.239  0.318  0.218] *dot* obs[:] + 0.083)) < (-1.0181410285584245 + max(0, [ 0.088 -0.002 -0.393 -0.311] *dot* obs[:] + 0.106))) then: act = 1 else: act = 1))) else: act = 0) else: (if ((max(0, [ 0.003 -0.078 -0.426 -0.15 ] *dot* obs[:] + 0.109) * obs[1]) < max(0, [-0.193  0.196 -0.338 -0.084] *dot* obs[:] + 0.053)) then: act = 1 else: act = 1))
494.34 (if (obs[3] < (-0.09123745825131362 * (obs[1] + obs[2]))) then: (if (max(0, [ 0.073 -0.251 -0.141 -0.128] *dot* obs[:] + 0.066) < (obs[3] + ((max(0, [ 0.12   0.123 -0.121  0.104] *dot* obs[:] + -0.052) * (((1.4544404567804072 + (obs[0] + (0.17852186926343172 * 1.7250875804999202))) * (0.21243082254817716 + max(0, [-0.205 -0.267 -0.153 -0.111] *dot* obs[:] + 0.011))) + max(0, [-0.071 -0.065  0.108 -0.552] *dot* obs[:] + 0.111))) * (((((-1.3925490936214795 + obs[3]) + max(0, [ 0.267 -0.08  -0.031 -0.041] *dot* obs[:] + -0.013)) * (0.2329883744565782 * -2.453986790025106)) + obs[0]) * obs[2])))) then: (if ((1.4162021525008235 + obs[2]) < -0.7422318090513409) then: (if ((obs[2] * (max(0, [ 0.094  0.458  0.116 -0.096] *dot* obs[:] + 0.049) * max(0, [ 0.073 -0.251 -0.141 -0.128] *dot* obs[:] + 0.066))) < (max(0, [-0.183 -0.118  0.028 -0.051] *dot* obs[:] + -0.026) * obs[2])) then: act = 1 else: act = 1) else: (if (((-1.6405738731872488 + max(0, [-0.222  0.098 -0.016  0.246] *dot* obs[:] + 0.038)) + 0.834993393783931) < -0.06206938194329037) then: act = 1 else: (if ((-1.672157079734991 * max(0, [-0.222  0.239  0.318  0.218] *dot* obs[:] + 0.083)) < (-0.962802732071557 + max(0, [ 0.088 -0.002 -0.393 -0.311] *dot* obs[:] + 0.106))) then: act = 1 else: act = 1))) else: act = 0) else: (if ((max(0, [ 0.003 -0.078 -0.426 -0.15 ] *dot* obs[:] + 0.109) * obs[1]) < max(0, [-0.193  0.196 -0.338 -0.084] *dot* obs[:] + 0.053)) then: act = 1 else: act = 1))
500.0 (if (obs[3] < ((-1.0829779952974259 + obs[2]) * (obs[2] + obs[2]))) then: act = 0 else: act = 1)
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
189.57 (if ((obs[0] * (obs[2] * 0.9011662863159199)) < (obs[3] * -1.041488997648713)) then: act = 0 else: (if (obs[1] < 0.7727142534826702) then: act = 1 else: (if (obs[3] < -2.029751788956985) then: (if ((obs[2] * obs[2]) < -2.809159535214964) then: (if (0.5539356922936787 < -2.4461615371036993) then: act = 0 else: (if (0.08529358748688431 < -1.492955904230906) then: act = 1 else: act = 1)) else: act = 0) else: (if (0.17614620788361934 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
500.0 (if (((-2.875365549610999 + ((obs[0] * 0.10141492095012317) + obs[1])) * (obs[2] * -0.6780980392201786)) < (obs[3] * -1.1435388764960626)) then: act = 0 else: (if (obs[1] < 1.8097540864656307) then: act = 1 else: (if (obs[3] < (((obs[1] * (obs[2] + obs[3])) + ((obs[2] + (-1.8012568324162133 + 1.421154435686185)) + (obs[2] + (obs[2] + obs[2])))) * obs[2])) then: (if ((obs[1] + (((-1.1634611673911863 * 2.2900814670042764) * (-2.4574410271808884 + 1.382013786164815)) * (-1.3099535336088137 * -2.1231232391655346))) < (((obs[0] + ((((0.8633882687735207 * obs[0]) + (-1.4026531679030865 * obs[3])) * (obs[0] + -0.4997841737325102)) * ((obs[1] * obs[3]) * (obs[1] + (2.5090405838005334 + -1.2153071035372902))))) + obs[0]) * ((obs[1] + (-2.0722108151040373 + 1.6143497446167747)) + ((obs[0] + obs[3]) * -4.253918174733322)))) then: (if (1.8458658189630544 < -2.315528283737287) then: act = 0 else: (if (((-2.056387443432139 * ((obs[2] * 0.4333524876901057) * obs[0])) + -0.7688443998052541) < obs[1]) then: act = 1 else: act = 1)) else: act = 0) else: (if (0.9354786132706093 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
