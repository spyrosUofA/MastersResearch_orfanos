created virtual environment CPython3.8.10.final.0-64 in 28872ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232154.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)) < (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 1 else: act = 1))) else: act = 1) 9.36
9.41 (if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)) < (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 1 else: act = 1))) else: act = 1)
20.68 (if (-2.1441321602834984 < obs[2]) then: (if ((-2.569316653758586 * max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)) < (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374))) then: (if ((obs[3] + -0.07159423762147055) < obs[3]) then: (if (obs[1] < max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)) then: act = 0 else: act = 0) else: (if (-1.9425460470829536 < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 1 else: act = 1))) else: act = 1)
89.68 (if (obs[0] < (-1.288022940360983 * obs[1])) then: (if (obs[3] < 1.5259262318278912) then: (if ((obs[2] + obs[1]) < obs[1]) then: act = 1 else: act = 1) else: act = 1) else: (if ((0.024831238939354572 * obs[3]) < obs[3]) then: act = 1 else: act = 0))
198.11 (if (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) < (-0.26922707800415174 * obs[1])) then: (if (obs[3] < 1.3699903573759997) then: (if ((obs[2] + obs[1]) < obs[1]) then: act = 1 else: act = 1) else: act = 1) else: (if ((-0.0065758091846501165 * obs[3]) < obs[3]) then: act = 1 else: act = 0))
204.94 (if (obs[2] < -0.05624921903210256) then: (if ((max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + (((obs[2] + (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) + obs[1])) * 1.571492312623315) + (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) * max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)))) < obs[0]) then: act = 0 else: (if (obs[0] < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 0 else: (if (obs[1] < ((max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) * 1.614335236496974) + ((obs[1] * -1.8117190657883364) + -0.6050793930546807))) then: (if (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: (if (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) < 0.40722906560939726) then: (if (2.1963767837092156 < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 1 else: act = 0) else: act = 0) else: act = 1) else: act = 0))) else: (if ((-1.2333275088534397 * obs[3]) < obs[3]) then: act = 1 else: act = 0))
211.57 (if (obs[2] < -0.05624921903210256) then: (if ((max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + (((obs[2] + (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) + obs[1])) * 1.571492312623315) + (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) * max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)))) < obs[0]) then: act = 0 else: (if (obs[0] < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 0 else: (if (obs[1] < ((max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) * 1.614335236496974) + ((obs[1] * -1.8117190657883364) + -0.6050793930546807))) then: (if (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: (if (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) < 0.40722906560939726) then: (if (2.1963767837092156 < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 1 else: act = 0) else: act = 0) else: act = 1) else: act = 0))) else: (if ((-1.2333275088534397 * obs[3]) < obs[3]) then: act = 1 else: act = 0))
452.92 (if (obs[2] < 0.20238298104379893) then: (if ((max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + (((max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) + obs[1])) * 1.385042348145274) + (-2.768902443446481 * max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)))) < obs[0]) then: act = 1 else: (if (obs[0] < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 0 else: act = 1)) else: (if ((-1.097163133828436 * obs[3]) < obs[3]) then: act = 1 else: act = 0))
453.38 (if (obs[2] < 0.24058379472225822) then: (if ((max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + (((max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) + obs[1])) * 1.4124919470939032) + (-2.857794921578063 * max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)))) < obs[0]) then: act = 1 else: (if (obs[0] < max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) then: act = 0 else: act = 1)) else: (if ((-1.3426651001386145 * obs[3]) < obs[3]) then: act = 1 else: act = 0))
484.09 (if (obs[2] < 0.37114443899271254) then: (if ((obs[0] + max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) < obs[0]) then: act = 1 else: (if ((((max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) * (obs[2] * 3.38524117971893)) + obs[3]) + ((((0.2919557686776742 * obs[1]) * obs[3]) + -0.06135829092400973) * -0.19273936689664922)) < (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) * (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + -0.460401932596023))) then: act = 0 else: act = 1)) else: (if ((-1.189804204541112 * obs[3]) < obs[3]) then: act = 1 else: act = 0))
486.58 (if (obs[2] < 0.37114443899271254) then: (if ((obs[0] + max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374)) < obs[0]) then: act = 1 else: (if ((((max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) * (obs[2] * 3.38524117971893)) + obs[3]) + ((((0.2919557686776742 * obs[1]) * obs[3]) + -0.06135829092400973) * -0.19273936689664922)) < (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) * (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + -0.460401932596023))) then: act = 0 else: act = 1)) else: (if ((-1.189804204541112 * obs[3]) < obs[3]) then: act = 1 else: act = 0))
494.82 (if (obs[2] < 1.9978174919102254) then: (if (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) < obs[3]) then: act = 1 else: (if ((((max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) * (obs[2] * 3.99282898420594)) + obs[3]) + ((((0.9019480160197993 * max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673)) * obs[3]) + -0.11186642093344425) * -0.5598370207924973)) < (max(0, [-0.852  1.081  0.31  -0.71 ] *dot* obs[:] + 0.673) * (max(0, [-0.261  0.257 -2.066 -0.795] *dot* obs[:] + 0.374) + -0.3663019351770447))) then: act = 0 else: act = 1)) else: (if ((-1.4124209483002266 * obs[3]) < obs[3]) then: act = 1 else: act = 0))
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.133  0.146  0.013 -0.081] *dot* obs[:] + 0.04)) < (max(0, [-0.262 -0.217  0.066  0.379] *dot* obs[:] + 0.06) + max(0, [ 0.01   0.061 -0.138 -0.136] *dot* obs[:] + 0.003))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [ 0.253 -0.123  0.189  0.364] *dot* obs[:] + 0.1)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.296 -0.358  0.261 -0.151] *dot* obs[:] + 0.077)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [0.119 0.079 0.221 0.123] *dot* obs[:] + 0.041) < max(0, [ 0.121  0.045  0.081 -0.083] *dot* obs[:] + 0.035)) then: act = 1 else: act = 1))) else: act = 1) 9.36
41.19 (if (obs[0] < (max(0, [ 0.253 -0.123  0.189  0.364] *dot* obs[:] + 0.1) * (max(0, [ 0.163 -0.376  0.406  0.235] *dot* obs[:] + 0.06) + 0.9168643545202696))) then: act = 1 else: (if (obs[1] < ((1.813441327448487 + ((max(0, [ 0.111 -0.101 -0.298 -0.092] *dot* obs[:] + 0.064) * max(0, [ 0.253 -0.123  0.189  0.364] *dot* obs[:] + 0.1)) + max(0, [-0.175 -0.077 -0.026 -0.471] *dot* obs[:] + 0.105))) + (-2.4164212319844087 * ((1.7896190853503997 + -2.1505504540852503) + max(0, [ 0.121  0.045  0.081 -0.083] *dot* obs[:] + 0.035))))) then: (if (-2.028462158158562 < max(0, [-0.039 -0.236  0.056 -0.39 ] *dot* obs[:] + 0.116)) then: (if (max(0, [-0.107  0.004 -0.19   0.152] *dot* obs[:] + 0.001) < 0.7943661403814827) then: act = 0 else: act = 0) else: act = 0) else: act = 1))
109.31 (if (obs[1] < (obs[3] * (max(0, [0.07  0.052 0.231 0.42 ] *dot* obs[:] + 0.136) + 3.1744958368950518))) then: act = 1 else: (if (obs[2] < ((2.030733134300873 + obs[2]) + obs[2])) then: (if (-3.088309841470731 < max(0, [-0.039 -0.236  0.056 -0.39 ] *dot* obs[:] + 0.116)) then: (if (max(0, [-0.107  0.004 -0.19   0.152] *dot* obs[:] + 0.001) < 0.8184022820359931) then: act = 0 else: act = 0) else: act = 0) else: act = 1))
242.51 (if ((obs[0] * ((max(0, [-0.224  0.42   0.088 -0.251] *dot* obs[:] + 0.044) * (obs[2] + 1.128281105424052)) * -1.0427339901286394)) < obs[3]) then: act = 1 else: (if (max(0, [-0.336  0.097  0.196  0.216] *dot* obs[:] + 0.025) < 0.5272023658948495) then: (if (-6.67150768163421 < max(0, [-0.039 -0.236  0.056 -0.39 ] *dot* obs[:] + 0.116)) then: (if (max(0, [-0.107  0.004 -0.19   0.152] *dot* obs[:] + 0.001) < 0.17137752336747397) then: act = 0 else: act = 0) else: act = 0) else: act = 1))
267.01 (if ((obs[0] * ((max(0, [-0.224  0.42   0.088 -0.251] *dot* obs[:] + 0.044) * (obs[2] + 0.6833574322234656)) * -1.3354610234302025)) < obs[3]) then: (if (obs[1] < 1.9418839664442702) then: act = 1 else: act = 1) else: (if (max(0, [ 0.163 -0.429 -0.067 -0.133] *dot* obs[:] + -0.011) < ((max(0, [ 0.34   0.091  0.317 -0.181] *dot* obs[:] + 0.006) + ((obs[3] * obs[0]) * -0.1268732055161051)) + (1.9861042937079008 + 1.8797402022021386))) then: (if (-6.580473297715503 < max(0, [-0.039 -0.236  0.056 -0.39 ] *dot* obs[:] + 0.116)) then: (if (max(0, [-0.107  0.004 -0.19   0.152] *dot* obs[:] + 0.001) < 0.32957374756339824) then: act = 0 else: act = 0) else: act = 0) else: act = 1))
328.18 (if ((obs[2] * ((max(0, [-0.224  0.42   0.088 -0.251] *dot* obs[:] + 0.044) * (obs[0] + 1.9463948872803793)) * -4.314281687300525)) < obs[3]) then: (if (obs[1] < 2.1470227740237715) then: act = 1 else: act = 0) else: (if ((((obs[0] * obs[3]) + 1.5308309925705965) + max(0, [ 0.066 -0.014 -0.309 -0.515] *dot* obs[:] + 0.122)) < (((-1.1902831721433396 * obs[2]) * obs[3]) + (2.6447983980538288 + 2.1721873722334926))) then: (if (-6.896267132567807 < max(0, [-0.039 -0.236  0.056 -0.39 ] *dot* obs[:] + 0.116)) then: (if (max(0, [-0.107  0.004 -0.19   0.152] *dot* obs[:] + 0.001) < -0.5238689055954796) then: act = 0 else: act = 0) else: act = 0) else: act = 1))
492.57 (if ((obs[2] * ((max(0, [-0.088  0.084 -0.385 -0.074] *dot* obs[:] + 0.08) * (max(0, [-0.092 -0.172 -0.257 -0.594] *dot* obs[:] + 0.143) + 5.119074153978904)) * -5.282010420263175)) < obs[3]) then: (if ((obs[2] + max(0, [-0.392  0.034  0.345  0.244] *dot* obs[:] + 0.114)) < obs[3]) then: (if (-0.4527743446576672 < 2.369743041796175) then: act = 1 else: (if ((0.2600375267710423 * -0.018393519080687537) < 1.2457386011013059) then: act = 1 else: act = 0)) else: (if (max(0, [-0.205 -0.191  0.221  0.238] *dot* obs[:] + 0.089) < (1.5421620420918836 + (max(0, [0.057 0.126 0.358 0.334] *dot* obs[:] + 0.129) + max(0, [ 0.28  -0.024  0.114  0.202] *dot* obs[:] + 0.122)))) then: (if (max(0, [ 0.006  0.188 -0.175 -0.135] *dot* obs[:] + -0.019) < (0.7512568787629654 + obs[3])) then: act = 1 else: act = 1) else: (if (((obs[1] + ((1.8753054359478942 + ((max(0, [-0.107  0.004 -0.19   0.152] *dot* obs[:] + 0.001) * -0.3047940512577229) + (-1.7306447382716517 + (max(0, [-0.078  0.173 -0.211  0.115] *dot* obs[:] + -0.036) + max(0, [-0.15   0.183 -0.04   0.341] *dot* obs[:] + 0.103))))) + obs[3])) + ((max(0, [-0.168 -0.012 -0.072  0.001] *dot* obs[:] + 0.125) * obs[2]) + (((-0.041873523782499866 * 3.721968220427636) * obs[2]) + (obs[2] + -0.5120056530123913)))) < 1.139279024046937) then: (if (obs[0] < obs[1]) then: act = 0 else: (if (obs[0] < max(0, [ 0.076  0.048 -0.126 -0.142] *dot* obs[:] + 0.076)) then: act = 1 else: act = 0)) else: act = 0))) else: (if ((((obs[0] * obs[3]) + max(0, [ 0.01   0.061 -0.138 -0.136] *dot* obs[:] + 0.003)) + obs[3]) < (((-0.2890630423535782 * obs[2]) * obs[3]) + (2.4621673074455233 + 3.1855990607689977))) then: (if (-7.388138280228356 < max(0, [-0.039 -0.236  0.056 -0.39 ] *dot* obs[:] + 0.116)) then: (if (max(0, [-0.107  0.004 -0.19   0.152] *dot* obs[:] + 0.001) < -0.32876159685389117) then: act = 0 else: act = 0) else: act = 0) else: act = 1))
497.13 (if ((obs[2] * ((max(0, [-0.088  0.084 -0.385 -0.074] *dot* obs[:] + 0.08) * (max(0, [-0.092 -0.172 -0.257 -0.594] *dot* obs[:] + 0.143) + 5.289635627988858)) * -5.067115208730594)) < obs[3]) then: (if ((obs[2] + max(0, [-0.392  0.034  0.345  0.244] *dot* obs[:] + 0.114)) < obs[3]) then: (if (-0.5363943658491925 < 2.5126419730570397) then: act = 1 else: (if ((0.48718184504920614 * -0.2671523059466393) < 1.310243329685586) then: act = 1 else: act = 0)) else: (if (max(0, [-0.205 -0.191  0.221  0.238] *dot* obs[:] + 0.089) < (1.6449135545452833 + (max(0, [0.057 0.126 0.358 0.334] *dot* obs[:] + 0.129) + max(0, [ 0.28  -0.024  0.114  0.202] *dot* obs[:] + 0.122)))) then: (if (max(0, [ 0.006  0.188 -0.175 -0.135] *dot* obs[:] + -0.019) < (0.747316428878279 + obs[3])) then: act = 1 else: act = 1) else: (if (((obs[1] + ((1.6925188158594637 + ((max(0, [-0.107  0.004 -0.19   0.152] *dot* obs[:] + 0.001) * -0.40161171546271934) + (-1.5927457826608773 + -0.2335730308857762))) + obs[3])) + ((max(0, [-0.168 -0.012 -0.072  0.001] *dot* obs[:] + 0.125) * obs[2]) + (((-0.03934256349392934 * 3.8111789753385774) * obs[2]) + (obs[2] + -0.6395085838053065)))) < 0.9385133387576459) then: (if (obs[0] < obs[1]) then: act = 0 else: (if (obs[0] < max(0, [ 0.076  0.048 -0.126 -0.142] *dot* obs[:] + 0.076)) then: act = 1 else: act = 0)) else: act = 0))) else: (if ((((obs[0] * obs[3]) + max(0, [ 0.01   0.061 -0.138 -0.136] *dot* obs[:] + 0.003)) + obs[3]) < (((-0.0701064828212764 * obs[2]) * obs[3]) + (2.6640903898829666 + 3.3467552950778705))) then: (if (-7.423868139498251 < max(0, [-0.039 -0.236  0.056 -0.39 ] *dot* obs[:] + 0.116)) then: (if (max(0, [-0.107  0.004 -0.19   0.152] *dot* obs[:] + 0.001) < -0.15466089235573927) then: act = 0 else: act = 0) else: act = 0) else: act = 1))
500.0 (if ((obs[2] * ((max(0, [-0.078  0.173 -0.211  0.115] *dot* obs[:] + -0.036) + obs[3]) + -2.511453788860958)) < obs[3]) then: act = 1 else: act = 0)
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
99.75 (if (1.9272820818366143 < obs[2]) then: (if (-2.0318388903490816 < obs[3]) then: (if (obs[2] < -0.3964229651750343) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((((((obs[1] + 1.9931228718848049) + (obs[3] + 2.159476964666661)) + ((obs[2] * ((1.9971184186909638 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -1.1017261321076794) < (-0.6662591748382897 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.6786005529354888 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
101.98 (if (1.9272820818366143 < obs[2]) then: (if (-2.0318388903490816 < obs[3]) then: (if (obs[2] < -0.3964229651750343) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((((((obs[1] + 1.9931228718848049) + (obs[3] + 2.159476964666661)) + ((obs[2] * ((1.9971184186909638 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -1.1017261321076794) < (-0.6662591748382897 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.6786005529354888 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
106.31 (if (1.9272820818366143 < obs[2]) then: (if (-2.0318388903490816 < obs[3]) then: (if (obs[2] < -0.3964229651750343) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((((((obs[1] + 1.9931228718848049) + (obs[3] + 2.159476964666661)) + ((obs[2] * ((1.9971184186909638 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -1.1017261321076794) < (-0.6662591748382897 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.6786005529354888 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
127.28 (if (obs[0] < 0.5045159073480943) then: (if ((-1.4063125369719247 * (obs[1] * (obs[3] + (-1.450831853457702 * (-0.5 * ((obs[0] + 2.1016466120813986) * obs[2])))))) < obs[3]) then: (if (obs[2] < -1.7436293726113459) then: (if (obs[1] < obs[2]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: act = 1)
425.11 (if (obs[0] < 1.4576724908132537) then: (if ((((0.6665277150107768 * ((2.2151308950741653 * 0.35425124726276125) * obs[2])) * 2.21308064346246) * -1.0843021114169717) < obs[3]) then: (if (obs[3] < (1.4705579368168111 + ((0.06569730273972191 + obs[2]) + (obs[1] + (1.9336907685782618 * obs[0]))))) then: act = 1 else: act = 0) else: act = 0) else: act = 1)
434.88 (if (obs[0] < 1.4576724908132537) then: (if ((((0.6665277150107768 * ((2.2151308950741653 * 0.35425124726276125) * obs[2])) * 2.21308064346246) * -1.0843021114169717) < obs[3]) then: (if (obs[3] < (1.4705579368168111 + ((0.06569730273972191 + obs[2]) + (obs[1] + (1.9336907685782618 * obs[0]))))) then: act = 1 else: act = 0) else: act = 0) else: act = 1)
439.26 (if (obs[0] < 1.4576724908132537) then: (if ((((0.6665277150107768 * ((2.2151308950741653 * 0.35425124726276125) * obs[2])) * 2.21308064346246) * -1.0843021114169717) < obs[3]) then: (if (obs[3] < (1.4705579368168111 + ((0.06569730273972191 + obs[2]) + (obs[1] + (1.9336907685782618 * obs[0]))))) then: act = 1 else: act = 0) else: act = 0) else: act = 1)
445.78 (if (obs[0] < 1.7449230160277556) then: (if ((obs[1] * -0.2097916982933588) < obs[3]) then: (if (obs[0] < (2.173122668032338 + (((2.3539575955569254 + (((-0.11603821566967504 * (((((obs[0] * 0.8230170788049687) + (obs[3] + obs[3])) * (obs[3] * obs[1])) + (obs[1] + (obs[3] * (obs[2] * obs[0])))) + obs[0])) + (obs[2] + (obs[1] * -0.2969030055016729))) * (obs[1] * (-1.6825814748901236 * obs[3])))) + obs[2]) + (obs[1] + (2.6848257132703304 * obs[0]))))) then: act = 1 else: act = 0) else: act = 0) else: act = 1)
446.9 (if (obs[0] < (obs[2] + 1.9389680741762123)) then: (if ((obs[1] * -0.1993901729465305) < obs[3]) then: (if (obs[0] < (2.974103562833151 + (((3.492480763828856 + ((obs[3] + obs[2]) * (obs[1] * -0.6513154857326766))) + obs[2]) + (obs[1] + (3.9126275792378546 * obs[0]))))) then: act = 1 else: act = 0) else: act = 0) else: act = 1)
500.0 (if (0.46515930593279864 < (obs[2] + 1.0000041805851083)) then: (if ((((((obs[2] * 2.227072012612505) + obs[1]) * 0.13388613074332073) * (0.7975900992578405 * (obs[2] + 2.052546138205245))) * -0.7785167908669166) < obs[3]) then: (if (-1.0902540228902065 < obs[2]) then: act = 1 else: act = 0) else: act = 0) else: act = 1)
