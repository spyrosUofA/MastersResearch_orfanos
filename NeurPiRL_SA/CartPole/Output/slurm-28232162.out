created virtual environment CPython3.8.10.final.0-64 in 18691ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232162.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) < (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) < max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492)) then: act = 1 else: act = 1))) else: act = 1) 9.36
165.96 (if ((((-2.0882293412326507 * obs[0]) * max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) + 1.4418296506999382) < (2.4050221963978373 * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: act = 1 else: (if (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1])) then: act = 1 else: act = 0))
381.04 (if ((((-2.27558535208591 * obs[0]) * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492)) + 1.1946769387679168) < (2.446194484728618 * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: act = 1 else: (if (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1])) then: act = 1 else: act = 0))
409.08 (if ((((-2.5190766837386347 * obs[0]) * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492)) + 1.1183735281435565) < (2.3857997681994365 * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: act = 1 else: (if (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1])) then: act = 1 else: act = 0))
414.13 (if ((((-2.5190766837386347 * obs[0]) * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492)) + 1.1183735281435565) < (2.3857997681994365 * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: act = 1 else: (if (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1])) then: act = 1 else: act = 0))
454.31 (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) + 0.42166018213902084) < (1.1376231162805852 * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: act = 1 else: act = 0)
457.62 (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) + 0.42166018213902084) < (1.1376231162805852 * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: act = 1 else: act = 0)
464.42 (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) + 0.42166018213902084) < (1.1376231162805852 * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: act = 1 else: act = 0)
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.084 -0.183 -0.408 -0.518] *dot* obs[:] + 0.159)) < (max(0, [-0.16   0.189 -0.114 -0.149] *dot* obs[:] + -0.033) + max(0, [ 0.167 -0.152  0.312  0.085] *dot* obs[:] + 0.017))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.047 -0.317  0.118 -0.215] *dot* obs[:] + -0.034)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.143  0.099 -0.291 -0.341] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.113 -0.211 -0.151  0.26 ] *dot* obs[:] + 0.091) < max(0, [ 0.248  0.186  0.165 -0.163] *dot* obs[:] + -0.018)) then: act = 1 else: act = 1))) else: act = 1) 9.36
9.41 (if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.084 -0.183 -0.408 -0.518] *dot* obs[:] + 0.159)) < (max(0, [-0.16   0.189 -0.114 -0.149] *dot* obs[:] + -0.033) + max(0, [ 0.167 -0.152  0.312  0.085] *dot* obs[:] + 0.017))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.047 -0.317  0.118 -0.215] *dot* obs[:] + -0.034)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.143  0.099 -0.291 -0.341] *dot* obs[:] + 0.121)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.113 -0.211 -0.151  0.26 ] *dot* obs[:] + 0.091) < max(0, [ 0.248  0.186  0.165 -0.163] *dot* obs[:] + -0.018)) then: act = 1 else: act = 1))) else: act = 1)
24.9 (if (max(0, [ 0.055 -0.005  0.173 -0.275] *dot* obs[:] + 0.127) < max(0, [ 0.003 -0.222 -0.262 -0.257] *dot* obs[:] + 0.135)) then: (if (max(0, [-0.115  0.077  0.056 -0.369] *dot* obs[:] + 0.036) < max(0, [-0.16   0.189 -0.114 -0.149] *dot* obs[:] + -0.033)) then: act = 1 else: act = 1) else: act = 0)
26.64 (if (max(0, [ 0.055 -0.005  0.173 -0.275] *dot* obs[:] + 0.127) < max(0, [ 0.003 -0.222 -0.262 -0.257] *dot* obs[:] + 0.135)) then: (if (max(0, [-0.115  0.077  0.056 -0.369] *dot* obs[:] + 0.036) < max(0, [-0.16   0.189 -0.114 -0.149] *dot* obs[:] + -0.033)) then: act = 1 else: act = 1) else: act = 0)
69.29 (if ((((max(0, [-0.16   0.189 -0.114 -0.149] *dot* obs[:] + -0.033) + obs[3]) + max(0, [ 0.248  0.186  0.165 -0.163] *dot* obs[:] + -0.018)) + (-0.23703688408605433 * (obs[2] + max(0, [ 0.409 -0.043 -0.223 -0.153] *dot* obs[:] + 0.107)))) < obs[1]) then: act = 0 else: act = 1)
97.75 (if (((2.2853351478166735 + ((obs[2] * (obs[0] + obs[3])) * (-0.6460247073605112 + (max(0, [ 0.165  0.362 -0.005  0.092] *dot* obs[:] + 0.033) + (-1.0057631626180723 + obs[1]))))) * obs[3]) < obs[1]) then: act = 0 else: act = 1)
133.23 (if (((2.200063527234612 + (-2.2381455444500427 * -2.1264113805013234)) * obs[3]) < obs[1]) then: act = 0 else: act = 1)
184.24 (if (obs[3] < 0.013552759142061693) then: act = 0 else: act = 1)
191.39 (if (obs[3] < 0.013552759142061693) then: act = 0 else: act = 1)
191.76 (if (obs[3] < 0.013552759142061693) then: act = 0 else: act = 1)
192.37 (if (obs[3] < 0.013552759142061693) then: act = 0 else: act = 1)
193.2 (if (obs[3] < 0.013141571019041877) then: act = 0 else: act = 1)
193.82 (if (obs[3] < 0.013141571019041877) then: act = 0 else: act = 1)
500.0 (if ((-0.23722452907515362 * ((obs[3] * 0.9033892188169532) * 1.9068261360249597)) < obs[2]) then: act = 1 else: act = 0)
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
98.42 (if (1.49292115568852 < obs[2]) then: (if (-3.4146370566608133 < obs[3]) then: (if (obs[2] < -0.46029746016279427) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((((((obs[1] + 2.2841818050661775) + (obs[3] + 1.25)) + ((obs[2] * ((2.1913890139770786 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -2.0512604041295854) < (-0.7154272846521657 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-0.6232330073008491 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
166.34 (if (0.05069123757051003 < obs[2]) then: (if (((obs[3] * ((obs[2] * 1.6946192288923843) + obs[2])) + 0.99441325536565) < 0.9390232248469352) then: (if (-1.8434645200330726 < -2.4048790846291044) then: (if (obs[2] < (((0.2482281004184369 + ((0.8863630695849124 + obs[2]) + (obs[2] * obs[3]))) + ((-0.9063174522037136 * -1.945024113731466) * obs[0])) + (((-1.279305430537114 * (obs[2] * obs[0])) * ((obs[2] + -0.1394221216023589) * obs[2])) + 1.5635956245345672))) then: act = 0 else: (if ((0.5402492799396702 * 3.1099364321567387) < (-1.9052865337016882 * -0.09870629030710992)) then: (if (-1.1860054254814807 < (obs[2] + obs[3])) then: act = 1 else: act = 1) else: (if ((obs[1] + 1.8606688353874665) < ((((obs[1] + obs[0]) * -2.1531322622155264) + -1.500805895867074) + (((obs[3] * 2.257146280810814) * 0.29748335947039656) * obs[2]))) then: act = 1 else: (if (obs[1] < 1.2889138395090858) then: act = 0 else: act = 0)))) else: (if (0.736540594086097 < 0.7768224858460024) then: act = 0 else: (if (obs[3] < (-0.7528097540654517 + 0.5232570885363306)) then: (if (-0.1731507129472819 < 2.865670241657737) then: act = 0 else: act = 1) else: (if (0.7353194326968323 < obs[3]) then: act = 1 else: act = 1)))) else: act = 1) else: (if ((((((((3.5715136882321845 + -1.833590237794724) + obs[2]) + obs[3]) + (obs[3] + 1.13027407554913)) + ((obs[2] * ((1.076796257792609 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -1.8991747677135293) < (-1.2690007837896342 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.1912172719942111 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
234.02 (if (0.042862280324715896 < obs[2]) then: (if ((((0.9680720215390186 * ((obs[0] * 0.6844485741555385) * (obs[2] + obs[2]))) * (1.047544211840687 * -0.07363258740250214)) * -1.5825230423322614) < 0.1982544856034127) then: (if (-1.3628348065310554 < -2.169376604654937) then: (if (obs[2] < (((-0.8404219492714657 + (1.6521657580543356 + (obs[2] * obs[3]))) + ((-0.737947342034527 * (-2.453092542723029 + obs[2])) * obs[0])) + (obs[1] + 2.123629760286988))) then: act = 0 else: (if ((1.2234349749964168 * 3.253871800819725) < (-2.239930686831192 * -0.5684782817108984)) then: (if (-0.5537430871313218 < (obs[0] + obs[3])) then: act = 1 else: act = 1) else: (if ((obs[1] + 1.2382668829648082) < ((((obs[0] + obs[0]) * -1.9641035383700942) + -2.0805010905190953) + ((obs[2] + -1.277989414063689) * obs[1]))) then: act = 1 else: (if (obs[1] < ((obs[1] + obs[1]) * (obs[0] * -0.937225808733732))) then: act = 0 else: act = 0)))) else: (if (0.9287878102810522 < -1.2810777704090923) then: act = 0 else: (if (obs[3] < (-2.270515610054022 + -0.8327276873718186)) then: (if (-0.3813304899220645 < 3.766650399350807) then: act = 0 else: act = 1) else: (if (0.6264181602691621 < obs[3]) then: act = 1 else: act = 1)))) else: act = 1) else: (if ((((((((4.642782735705069 + -2.2129422155734226) + obs[2]) + obs[3]) + (obs[3] + 1.281106806656411)) + ((obs[2] * ((0.15956157217082245 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -1.803164493404429) < (-0.8027703522397176 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.7495316626110622 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
420.58 (if ((-0.25 + (obs[3] * (obs[3] + 0.8146021703036251))) < (obs[2] + (((0.7827470677784613 * obs[3]) * (-1.1134773295194726 + obs[1])) * obs[0]))) then: (if ((((1.0792251177043526 * ((obs[0] * 0.7284347282959944) * (obs[2] + obs[2]))) * (0.6650015885291277 * 0.6398739183243403)) * -1.3886566625286425) < 0.4528785205938948) then: (if (-1.4604570871309144 < -2.3145990774247127) then: (if (obs[2] < (((-0.35893079925707144 + (2.171306354825802 + (obs[2] * obs[3]))) + ((-0.8148406517906304 * (-2.2765817238346617 + obs[2])) * obs[0])) + (obs[1] + 2.288793609739695))) then: act = 0 else: (if ((1.410913269891569 * 2.4885508545926376) < (-2.23234635333689 * 0.14218908483558979)) then: (if (-1.0599792632633855 < (obs[0] + obs[3])) then: act = 1 else: act = 1) else: (if ((obs[1] + 1.6376971380640954) < ((((obs[0] + obs[0]) * -2.4471295770755397) + -1.8379401368822292) + ((obs[2] + -1.574985054417897) * obs[1]))) then: act = 1 else: (if (obs[1] < ((obs[1] + obs[1]) * (obs[0] * -0.8458617513080866))) then: act = 0 else: act = 0)))) else: (if (((((obs[1] * 0.4260934009015778) * (0.48493915797554865 * obs[3])) * ((1.1294383530334875 + obs[3]) * (-1.0624507006560562 * obs[1]))) + ((obs[3] + obs[2]) * 1.48031384494261)) < 0.029607648133196284) then: act = 0 else: (if (obs[1] < (-2.5223993082609106 + -0.7391180094829839)) then: (if (-0.1262457401031398 < 3.873636076153522) then: act = 0 else: act = 1) else: (if (0.9097978841155041 < obs[3]) then: act = 1 else: act = 1)))) else: act = 1) else: (if ((((((((4.419210163241582 + -1.8497341355245247) + obs[2]) + obs[3]) + (obs[3] + 1.6004856454270897)) + ((obs[2] * ((-0.06351424389316199 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -2.0892492960773077) < (-1.741500933929697 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-2.0891002974868083 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
420.68 (if ((-0.2655654520005196 + (obs[3] * ((obs[3] * (((1.498733622173579 * (obs[0] * obs[2])) * (-0.4029534011018066 * (0.9622763070945777 * obs[3]))) + (1.256060046034822 * 0.07375509192224977))) + -0.1252557320210982))) < (obs[2] + (((1.5343687188992057 * obs[1]) * (-0.6802487841406867 + obs[2])) * obs[0]))) then: (if ((((0.13878846523802862 * ((obs[0] * -0.09125949631906344) * (obs[2] + obs[2]))) * (-0.7480430181031622 * 0.96925375721833)) * -2.2375728038579004) < 1.5937374770927555) then: (if (-1.6783917060905331 < -3.3861089910758366) then: (if (obs[2] < (((0.8570237709862755 + (2.9324973846082703 + (obs[2] * obs[3]))) + ((-1.7769215589034686 * (-1.6783627250939026 + obs[2])) * obs[0])) + (obs[1] + 0.1880933731704581))) then: act = 0 else: (if ((0.8065369944162737 * 3.1647914856324624) < (-2.7942211118910785 * -1.4058718256462035)) then: (if (-1.7889294586661522 < (obs[0] + obs[3])) then: (if ((obs[2] + ((-2.1506564978082365 * obs[3]) * -1.6526667331786835)) < (-0.2889013932406335 * (((-0.9554093550704921 + 1.0188873780780683) + (1.6997251629106298 + ((obs[2] * 1.831634822697673) * (-0.9441466326255508 + 1.829902739412215)))) + (((-1.9375226209443608 * (0.019308078662948758 * obs[0])) * obs[3]) * obs[1])))) then: act = 1 else: (if ((-2.181065081481432 + (obs[3] + obs[3])) < ((1.6416282373322832 * 2.684600806414279) + 2.4746734417181484)) then: (if ((obs[0] * obs[2]) < obs[2]) then: act = 0 else: (if ((obs[1] + ((-1.4442455118688189 * 0.9277201559670145) * (2.0658927897725157 + (obs[1] + obs[0])))) < obs[0]) then: act = 1 else: act = 0)) else: act = 0)) else: act = 1) else: (if ((obs[1] + 2.057567157994861) < (((obs[0] * obs[1]) + 2.6535762878125815) + ((obs[2] + -1.2540835818186415) * obs[1]))) then: act = 1 else: (if (obs[1] < ((obs[1] + obs[1]) * (obs[0] * -1.7353332635668104))) then: act = 0 else: act = 0)))) else: (if (((((obs[1] * -0.13304103893701702) * (1.3642346802865564 * obs[3])) * ((0.6774796626481058 + obs[3]) * (-1.3564304614069964 * obs[1]))) + ((obs[3] + obs[2]) * 1.8401798204688604)) < 0.04263103495251075) then: act = 0 else: (if (obs[1] < (-2.7917826921915276 + -0.7370130279662599)) then: (if (-0.5408440673690804 < 3.669255349253166) then: act = 0 else: act = 1) else: (if (0.487892922586783 < obs[3]) then: act = 1 else: act = 1)))) else: act = 1) else: (if ((((((((5.1805577052304495 + -1.3318362127265808) + obs[2]) + obs[3]) + (obs[3] + 0.4405740917615079)) + ((obs[2] * ((1.8001708676786397 + obs[1]) + obs[0])) + obs[2])) * obs[2]) * -3.56440676872447) < (-2.705651418428616 * (obs[2] + obs[1]))) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.5727621240001846 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
