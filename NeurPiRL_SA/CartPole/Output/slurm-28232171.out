created virtual environment CPython3.8.10.final.0-64 in 15759ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232171.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) < (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) + max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43)) then: act = 1 else: act = 1))) else: act = 1) 9.36
406.48 (if (((-1.0 * ((max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) + obs[0])) * ((obs[0] + (1.25 * -0.25)) + 0.9406808934460907))) + 1.25) < (2.25 * max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43))) then: act = 1 else: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) * obs[1])) then: act = 1 else: act = 0))
434.21 (if (((-0.9283442863758824 * ((max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) + obs[0])) * ((obs[0] + (1.1850729466845007 * -0.39129878684748703)) + 0.7714141748919291))) + 1.0244340431146757) < (2.116059125718082 * max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43))) then: act = 1 else: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) * obs[1])) then: act = 1 else: act = 0))
499.5 (if (((-0.8522890467462632 * ((max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * (1.1859725979622502 + (obs[1] * (2.2275746452740384 + ((obs[2] * (obs[0] + obs[3])) * (-1.1453727056758471 + ((max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) + (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) + (obs[1] + obs[0]))) + (-1.107829147262192 + obs[1])))))))) * ((obs[0] + -0.1785359612260427) + 1.2406262371196386))) + 1.2200784670459077) < (1.7316871652813717 * max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43))) then: act = 1 else: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) * obs[1])) then: act = 1 else: act = 0))
499.62 (if (((-0.8522890467462632 * ((max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) * (1.1859725979622502 + (obs[1] * (2.2275746452740384 + ((obs[2] * (obs[0] + obs[3])) * (-1.1453727056758471 + ((max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) + (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) + (obs[1] + obs[0]))) + (-1.107829147262192 + obs[1])))))))) * ((obs[0] + -0.1785359612260427) + 1.2406262371196386))) + 1.2200784670459077) < (1.7316871652813717 * max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43))) then: act = 1 else: (if (max(0, [-0.142 -0.265  2.09   1.009] *dot* obs[:] + 0.43) < (max(0, [-1.133 -0.637 -0.76   0.681] *dot* obs[:] + 0.561) * obs[1])) then: act = 1 else: act = 0))
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.121 -0.013 -0.285  0.358] *dot* obs[:] + 0.098)) < (max(0, [ 0.214 -0.066  0.186  0.267] *dot* obs[:] + 0.07) + max(0, [-0.143  0.179  0.247  0.171] *dot* obs[:] + 0.076))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.453  0.238 -0.143 -0.202] *dot* obs[:] + 0.069)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011) < max(0, [-0.152  0.11  -0.516 -0.224] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1) 9.36
12.48 (if ((-0.05655367444072035 + max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107)) < obs[2]) then: (if (((max(0, [ 0.131 -0.055 -0.154 -0.001] *dot* obs[:] + -0.035) * max(0, [ 0.333  0.31  -0.111 -0.254] *dot* obs[:] + 0.068)) * max(0, [ 0.121 -0.013 -0.285  0.358] *dot* obs[:] + 0.098)) < (obs[0] * (obs[2] * obs[1]))) then: (if (-0.9938543179906352 < obs[3]) then: (if (obs[1] < (((((-0.08604384084578315 * max(0, [ 0.139  0.068  0.241 -0.09 ] *dot* obs[:] + 0.01)) * (max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107) + max(0, [-0.158 -0.206 -0.111 -0.374] *dot* obs[:] + 0.117))) * max(0, [ 0.221 -0.24   0.256  0.002] *dot* obs[:] + 0.055)) * obs[0]) * -2.4676016539911214)) then: act = 0 else: act = 0) else: (if (-1.9289505946958454 < max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011) < max(0, [-0.152  0.11  -0.516 -0.224] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1)
80.0 (if ((-0.39793504393087525 + obs[3]) < obs[3]) then: (if (max(0, [-0.012 -0.116  0.129  0.161] *dot* obs[:] + 0.053) < 0.06391135209898158) then: (if (-2.3146548937132496 < obs[3]) then: (if (obs[1] < (((max(0, [0.029 0.125 0.077 0.181] *dot* obs[:] + 0.057) * (max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061) + obs[3])) * obs[0]) * ((obs[1] + max(0, [ 0.45  -0.084  0.348 -0.029] *dot* obs[:] + -0.004)) + obs[1]))) then: (if ((((max(0, [-0.004 -0.116 -0.063  0.028] *dot* obs[:] + 0.135) * max(0, [-0.133  0.309  0.116 -0.084] *dot* obs[:] + 0.025)) * max(0, [-0.158 -0.206 -0.111 -0.374] *dot* obs[:] + 0.117)) * 1.1342176738862002) < ((obs[2] + max(0, [-0.291 -0.215 -0.042  0.117] *dot* obs[:] + 0.049)) + (0.9274429777308073 + max(0, [-0.021 -0.07  -0.084 -0.573] *dot* obs[:] + 0.115)))) then: act = 0 else: act = 1) else: act = 0) else: (if (-1.8937780001949251 < max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011) < max(0, [-0.152  0.11  -0.516 -0.224] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1)
126.21 (if ((-0.39793504393087525 + obs[3]) < obs[3]) then: (if (max(0, [-0.012 -0.116  0.129  0.161] *dot* obs[:] + 0.053) < 0.06391135209898158) then: (if (-2.3146548937132496 < obs[3]) then: (if (obs[1] < (((max(0, [0.029 0.125 0.077 0.181] *dot* obs[:] + 0.057) * (max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061) + obs[3])) * obs[0]) * ((obs[1] + max(0, [ 0.45  -0.084  0.348 -0.029] *dot* obs[:] + -0.004)) + obs[1]))) then: (if ((((max(0, [-0.004 -0.116 -0.063  0.028] *dot* obs[:] + 0.135) * max(0, [-0.133  0.309  0.116 -0.084] *dot* obs[:] + 0.025)) * max(0, [-0.158 -0.206 -0.111 -0.374] *dot* obs[:] + 0.117)) * 1.1342176738862002) < ((obs[2] + max(0, [-0.291 -0.215 -0.042  0.117] *dot* obs[:] + 0.049)) + (0.9274429777308073 + max(0, [-0.021 -0.07  -0.084 -0.573] *dot* obs[:] + 0.115)))) then: act = 0 else: act = 1) else: act = 0) else: (if (-1.8937780001949251 < max(0, [0.096 0.03  0.266 0.201] *dot* obs[:] + 0.107)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011) < max(0, [-0.152  0.11  -0.516 -0.224] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1)
381.29 (if ((-0.17651703602085372 + obs[3]) < -0.14253780793465237) then: (if (max(0, [0.06  0.116 0.195 0.418] *dot* obs[:] + 0.121) < 0.11728932006204101) then: (if (-2.102431209642273 < -0.9276736898528964) then: (if (max(0, [-0.016  0.017 -0.125 -0.409] *dot* obs[:] + 0.093) < obs[1]) then: act = 0 else: act = 0) else: (if (1.0295499161722597 < max(0, [-0.143  0.179  0.247  0.171] *dot* obs[:] + 0.076)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011) < max(0, [-0.152  0.11  -0.516 -0.224] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1)
409.08 (if ((0.16526227674979124 + obs[3]) < 0.2156469909954788) then: (if (max(0, [0.06  0.116 0.195 0.418] *dot* obs[:] + 0.121) < 0.11683489904848832) then: (if (-2.0433764055654557 < 0.02454698588255888) then: act = 0 else: (if (obs[1] < (obs[1] * (1.2424437035209288 + (-2.5563882966980307 + ((obs[1] * -1.4137372051302513) * (max(0, [-0.291 -0.215 -0.042  0.117] *dot* obs[:] + 0.049) + (obs[2] + -1.4120318868453283))))))) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011) < max(0, [-0.152  0.11  -0.516 -0.224] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1)
418.57 (if ((0.16526227674979124 + obs[3]) < 0.2156469909954788) then: (if (max(0, [0.06  0.116 0.195 0.418] *dot* obs[:] + 0.121) < 0.11683489904848832) then: (if (-2.0433764055654557 < 0.02454698588255888) then: act = 0 else: (if (obs[1] < (obs[1] * (1.2424437035209288 + (-2.5563882966980307 + ((obs[1] * -1.4137372051302513) * (max(0, [-0.291 -0.215 -0.042  0.117] *dot* obs[:] + 0.049) + (obs[2] + -1.4120318868453283))))))) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011) < max(0, [-0.152  0.11  -0.516 -0.224] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1)
499.62 (if ((0.2953486942604894 + obs[3]) < 0.424644307755703) then: (if (max(0, [0.06  0.116 0.195 0.418] *dot* obs[:] + 0.121) < 0.1208426353123736) then: (if ((obs[2] * 1.1718201222129037) < max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061)) then: act = 0 else: (if (obs[1] < (obs[1] * (1.3051992870116553 + (-2.5256571260861107 + ((obs[1] * 2.1241869996705183) * (max(0, [-0.291 -0.215 -0.042  0.117] *dot* obs[:] + 0.049) + (obs[2] + -1.1327359543219933))))))) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011) < max(0, [-0.152  0.11  -0.516 -0.224] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1)
500.0 (if ((0.2953486942604894 + obs[3]) < 0.424644307755703) then: (if (max(0, [0.06  0.116 0.195 0.418] *dot* obs[:] + 0.121) < 0.1208426353123736) then: (if ((obs[2] * 1.1718201222129037) < max(0, [-0.082  0.034 -0.362 -0.157] *dot* obs[:] + 0.061)) then: act = 0 else: (if (obs[1] < (obs[1] * (1.3051992870116553 + (-2.5256571260861107 + ((obs[1] * 2.1241869996705183) * (max(0, [-0.291 -0.215 -0.042  0.117] *dot* obs[:] + 0.049) + (obs[2] + -1.1327359543219933))))))) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.131  0.049  0.061 -0.14 ] *dot* obs[:] + -0.011) < max(0, [-0.152  0.11  -0.516 -0.224] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))) else: act = 1)
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
74.82 (if (((obs[1] + 0.09358736431982925) + 0.2888893477418369) < -0.343553895756886) then: (if (obs[0] < -1.2718907370981611) then: (if (obs[2] < obs[0]) then: act = 0 else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < 1.9676611963091384) then: (if (obs[2] < obs[3]) then: act = 1 else: act = 0) else: act = 0))
114.07 (if (((obs[3] + -1.6508314186130115) + 0.7888893477418368) < -0.843553895756886) then: (if (obs[0] < -1.4552997056008476) then: (if (obs[2] < obs[0]) then: act = 0 else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < 2.356983114166937) then: (if (obs[2] < obs[3]) then: act = 1 else: act = 0) else: act = 0))
194.56 (if (((obs[3] + -1.7009870907851896) + 0.6242254476826052) < -1.0853990536465068) then: act = 0 else: (if (obs[1] < 2.7053587909581625) then: (if ((((((obs[3] + obs[1]) + obs[1]) + obs[1]) * 0.17755983040209528) + -1.056549828493816) < (obs[2] * (0.9471853524909774 + ((-0.7165027132586226 + obs[3]) * -0.31862515328768226)))) then: act = 1 else: act = 0) else: act = 0))
195.48 (if (((obs[3] + -1.7009870907851896) + 0.6242254476826052) < -1.0853990536465068) then: act = 0 else: (if (obs[1] < 2.7053587909581625) then: (if ((((((obs[3] + obs[1]) + obs[1]) + obs[1]) * 0.17755983040209528) + -1.056549828493816) < (obs[2] * (0.9471853524909774 + ((-0.7165027132586226 + obs[3]) * -0.31862515328768226)))) then: act = 1 else: act = 0) else: act = 0))
201.62 (if (((obs[3] + -1.7009870907851896) + 0.6242254476826052) < -1.0853990536465068) then: act = 0 else: (if (obs[1] < 2.7053587909581625) then: (if ((((((obs[3] + obs[1]) + obs[1]) + obs[1]) * 0.17755983040209528) + -1.056549828493816) < (obs[2] * (0.9471853524909774 + ((-0.7165027132586226 + obs[3]) * -0.31862515328768226)))) then: act = 1 else: act = 0) else: act = 0))
500.0 (if (0.018165914794445792 < (obs[1] + ((-1.9891980584613087 * (((obs[3] + -2.2983783819213124) * obs[3]) + (obs[0] * obs[3]))) + obs[2]))) then: act = 1 else: act = 0)
