created virtual environment CPython3.8.10.final.0-64 in 35833ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232151.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) < (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) + max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: act = 1 else: act = 1))) else: act = 1) 9.36
9.41 (if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) < (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) + max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: act = 1 else: act = 1))) else: act = 1)
305.74 (if (-2.2942376751735716 < obs[2]) then: (if ((-3.4864448245598574 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) < (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) + max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48))) then: (if ((obs[3] + ((obs[2] + (obs[3] + (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)))) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48))) < obs[3]) then: (if (obs[1] < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 0 else: act = 0) else: (if ((-1.9751687610606454 * obs[3]) < ((obs[0] * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) * obs[3])) then: act = 1 else: act = 0)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: act = 1 else: act = 1))) else: act = 1)
310.16 (if (-2.2942376751735716 < obs[2]) then: (if ((-3.4864448245598574 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) < (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) + max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48))) then: (if ((obs[3] + ((obs[2] + (obs[3] + (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)))) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48))) < obs[3]) then: (if (obs[1] < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 0 else: act = 0) else: (if ((-1.9751687610606454 * obs[3]) < ((obs[0] * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) * obs[3])) then: act = 1 else: act = 0)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: act = 1 else: act = 1))) else: act = 1)
314.06 (if (-2.2942376751735716 < obs[2]) then: (if ((-3.4864448245598574 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) < (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) + max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48))) then: (if ((obs[3] + ((obs[2] + (obs[3] + (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)))) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48))) < obs[3]) then: (if (obs[1] < max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) then: act = 0 else: act = 0) else: (if ((-1.9751687610606454 * obs[3]) < ((obs[0] * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)) * obs[3])) then: act = 1 else: act = 0)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: act = 1 else: act = 1))) else: act = 1)
339.18 (if (((obs[2] + obs[2]) * ((1.8202033626074574 * 2.741534917775876) + ((0.6757942489902038 * (obs[0] + ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) + max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) * (1.9434463255592798 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024))))) + obs[2]))) < ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) + max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024))) then: (if (obs[3] < (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1])) then: act = 0 else: act = 1) else: act = 1)
346.93 (if (((obs[2] + obs[2]) * ((1.8202033626074574 * 2.741534917775876) + ((0.6757942489902038 * (obs[0] + ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) + max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) * (1.9434463255592798 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024))))) + obs[2]))) < ((max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) + max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024))) then: (if (obs[3] < (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1])) then: act = 0 else: act = 1) else: act = 1)
387.11 (if (((obs[2] + obs[2]) * ((2.101909360649165 * 3.1861643758327203) + obs[1])) < ((((2.2586203765699864 * -0.14519866238562346) + (obs[3] * (-1.1577800671765424 * max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024)))) + max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) + max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024))) then: (if (obs[3] < (max(0, [-0.636  0.619  0.3   -0.746] *dot* obs[:] + -0.024) * obs[1])) then: act = 0 else: act = 1) else: act = 1)
497.5 (if ((-0.8981104158842236 + 1.3649234048381) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: (if (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) < (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) + 0.08579172409800746)) then: act = 0 else: act = 1) else: act = 1)
497.6 (if ((-0.8981104158842236 + 1.3649234048381) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: (if (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) < (max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48) + 0.08579172409800746)) then: act = 0 else: act = 1) else: act = 1)
498.19 (if ((-0.9616854853424424 + 1.4412780697460716) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: (if (-1.0316263684866005 < 1.4696917236004965) then: act = 0 else: act = 1) else: act = 1)
498.67 (if ((-0.9616854853424424 + 1.4412780697460716) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: (if (-1.0316263684866005 < 1.4696917236004965) then: act = 0 else: act = 1) else: act = 1)
500.0 (if ((-0.9616854853424424 + 1.4412780697460716) < max(0, [ 0.043 -0.363 -1.331 -2.085] *dot* obs[:] + 0.48)) then: (if (-1.0316263684866005 < 1.4696917236004965) then: act = 0 else: act = 1) else: act = 1)
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-0.589  0.053  0.087  0.203] *dot* obs[:] + 0.025)) < (max(0, [ 0.314  0.09  -0.397 -0.214] *dot* obs[:] + 0.094) + max(0, [-0.046  0.318  0.082  0.264] *dot* obs[:] + 0.065))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.08   0.057 -0.311  0.125] *dot* obs[:] + 0.02)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.128  0.288 -0.247  0.129] *dot* obs[:] + -0.076)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.115 -0.341  0.129 -0.056] *dot* obs[:] + 0.072) < max(0, [-0.131  0.143  0.131 -0.057] *dot* obs[:] + -0.086)) then: act = 1 else: act = 1))) else: act = 1) 9.36
36.87 (if (obs[0] < (max(0, [ 0.314  0.09  -0.397 -0.214] *dot* obs[:] + 0.094) * -2.2957057019416074)) then: (if ((0.5713242479170033 + ((-2.621787551942199 + (obs[3] + (-1.8280176639650039 * obs[3]))) + max(0, [-0.015 -0.097 -0.275 -0.27 ] *dot* obs[:] + 0.097))) < max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103)) then: act = 1 else: act = 1) else: (if (max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139) < (((obs[1] * max(0, [-0.174 -0.049 -0.157 -0.411] *dot* obs[:] + 0.156)) + (max(0, [-0.128 -0.117  0.078 -0.125] *dot* obs[:] + 0.018) + obs[2])) * 1.7627754709248464)) then: (if (max(0, [-0.174 -0.049 -0.157 -0.411] *dot* obs[:] + 0.156) < ((-2.0014631006327437 * max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131)) + (max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103) + max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108)))) then: (if (obs[3] < (-2.0425470813126565 * obs[0])) then: act = 0 else: (if (1.9254359506508203 < obs[0]) then: (if (obs[1] < obs[3]) then: act = 1 else: act = 1) else: act = 1)) else: (if (1.081101009634163 < (2.0254889526622097 + 1.7728394826227)) then: act = 0 else: act = 1)) else: (if (max(0, [-0.155 -0.049  0.045 -0.362] *dot* obs[:] + 0.096) < ((max(0, [ 0.005 -0.047 -0.007 -0.189] *dot* obs[:] + 0.105) * max(0, [ 0.021 -0.284 -0.045 -0.015] *dot* obs[:] + -0.032)) * max(0, [-0.027  0.063  0.143  0.338] *dot* obs[:] + 0.085))) then: (if ((obs[1] + obs[2]) < (obs[0] + 2.2415767226786065)) then: (if (-0.02932254032257664 < obs[1]) then: (if (max(0, [ 0.091 -0.057 -0.294 -0.446] *dot* obs[:] + 0.115) < -2.0882293412326507) then: act = 0 else: act = 1) else: (if (obs[2] < -1.1201276236264315) then: act = 0 else: act = 1)) else: (if (obs[2] < obs[0]) then: (if (0.9434449426603813 < max(0, [-0.049  0.21  -0.182 -0.139] *dot* obs[:] + 0.089)) then: act = 1 else: act = 0) else: act = 0)) else: (if (max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114) < max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) then: (if (0.0020002196895763102 < obs[3]) then: (if (max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108) < max(0, [-0.042 -0.236  0.102  0.232] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1) else: (if (0.16600844981725044 < obs[1]) then: act = 0 else: act = 1)) else: (if (max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009) < obs[0]) then: (if (0.11837352814355645 < -1.0603947165291814) then: act = 1 else: act = 0) else: (if (-0.8512975304837032 < -2.1153056012018494) then: act = 0 else: act = 0))))))
58.56 (if (obs[0] < (max(0, [ 0.314  0.09  -0.397 -0.214] *dot* obs[:] + 0.094) * -2.270337074731233)) then: act = 0 else: (if (max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131) < (obs[1] * max(0, [-0.175  0.196  0.276 -0.076] *dot* obs[:] + 0.078))) then: (if (max(0, [-0.174 -0.049 -0.157 -0.411] *dot* obs[:] + 0.156) < (-1.165857401185309 + (max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103) + max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108)))) then: (if (-1.1338018000014882 < (((max(0, [ 0.185 -0.277 -0.079 -0.322] *dot* obs[:] + 0.123) * ((obs[3] + (obs[1] + obs[0])) + ((-1.1594028990023664 * -2.2589352611333355) + (obs[2] * max(0, [-0.055  0.022  0.179  0.418] *dot* obs[:] + 0.138))))) + obs[3]) * obs[1])) then: act = 0 else: (if ((0.14416420461951227 * max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) < max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139)) then: (if (obs[1] < obs[3]) then: (if (max(0, [ 0.028 -0.05  -0.006 -0.047] *dot* obs[:] + 0.013) < -1.3201053331997836) then: act = 0 else: (if (-0.43968896249577855 < max(0, [ 0.005 -0.047 -0.007 -0.189] *dot* obs[:] + 0.105)) then: (if (obs[2] < -2.0231206389316974) then: (if (max(0, [-0.009 -0.196  0.043  0.365] *dot* obs[:] + 0.079) < obs[0]) then: act = 1 else: act = 1) else: (if (max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077) < 1.5730283538373644) then: (if (max(0, [0.146 0.073 0.28  0.266] *dot* obs[:] + 0.107) < obs[1]) then: act = 1 else: act = 1) else: (if (max(0, [ 0.131 -0.375  0.004 -0.225] *dot* obs[:] + 0.031) < obs[2]) then: act = 0 else: act = 0))) else: (if (obs[1] < (max(0, [ 0.207  0.103 -0.125 -0.202] *dot* obs[:] + 0.138) * -2.234994852800685)) then: (if (obs[2] < max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131)) then: act = 0 else: (if (max(0, [ 0.128  0.288 -0.247  0.129] *dot* obs[:] + -0.076) < max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)) then: act = 0 else: act = 0)) else: act = 0))) else: act = 1) else: act = 1)) else: (if (0.4550560446543892 < (1.6420585240779562 + 1.5827670140514938)) then: act = 0 else: (if ((1.0284400094654926 + (-0.6063397831866397 * (((obs[3] * obs[1]) * obs[1]) * (1.1651865207311507 * (max(0, [ 0.115 -0.341  0.129 -0.056] *dot* obs[:] + 0.072) * max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)))))) < obs[3]) then: (if (-0.1534817979592513 < max(0, [0.007 0.078 0.45  0.231] *dot* obs[:] + 0.104)) then: act = 0 else: (if ((obs[0] * 1.8743957015981119) < obs[2]) then: act = 1 else: (if (obs[0] < obs[3]) then: act = 1 else: act = 0))) else: act = 0))) else: (if (max(0, [-0.155 -0.049  0.045 -0.362] *dot* obs[:] + 0.096) < ((obs[1] + (obs[3] + max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077))) + (obs[3] * (((-0.822532248604624 + max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114)) * max(0, [-0.042  0.111  0.236 -0.077] *dot* obs[:] + 0.005)) + 1.3955037333659424)))) then: (if ((obs[1] + obs[2]) < (obs[0] + 2.561692079049225)) then: (if (-1.0887800817935993 < obs[1]) then: (if (max(0, [ 0.091 -0.057 -0.294 -0.446] *dot* obs[:] + 0.115) < -1.668608444041284) then: act = 0 else: act = 1) else: (if (obs[2] < -1.0508328169772927) then: act = 0 else: act = 1)) else: (if (obs[2] < obs[0]) then: (if (0.36670539636183036 < max(0, [-0.049  0.21  -0.182 -0.139] *dot* obs[:] + 0.089)) then: act = 1 else: act = 0) else: act = 0)) else: (if (max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114) < max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) then: (if (-0.014349305069196319 < obs[3]) then: (if (max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108) < max(0, [-0.042 -0.236  0.102  0.232] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1) else: (if (-0.029931615228289465 < obs[1]) then: act = 0 else: act = 1)) else: (if (max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009) < obs[0]) then: (if (0.49809718113118673 < -1.8354711407737512) then: act = 1 else: act = 0) else: (if (0.38673012595566214 < -2.332823885508121) then: act = 0 else: act = 0))))))
59.11 (if (obs[0] < (max(0, [ 0.314  0.09  -0.397 -0.214] *dot* obs[:] + 0.094) * -2.1999905696478645)) then: act = 0 else: (if (max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131) < (obs[1] * max(0, [-0.175  0.196  0.276 -0.076] *dot* obs[:] + 0.078))) then: (if (max(0, [-0.174 -0.049 -0.157 -0.411] *dot* obs[:] + 0.156) < (-0.6177866606859685 + (max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103) + max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108)))) then: (if (-1.6205569578394534 < (((max(0, [ 0.185 -0.277 -0.079 -0.322] *dot* obs[:] + 0.123) * ((obs[3] + ((max(0, [ 0.158 -0.038  0.351  0.414] *dot* obs[:] + 0.119) * obs[0]) + obs[0])) + ((-0.8731845799788014 * -2.4283652641642637) + (obs[2] * max(0, [-0.055  0.022  0.179  0.418] *dot* obs[:] + 0.138))))) + obs[3]) * obs[1])) then: act = 0 else: (if ((0.4331473400951671 * max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) < max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139)) then: (if (obs[1] < obs[3]) then: (if (max(0, [ 0.028 -0.05  -0.006 -0.047] *dot* obs[:] + 0.013) < obs[2]) then: act = 0 else: (if (-0.4774677106859878 < max(0, [ 0.005 -0.047 -0.007 -0.189] *dot* obs[:] + 0.105)) then: (if (obs[2] < -1.9047162022074557) then: (if (max(0, [-0.009 -0.196  0.043  0.365] *dot* obs[:] + 0.079) < obs[0]) then: act = 1 else: act = 1) else: (if (max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077) < 0.8906559839547527) then: (if (max(0, [0.146 0.073 0.28  0.266] *dot* obs[:] + 0.107) < obs[1]) then: act = 1 else: act = 1) else: (if (max(0, [ 0.131 -0.375  0.004 -0.225] *dot* obs[:] + 0.031) < obs[2]) then: act = 0 else: act = 0))) else: (if (obs[1] < (max(0, [ 0.207  0.103 -0.125 -0.202] *dot* obs[:] + 0.138) * -2.3565453036208113)) then: (if (obs[2] < max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131)) then: act = 0 else: (if (max(0, [ 0.128  0.288 -0.247  0.129] *dot* obs[:] + -0.076) < max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)) then: act = 0 else: act = 0)) else: act = 0))) else: act = 1) else: act = 1)) else: (if (0.3922116516893061 < 0.19045028136613584) then: act = 0 else: (if ((0.6373844995187419 + (-1.217916666314339 * (((obs[3] * obs[1]) * obs[1]) * (1.541542239175024 * (max(0, [ 0.115 -0.341  0.129 -0.056] *dot* obs[:] + 0.072) * max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)))))) < obs[3]) then: (if (-0.09410580446187583 < max(0, [0.007 0.078 0.45  0.231] *dot* obs[:] + 0.104)) then: act = 0 else: (if ((obs[0] * 1.4573268374827135) < obs[2]) then: act = 1 else: (if (obs[0] < obs[3]) then: act = 1 else: act = 0))) else: act = 0))) else: (if (max(0, [-0.155 -0.049  0.045 -0.362] *dot* obs[:] + 0.096) < ((obs[1] + (obs[3] + max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077))) + (obs[3] * (((-1.1830340051937318 + max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114)) * max(0, [-0.042  0.111  0.236 -0.077] *dot* obs[:] + 0.005)) + 1.496960731744428)))) then: (if ((obs[1] + obs[2]) < (obs[0] + 2.5506556605604955)) then: (if (-0.7326974230909065 < obs[1]) then: (if (max(0, [ 0.091 -0.057 -0.294 -0.446] *dot* obs[:] + 0.115) < -1.7827317483963474) then: act = 0 else: act = 1) else: (if (obs[2] < -0.6629389481181377) then: act = 0 else: act = 1)) else: (if (obs[2] < obs[0]) then: (if (0.8051059836884716 < max(0, [-0.049  0.21  -0.182 -0.139] *dot* obs[:] + 0.089)) then: act = 1 else: act = 0) else: act = 0)) else: (if (max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114) < max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) then: (if (0.06762789010837555 < obs[3]) then: (if (max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108) < max(0, [-0.042 -0.236  0.102  0.232] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1) else: (if (-0.3553940889276424 < obs[1]) then: act = 0 else: act = 1)) else: (if (max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009) < obs[0]) then: (if (0.7135186381876756 < -2.082702006776879) then: act = 1 else: act = 0) else: (if (0.7824763048721125 < -2.334519595508731) then: act = 0 else: act = 0))))))
66.77 (if (obs[0] < (max(0, [ 0.314  0.09  -0.397 -0.214] *dot* obs[:] + 0.094) * -2.3165922330299527)) then: act = 0 else: (if (max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131) < (obs[1] * max(0, [-0.175  0.196  0.276 -0.076] *dot* obs[:] + 0.078))) then: (if (max(0, [-0.174 -0.049 -0.157 -0.411] *dot* obs[:] + 0.156) < (-0.12311906840271497 + (max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103) + max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108)))) then: (if (-1.6012424963825813 < (((max(0, [ 0.185 -0.277 -0.079 -0.322] *dot* obs[:] + 0.123) * ((obs[3] + ((max(0, [ 0.158 -0.038  0.351  0.414] *dot* obs[:] + 0.119) * obs[0]) + obs[0])) + ((-0.8403976743005068 * -2.08276337445689) + (obs[2] * max(0, [-0.055  0.022  0.179  0.418] *dot* obs[:] + 0.138))))) + obs[3]) * obs[1])) then: act = 0 else: (if ((0.5840436199080712 * max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) < max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139)) then: (if (obs[1] < obs[3]) then: (if (max(0, [ 0.028 -0.05  -0.006 -0.047] *dot* obs[:] + 0.013) < obs[2]) then: act = 0 else: (if (-0.1969116020501701 < max(0, [ 0.005 -0.047 -0.007 -0.189] *dot* obs[:] + 0.105)) then: (if (obs[2] < -1.6775230748365844) then: (if (max(0, [-0.009 -0.196  0.043  0.365] *dot* obs[:] + 0.079) < obs[0]) then: act = 1 else: act = 1) else: (if (max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077) < 0.5883350735615988) then: (if (max(0, [0.146 0.073 0.28  0.266] *dot* obs[:] + 0.107) < obs[1]) then: act = 1 else: act = 1) else: (if (max(0, [ 0.131 -0.375  0.004 -0.225] *dot* obs[:] + 0.031) < obs[2]) then: act = 0 else: act = 0))) else: (if (obs[1] < (max(0, [ 0.207  0.103 -0.125 -0.202] *dot* obs[:] + 0.138) * (max(0, [ 0.068  0.076  0.315 -0.278] *dot* obs[:] + 0.013) + 0.25015545851999565))) then: (if (obs[2] < max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131)) then: act = 0 else: (if (max(0, [ 0.128  0.288 -0.247  0.129] *dot* obs[:] + -0.076) < max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)) then: act = 0 else: act = 0)) else: act = 0))) else: act = 1) else: act = 1)) else: (if (0.09158618891913156 < -0.2717998632526871) then: act = 0 else: (if ((0.3594474884418017 + (-1.2997426446417486 * (((obs[3] * obs[1]) * obs[1]) * (1.4550014329215406 * (max(0, [ 0.115 -0.341  0.129 -0.056] *dot* obs[:] + 0.072) * max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)))))) < obs[3]) then: (if (-0.25683874039556426 < max(0, [0.007 0.078 0.45  0.231] *dot* obs[:] + 0.104)) then: act = 0 else: (if (((1.8131163241136843 + 2.220728243431575) * 1.3716047389255086) < obs[2]) then: act = 1 else: (if (obs[0] < obs[3]) then: act = 1 else: act = 0))) else: act = 0))) else: (if (max(0, [-0.155 -0.049  0.045 -0.362] *dot* obs[:] + 0.096) < ((obs[1] + (obs[3] + max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077))) + (obs[3] * (((-0.9835079510612967 + max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114)) * max(0, [-0.042  0.111  0.236 -0.077] *dot* obs[:] + 0.005)) + 1.4680916276072569)))) then: (if ((obs[1] + obs[2]) < (obs[0] + 2.544611821846348)) then: (if (-0.8375866841928248 < obs[1]) then: (if (max(0, [ 0.091 -0.057 -0.294 -0.446] *dot* obs[:] + 0.115) < -1.9251526008836475) then: act = 0 else: act = 1) else: (if (obs[2] < -0.6553339477848363) then: act = 0 else: act = 1)) else: (if (obs[2] < obs[0]) then: (if (0.8425248669641423 < max(0, [-0.049  0.21  -0.182 -0.139] *dot* obs[:] + 0.089)) then: act = 1 else: act = 0) else: act = 0)) else: (if (max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114) < max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) then: (if (-0.03224443015129347 < obs[3]) then: (if (max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108) < max(0, [-0.042 -0.236  0.102  0.232] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1) else: (if (-0.0739032554706831 < obs[1]) then: act = 0 else: act = 1)) else: (if (max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009) < obs[0]) then: (if (0.6615931487751342 < -2.0552584085047725) then: act = 1 else: act = 0) else: (if (0.7589768168585216 < -2.2764266745814457) then: act = 0 else: act = 0))))))
300.56 (if (max(0, [-0.027  0.063  0.143  0.338] *dot* obs[:] + 0.085) < (max(0, [ 0.314  0.09  -0.397 -0.214] *dot* obs[:] + 0.094) * -2.3124477215649986)) then: act = 0 else: (if (max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131) < (obs[1] * max(0, [-0.175  0.196  0.276 -0.076] *dot* obs[:] + 0.078))) then: (if (max(0, [-0.174 -0.049 -0.157 -0.411] *dot* obs[:] + 0.156) < (0.5683326152016552 + (max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103) + max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108)))) then: (if (-0.6649865124821923 < (((max(0, [ 0.185 -0.277 -0.079 -0.322] *dot* obs[:] + 0.123) * ((obs[3] + ((max(0, [ 0.158 -0.038  0.351  0.414] *dot* obs[:] + 0.119) * obs[0]) + obs[0])) + ((-0.8128588468297329 * -2.3485527186421367) + (obs[2] * max(0, [-0.055  0.022  0.179  0.418] *dot* obs[:] + 0.138))))) + obs[3]) * obs[1])) then: act = 0 else: (if ((1.119150516435026 * -1.171978278045693) < max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139)) then: (if (obs[3] < obs[3]) then: (if (max(0, [ 0.028 -0.05  -0.006 -0.047] *dot* obs[:] + 0.013) < obs[2]) then: act = 0 else: (if (-0.4422012734000228 < max(0, [ 0.005 -0.047 -0.007 -0.189] *dot* obs[:] + 0.105)) then: (if (obs[2] < -1.814739426912598) then: (if (max(0, [-0.009 -0.196  0.043  0.365] *dot* obs[:] + 0.079) < obs[0]) then: act = 1 else: act = 1) else: (if (max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077) < ((max(0, [ 0.068  0.076  0.315 -0.278] *dot* obs[:] + 0.013) * max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103)) * max(0, [0.25  0.081 0.243 0.146] *dot* obs[:] + 0.068))) then: (if (max(0, [0.146 0.073 0.28  0.266] *dot* obs[:] + 0.107) < obs[1]) then: act = 1 else: act = 1) else: (if (max(0, [ 0.131 -0.375  0.004 -0.225] *dot* obs[:] + 0.031) < obs[2]) then: act = 0 else: act = 0))) else: (if (obs[1] < (max(0, [ 0.207  0.103 -0.125 -0.202] *dot* obs[:] + 0.138) * (max(0, [ 0.068  0.076  0.315 -0.278] *dot* obs[:] + 0.013) + 0.4081973719415262))) then: (if (obs[2] < max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131)) then: act = 0 else: (if (max(0, [ 0.128  0.288 -0.247  0.129] *dot* obs[:] + -0.076) < max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)) then: act = 0 else: act = 0)) else: act = 0))) else: act = 1) else: act = 1)) else: (if (0.18712167252279943 < 0.14648309433280232) then: act = 0 else: (if ((0.3254171794152404 + (1.0109153228342658 * (((obs[3] * obs[1]) * obs[1]) * (1.7634973946349322 * (max(0, [ 0.115 -0.341  0.129 -0.056] *dot* obs[:] + 0.072) * max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)))))) < obs[3]) then: (if (-0.7777312441387064 < max(0, [0.007 0.078 0.45  0.231] *dot* obs[:] + 0.104)) then: act = 0 else: (if (((2.1566242837728256 + 2.1271257554852494) * 0.9389541545117122) < obs[1]) then: act = 1 else: (if (obs[0] < obs[3]) then: act = 1 else: act = 0))) else: act = 0))) else: (if (max(0, [-0.155 -0.049  0.045 -0.362] *dot* obs[:] + 0.096) < ((obs[1] + (obs[3] + max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077))) + (obs[3] * (((-1.7625153055404723 + max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114)) * max(0, [-0.042  0.111  0.236 -0.077] *dot* obs[:] + 0.005)) + 1.6018272172529735)))) then: (if ((obs[1] + obs[2]) < (obs[0] + 2.8775631493217255)) then: (if (-0.9439865102912832 < obs[1]) then: (if (max(0, [ 0.091 -0.057 -0.294 -0.446] *dot* obs[:] + 0.115) < -1.8689920286473267) then: act = 0 else: act = 1) else: (if (obs[2] < -1.5320123245209423) then: act = 0 else: act = 1)) else: (if (obs[2] < obs[0]) then: (if (0.7470942965780996 < max(0, [-0.049  0.21  -0.182 -0.139] *dot* obs[:] + 0.089)) then: act = 1 else: act = 0) else: act = 0)) else: (if (max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114) < max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) then: (if (0.13254305461776245 < obs[3]) then: (if (max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108) < max(0, [-0.042 -0.236  0.102  0.232] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1) else: (if (-0.3915009840402621 < obs[1]) then: act = 0 else: act = 1)) else: (if (max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009) < obs[0]) then: (if (-0.29811128625581584 < -1.787801933237477) then: act = 1 else: act = 0) else: (if (0.9222798741677842 < -2.5717836633165763) then: act = 0 else: act = 0))))))
394.91 (if (2.560235042864607 < (max(0, [ 0.314  0.09  -0.397 -0.214] *dot* obs[:] + 0.094) * -3.1146288075043786)) then: act = 0 else: (if (max(0, [-0.049  0.21  -0.182 -0.139] *dot* obs[:] + 0.089) < (obs[1] * max(0, [-0.175  0.196  0.276 -0.076] *dot* obs[:] + 0.078))) then: (if (max(0, [-0.174 -0.049 -0.157 -0.411] *dot* obs[:] + 0.156) < (0.23371272425341405 + (max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103) + max(0, [ 0.005 -0.047 -0.007 -0.189] *dot* obs[:] + 0.105)))) then: (if (-0.2862786757751096 < ((((obs[3] + (obs[1] + (-0.01952846404823233 * max(0, [-0.013  0.175 -0.365  0.038] *dot* obs[:] + -0.025)))) * ((obs[3] + ((max(0, [ 0.158 -0.038  0.351  0.414] *dot* obs[:] + 0.119) * obs[0]) + obs[0])) + (max(0, [-0.08   0.057 -0.311  0.125] *dot* obs[:] + 0.02) + (obs[2] * max(0, [-0.055  0.022  0.179  0.418] *dot* obs[:] + 0.138))))) + obs[3]) * obs[1])) then: act = 0 else: (if (((((max(0, [ 0.207  0.103 -0.125 -0.202] *dot* obs[:] + 0.138) * (1.750156506990308 * obs[1])) * ((-0.4768096757939475 * obs[3]) * -3.701907320718518)) + (max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009) * max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108))) * -1.8783016355827258) < max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139)) then: (if (-0.9069692637169606 < obs[0]) then: (if (max(0, [ 0.028 -0.05  -0.006 -0.047] *dot* obs[:] + 0.013) < obs[2]) then: act = 0 else: (if (-0.13627920577914165 < max(0, [-0.128 -0.117  0.078 -0.125] *dot* obs[:] + 0.018)) then: (if (obs[2] < -2.0228897550795244) then: (if (obs[3] < ((max(0, [-0.08  -0.02  -0.413 -0.098] *dot* obs[:] + 0.079) * 2.2290809588433196) + -0.8472766029659915)) then: act = 1 else: act = 1) else: (if (max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077) < ((max(0, [ 0.068  0.076  0.315 -0.278] *dot* obs[:] + 0.013) * max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103)) * max(0, [0.25  0.081 0.243 0.146] *dot* obs[:] + 0.068))) then: (if (max(0, [0.146 0.073 0.28  0.266] *dot* obs[:] + 0.107) < obs[1]) then: act = 1 else: (if (obs[0] < (max(0, [-0.211 -0.069 -0.017 -0.04 ] *dot* obs[:] + -0.028) * obs[0])) then: (if ((obs[1] * 1.2619031366634819) < max(0, [-0.077 -0.264 -0.059 -0.128] *dot* obs[:] + 0.035)) then: act = 1 else: act = 1) else: (if ((-2.712960495679684 * (max(0, [ 0.115 -0.341  0.129 -0.056] *dot* obs[:] + 0.072) * 2.5626624274058063)) < max(0, [ 0.016  0.165 -0.097 -0.372] *dot* obs[:] + 0.037)) then: act = 0 else: (if (obs[3] < (max(0, [ 0.239 -0.302 -0.428 -0.286] *dot* obs[:] + 0.12) * 0.540178839255502)) then: act = 0 else: (if (((((obs[0] + 1.8901035166030054) + 0.11022187226545876) + ((obs[3] + 2.0349821251783204) + (max(0, [ 0.028 -0.05  -0.006 -0.047] *dot* obs[:] + 0.013) + 1.397119822036574))) + obs[0]) < obs[2]) then: (if (obs[3] < obs[3]) then: act = 1 else: act = 0) else: act = 1))))) else: (if (max(0, [ 0.131 -0.375  0.004 -0.225] *dot* obs[:] + 0.031) < obs[2]) then: act = 0 else: act = 1))) else: (if (obs[1] < (max(0, [ 0.207  0.103 -0.125 -0.202] *dot* obs[:] + 0.138) * (max(0, [ 0.068  0.076  0.315 -0.278] *dot* obs[:] + 0.013) + 0.05235710516787079))) then: (if (obs[2] < max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131)) then: act = 0 else: (if (1.3314967584102164 < max(0, [-0.106  0.095 -0.093 -0.065] *dot* obs[:] + -0.04)) then: act = 0 else: act = 0)) else: act = 0))) else: act = 1) else: act = 1)) else: (if ((obs[3] + -0.5133863435023424) < 1.0950270611674653) then: act = 0 else: (if ((0.9928279061290024 + (1.2334656661401047 * (((obs[3] * obs[1]) * max(0, [-0.071 -0.056 -0.331 -0.146] *dot* obs[:] + 0.132)) * (-2.050083607425552 * (max(0, [ 0.115 -0.341  0.129 -0.056] *dot* obs[:] + 0.072) * max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)))))) < obs[1]) then: (if (-0.26696145539178634 < max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009)) then: act = 0 else: (if (((1.6761962611288783 + 1.1710877260049326) * -0.5277607966529436) < obs[1]) then: act = 1 else: (if (obs[0] < obs[3]) then: act = 1 else: act = 0))) else: act = 0))) else: (if (max(0, [-0.155 -0.049  0.045 -0.362] *dot* obs[:] + 0.096) < ((obs[1] + (obs[3] + max(0, [-0.054  0.043  0.292  0.16 ] *dot* obs[:] + 0.077))) + (obs[3] * (((-0.8810943786636098 + max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114)) * max(0, [-0.042  0.111  0.236 -0.077] *dot* obs[:] + 0.005)) + 1.8249557052433611)))) then: (if ((obs[1] + obs[2]) < (obs[0] + 1.8122435567214068)) then: (if (-0.7019672696669377 < obs[1]) then: (if (max(0, [ 0.091 -0.057 -0.294 -0.446] *dot* obs[:] + 0.115) < -3.41471547197242) then: act = 0 else: act = 1) else: (if (obs[2] < -1.180117634091571) then: act = 0 else: act = 1)) else: (if (obs[2] < obs[0]) then: (if (0.5011047719429794 < max(0, [-0.049  0.21  -0.182 -0.139] *dot* obs[:] + 0.089)) then: act = 1 else: act = 0) else: act = 0)) else: (if (max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114) < max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) then: (if (0.40999554266529026 < obs[3]) then: (if (max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108) < max(0, [-0.042 -0.236  0.102  0.232] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1) else: (if (-1.846914631234779 < obs[1]) then: act = 0 else: act = 1)) else: (if (max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009) < obs[0]) then: (if (0.7621346576132875 < -2.3762097204553667) then: act = 1 else: act = 0) else: (if (1.7142368597625328 < -2.1185003905679904) then: act = 0 else: act = 0))))))
496.12 (if (2.4103022555625744 < (max(0, [ 0.314  0.09  -0.397 -0.214] *dot* obs[:] + 0.094) * -3.8258651089351097)) then: act = 0 else: (if (max(0, [-0.049  0.21  -0.182 -0.139] *dot* obs[:] + 0.089) < (obs[1] * max(0, [-0.175  0.196  0.276 -0.076] *dot* obs[:] + 0.078))) then: (if (max(0, [-0.174 -0.049 -0.157 -0.411] *dot* obs[:] + 0.156) < ((1.701844141391502 * 1.249832215349934) + (2.041318476256518 + max(0, [ 0.005 -0.047 -0.007 -0.189] *dot* obs[:] + 0.105)))) then: (if (-0.3383149256736616 < (obs[2] * obs[1])) then: act = 1 else: (if (((((max(0, [ 0.207  0.103 -0.125 -0.202] *dot* obs[:] + 0.138) * ((0.8625748717872138 * max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114)) * obs[1])) * (obs[0] * max(0, [-0.155 -0.049  0.045 -0.362] *dot* obs[:] + 0.096))) + (max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009) * max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108))) * -1.9096918605000577) < max(0, [0.019 0.109 0.416 0.419] *dot* obs[:] + 0.139)) then: (if ((max(0, [ 0.128  0.288 -0.247  0.129] *dot* obs[:] + -0.076) * max(0, [-0.029 -0.247  0.15   0.07 ] *dot* obs[:] + 0.059)) < (2.0899884957969754 * obs[0])) then: (if (max(0, [ 0.028 -0.05  -0.006 -0.047] *dot* obs[:] + 0.013) < obs[2]) then: act = 0 else: (if (-0.7073686435250834 < max(0, [-0.128 -0.117  0.078 -0.125] *dot* obs[:] + 0.018)) then: act = 0 else: (if (obs[1] < (max(0, [ 0.207  0.103 -0.125 -0.202] *dot* obs[:] + 0.138) * (max(0, [ 0.068  0.076  0.315 -0.278] *dot* obs[:] + 0.013) + 0.5777783162982932))) then: (if (obs[2] < max(0, [ 0.114 -0.01   0.009 -0.45 ] *dot* obs[:] + 0.131)) then: act = 0 else: (if (0.6453713803771155 < max(0, [-0.009 -0.196  0.043  0.365] *dot* obs[:] + 0.079)) then: act = 0 else: act = 0)) else: act = 0))) else: act = 1) else: act = 1)) else: (if ((obs[3] + -1.1775732947476594) < 0.9672273277734281) then: act = 0 else: (if ((0.6494958105461841 + (2.2463457155876996 * (((obs[3] * obs[1]) * max(0, [-0.071 -0.056 -0.331 -0.146] *dot* obs[:] + 0.132)) * (-2.091763727645664 * (max(0, [ 0.115 -0.341  0.129 -0.056] *dot* obs[:] + 0.072) * max(0, [ 0.03   0.139 -0.311  0.159] *dot* obs[:] + -0.061)))))) < obs[1]) then: (if (-1.0438834146253537 < max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009)) then: act = 0 else: (if (((1.8080970700765264 + 0.2706637067692115) * -0.6695745974017125) < obs[1]) then: act = 1 else: (if (obs[0] < obs[3]) then: act = 1 else: act = 0))) else: act = 0))) else: (if (max(0, [-0.155 -0.049  0.045 -0.362] *dot* obs[:] + 0.096) < ((obs[1] + (obs[3] + (((max(0, [0.004 0.096 0.257 0.228] *dot* obs[:] + 0.068) + (obs[2] + -0.14729985041601584)) + max(0, [0.007 0.078 0.45  0.231] *dot* obs[:] + 0.104)) + max(0, [ 0.098 -0.177 -0.102  0.038] *dot* obs[:] + 0.103)))) + (obs[3] * (((-0.2815615696573811 + max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114)) * max(0, [-0.042  0.111  0.236 -0.077] *dot* obs[:] + 0.005)) + 1.7086982997871736)))) then: (if ((obs[1] + obs[2]) < (obs[0] + 1.4244123548603245)) then: (if (-1.4479114043905466 < obs[1]) then: (if (max(0, [ 0.091 -0.057 -0.294 -0.446] *dot* obs[:] + 0.115) < -4.21286077584345) then: act = 0 else: act = 1) else: (if (obs[2] < -0.6024187404856988) then: act = 0 else: act = 1)) else: (if (obs[2] < obs[0]) then: (if (0.5022267245580437 < max(0, [-0.049  0.21  -0.182 -0.139] *dot* obs[:] + 0.089)) then: act = 1 else: act = 0) else: act = 0)) else: (if (max(0, [ 0.255 -0.135  0.323  0.3  ] *dot* obs[:] + 0.114) < max(0, [ 0.157  0.296  0.127 -0.534] *dot* obs[:] + 0.076)) then: (if (0.16874331636958118 < obs[3]) then: (if (max(0, [-0.101 -0.376 -0.174 -0.318] *dot* obs[:] + 0.108) < max(0, [-0.042 -0.236  0.102  0.232] *dot* obs[:] + 0.061)) then: act = 1 else: act = 1) else: (if (-2.1326961622436222 < obs[1]) then: act = 0 else: act = 1)) else: (if (max(0, [-0.134  0.134 -0.087 -0.066] *dot* obs[:] + 0.009) < obs[0]) then: (if (0.00826129859693677 < -1.733682187095243) then: act = 1 else: act = 0) else: (if (1.4530513380637995 < -2.1278031580993844) then: act = 0 else: act = 0))))))
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
76.52 (if (((obs[2] + -0.29412169990889175) + (obs[0] * (-1.3114789635378972 + (obs[0] * (((obs[3] * (obs[3] + -6.231805330860838)) + obs[2]) * -1.1046056483368902))))) < -0.5369961890816725) then: act = 0 else: (if ((obs[2] * obs[2]) < 1.8480909142586595) then: (if (obs[2] < obs[3]) then: act = 1 else: act = 0) else: act = 0))
79.87 (if (((obs[2] + -0.29412169990889175) + (obs[0] * (-1.3114789635378972 + (obs[0] * (((obs[3] * (obs[3] + -6.231805330860838)) + obs[2]) * -1.1046056483368902))))) < -0.5369961890816725) then: act = 0 else: (if ((obs[2] * obs[2]) < 1.8480909142586595) then: (if (obs[2] < obs[3]) then: act = 1 else: act = 0) else: act = 0))
155.39 (if ((-1.6509771037250687 * (-0.618105479824533 * obs[0])) < (obs[3] + (((((obs[1] + (-0.5387462995093196 * obs[1])) + obs[2]) * (((1.8075492463571612 * obs[3]) + 0.9369295963323501) * (obs[3] + 3.838254424401746))) * obs[0]) + obs[0]))) then: (if (((-0.44077948982315546 * obs[0]) + -0.7580295829372916) < obs[2]) then: act = 1 else: act = 0) else: act = 0)
158.75 (if ((-1.6509771037250687 * (-0.618105479824533 * obs[0])) < (obs[3] + (((((obs[1] + (-0.5387462995093196 * obs[1])) + obs[2]) * (((1.8075492463571612 * obs[3]) + 0.9369295963323501) * (obs[3] + 3.838254424401746))) * obs[0]) + obs[0]))) then: (if (((-0.44077948982315546 * obs[0]) + -0.7580295829372916) < obs[2]) then: act = 1 else: act = 0) else: act = 0)
319.49 (if ((-1.8882016328002222 * (-0.5370044701903701 * obs[0])) < (obs[3] + (((((obs[1] + (-0.51325734684711 * obs[1])) + obs[2]) * (0.49863891806377186 * (obs[3] + 3.763690375052566))) * obs[0]) + obs[0]))) then: (if (((-0.4422425904558991 * obs[0]) + -0.8142678700006509) < obs[2]) then: act = 1 else: act = 0) else: act = 0)
329.29 (if ((-1.8882016328002222 * (-0.5370044701903701 * obs[0])) < (obs[3] + (((((obs[1] + (-0.51325734684711 * obs[1])) + obs[2]) * (0.49863891806377186 * (obs[3] + 3.763690375052566))) * obs[0]) + obs[0]))) then: (if (((-0.4422425904558991 * obs[0]) + -0.8142678700006509) < obs[2]) then: act = 1 else: act = 0) else: act = 0)
442.27 (if ((-0.010733833005140858 * (obs[2] + -0.9520922199096233)) < (obs[3] + (((((obs[1] + (-1.458138660715118 * obs[1])) + obs[2]) * (-0.1566864272067599 * (obs[3] + 3.262553115347277))) * obs[0]) + obs[2]))) then: (if (((-0.9826584449037133 * obs[0]) + -0.3311751863962482) < obs[2]) then: act = 1 else: act = 0) else: act = 0)
495.34 (if (((obs[2] + ((obs[2] + obs[2]) + 1.8762100673799584)) * ((obs[1] * -0.11124344829136806) + ((obs[2] + obs[2]) * 0.046719476362504814))) < (obs[3] + (((-1.926213734236334 * (0.012615674000550803 * obs[0])) * obs[0]) + obs[2]))) then: (if (((-1.2156083803889963 * obs[0]) + -1.2870162615226697) < obs[2]) then: act = 1 else: act = 0) else: act = 0)
497.32 (if (((obs[2] + ((obs[2] + obs[2]) + 1.8762100673799584)) * ((obs[1] * -0.11124344829136806) + ((obs[2] + obs[2]) * 0.046719476362504814))) < (obs[3] + (((-1.926213734236334 * (0.012615674000550803 * obs[0])) * obs[0]) + obs[2]))) then: (if (((-1.2156083803889963 * obs[0]) + -1.2870162615226697) < obs[2]) then: act = 1 else: act = 0) else: act = 0)
499.82 (if (((obs[2] + ((obs[3] + obs[2]) + 1.6156990749009403)) * ((obs[1] * -0.33399891297807405) + ((obs[3] + obs[2]) * -1.0576239491942203))) < (obs[3] + (((obs[2] * ((-0.0567152028465612 + obs[1]) + 2.0020002196895765)) * (-1.810467362344186 * obs[3])) * (obs[2] + obs[1])))) then: (if (((-1.375204756680748 * obs[0]) + -2.4039741971722064) < obs[2]) then: act = 1 else: act = 0) else: act = 0)
500.0 (if (((obs[2] + ((obs[3] + obs[2]) + 1.6156990749009403)) * ((obs[1] * -0.33399891297807405) + ((obs[3] + obs[2]) * -1.0576239491942203))) < (obs[3] + (((obs[2] * ((-0.0567152028465612 + obs[1]) + 2.0020002196895765)) * (-1.810467362344186 * obs[3])) * (obs[2] + obs[1])))) then: (if (((-1.375204756680748 * obs[0]) + -2.4039741971722064) < obs[2]) then: act = 1 else: act = 0) else: act = 0)
