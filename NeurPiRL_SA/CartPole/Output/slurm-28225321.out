created virtual environment CPython3.8.10.final.0-64 in 26588ms
  creator CPython3Posix(dest=/localscratch/orfanos.28225321.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 0 else: act = 1) else: act = 1) 9.35
141.28 (if (obs[3] < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1])) then: (if (1.6265990211615822 < -0.05002877715900189) then: act = 0 else: (if (1.500114374817345 < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1]) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 1 else: act = 1))
206.49 (if (obs[3] < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07))) then: (if (-2.3734009788384185 < (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) * 1.550811233605395)) then: act = 0 else: (if (-0.6392086917835237 < obs[0]) then: act = 1 else: act = 0)) else: (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1]) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 1 else: act = 1))
210.09 (if (obs[3] < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * (-0.39424930090080684 + ((max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + ((obs[2] + -1.2497989875543212) * (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + -1.1398484221728986))) + -0.8434456662758603)))) then: (if (-1.5872869330952655 < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * 1.7205441486163249)) then: act = 0 else: (if (-0.9020285284837734 < obs[0]) then: act = 1 else: act = 0)) else: (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1]) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 1 else: act = 1))
219.72 (if (obs[3] < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * (-0.39424930090080684 + ((max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + ((obs[2] + -1.2497989875543212) * (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + -1.1398484221728986))) + -0.8434456662758603)))) then: (if (-1.5872869330952655 < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * 1.7205441486163249)) then: act = 0 else: (if (-0.9020285284837734 < obs[0]) then: act = 1 else: act = 0)) else: (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1]) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 1 else: act = 1))
239.56 (if (obs[3] < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * (-0.30441295068304575 + ((max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + ((obs[2] + -1.430737684734739) * (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + -1.2950292493738873))) + -1.2290628291080747)))) then: (if (-1.4839075857695623 < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * 1.6413125884709723)) then: act = 0 else: (if ((-1.0070737339111593 * obs[3]) < max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492)) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1]) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 1 else: act = 1))
252.71 (if (obs[3] < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * (-0.30441295068304575 + ((max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + ((obs[2] + -1.430737684734739) * (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + -1.2950292493738873))) + -1.2290628291080747)))) then: (if (-1.4839075857695623 < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * 1.6413125884709723)) then: act = 0 else: (if ((-1.0070737339111593 * obs[3]) < max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492)) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1]) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 1 else: act = 1))
411.79 (if (obs[3] < (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) * (0.22474462935353562 + ((max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + ((obs[2] + -0.8036864486155297) * (max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + -2.2052946610701203))) + -2.1295753662423302)))) then: (if (-1.4881747637917948 < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 0 else: (if ((-0.44292885341208127 * obs[3]) < max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492)) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1]) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 1 else: act = 1))
446.55 (if ((max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + -0.4022294506316344) < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: (if (((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) + 2.1113007704394757) + -0.2873707023770375) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 0 else: (if (obs[2] < ((2.309526324794254 * 0.2945683711679238) * (obs[1] + obs[0]))) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1]) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 1 else: act = 1))
448.45 (if ((max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492) + -0.4022294506316344) < (max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * max(0, [-0.588 -0.347  2.38   1.016] *dot* obs[:] + 0.492))) then: (if (((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) + 2.1113007704394757) + -0.2873707023770375) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 0 else: (if (obs[2] < ((2.309526324794254 * 0.2945683711679238) * (obs[1] + obs[0]))) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07) * obs[1]) < max(0, [-0.846 -0.612 -1.064 -0.224] *dot* obs[:] + 0.07)) then: act = 1 else: act = 1))
500
(if (max(0, [-0.247 -0.353 -0.095 -0.021] *dot* obs[:] + 0.032) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [0.061 0.06  0.057 0.104] *dot* obs[:] + -0.001)) then: act = 0 else: act = 1) else: act = 1) 9.35
170.0 (if (obs[3] < ((max(0, [ 0.273 -0.246 -0.206 -0.415] *dot* obs[:] + 0.152) + max(0, [ 0.213 -0.072  0.367  0.29 ] *dot* obs[:] + 0.101)) * obs[2])) then: (if (1.917022004702574 < -0.821164504206555) then: act = 0 else: (if (max(0, [ 0.084 -0.183 -0.408 -0.518] *dot* obs[:] + 0.159) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.003  0.091  0.029 -0.058] *dot* obs[:] + -0.06) * obs[1]) < max(0, [0.032 0.282 0.159 0.233] *dot* obs[:] + 0.127)) then: act = 1 else: act = 1))
174.62 (if (obs[3] < ((max(0, [ 0.01   0.046 -0.032 -0.047] *dot* obs[:] + -0.028) + max(0, [ 0.003 -0.222 -0.262 -0.257] *dot* obs[:] + 0.135)) * obs[2])) then: act = 0 else: (if ((max(0, [-0.003  0.091  0.029 -0.058] *dot* obs[:] + -0.06) * obs[1]) < max(0, [0.032 0.282 0.159 0.233] *dot* obs[:] + 0.127)) then: act = 1 else: act = 1))
209.07 (if (obs[3] < ((max(0, [ 0.003 -0.222 -0.262 -0.257] *dot* obs[:] + 0.135) + -0.2073770959815831) * obs[0])) then: act = 0 else: (if (max(0, [ 0.01   0.046 -0.032 -0.047] *dot* obs[:] + -0.028) < ((max(0, [ 0.074 -0.078  0.003 -0.225] *dot* obs[:] + 0.082) + 2.0074445560291543) * ((max(0, [0.032 0.282 0.159 0.233] *dot* obs[:] + 0.127) * (obs[1] + max(0, [ 0.01   0.046 -0.032 -0.047] *dot* obs[:] + -0.028))) + 3.0347440392298477))) then: act = 1 else: act = 1))
353.12 (if (obs[1] < (-2.3536618752130405 * obs[3])) then: act = 0 else: act = 1)
457.06 (if ((0.01819656190819083 * obs[1]) < (-0.1095193880072661 * obs[3])) then: act = 0 else: act = 1)
500.0 (if (obs[2] < (-0.4817555420580074 * obs[3])) then: act = 0 else: act = 1)
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
189.57 (if ((obs[0] * (obs[2] * 0.9011662863159199)) < (obs[3] * -1.041488997648713)) then: act = 0 else: (if (obs[1] < 0.7727142534826702) then: act = 1 else: (if (obs[3] < -2.029751788956985) then: (if ((obs[2] * obs[2]) < -2.809159535214964) then: (if (0.5539356922936787 < -2.4461615371036993) then: act = 0 else: (if (0.08529358748688431 < -1.492955904230906) then: act = 1 else: act = 1)) else: act = 0) else: (if (0.17614620788361934 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
217.7 (if ((obs[0] * (-0.04461616315818345 * -2.13070897724308)) < (obs[3] * -1.270454187203181)) then: act = 0 else: (if (obs[1] < 2.2967883601916386) then: act = 1 else: (if (obs[0] < (obs[2] * obs[3])) then: act = 1 else: act = 1)))
500.0 (if ((obs[2] * ((((((((obs[0] + 2.216858755247911) * -0.7071908414701839) * (obs[3] * -1.8369090267160715)) * obs[0]) + obs[1]) + 1.8522261248657588) + 2.0385139869789413) * 0.14539200302085692)) < (obs[3] * -0.18108732943846323)) then: act = 0 else: (if (obs[3] < 2.345782686061959) then: act = 1 else: (if (obs[0] < (obs[2] * obs[3])) then: act = 1 else: act = 1)))
