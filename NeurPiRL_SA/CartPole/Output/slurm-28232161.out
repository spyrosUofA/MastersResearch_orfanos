created virtual environment CPython3.8.10.final.0-64 in 17856ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232161.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
479
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) < (max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) + max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) < max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) then: act = 1 else: act = 1))) else: act = 1) 9.36
13.95 (if ((-0.041623279902331445 + max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) < obs[2]) then: (if (((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) * max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) < (obs[0] * (obs[2] * obs[1]))) then: (if (-0.9165477835493347 < obs[3]) then: (if (obs[1] < (((((0.004406103724913013 * max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) * (max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) + max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41))) * max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) * obs[0]) * -2.3715380996341997)) then: act = 0 else: act = 0) else: (if (-2.0607189426974615 < max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) < max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) then: act = 1 else: act = 1))) else: act = 1)
197.39 (if ((obs[3] + (obs[1] * 0.9966581332626934)) < obs[1]) then: (if (((obs[3] + ((-0.9799042421664346 + ((((obs[0] * max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) * (max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) + max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068))) + obs[1]) * obs[1])) * obs[0])) * max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) < obs[3]) then: act = 0 else: (if (-1.4459887714072854 < max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) then: act = 0 else: act = 0)) else: act = 1)
456.3 (if ((obs[3] + (obs[1] * 1.2566039390401753)) < obs[1]) then: (if (max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) < ((max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) * (0.47658253851286275 * -1.0566513340123378)) + obs[3])) then: act = 1 else: act = 0) else: act = 1)
493.11 (if ((obs[3] + (obs[1] * 1.377920380079908)) < obs[1]) then: (if (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) < ((-0.6277676086944228 + 1.019222498765015) + max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068))) then: act = 1 else: act = 0) else: act = 1)
495.29 (if ((obs[3] + (obs[1] * 1.377920380079908)) < obs[1]) then: (if (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) < ((-0.6277676086944228 + 1.019222498765015) + max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068))) then: act = 1 else: act = 0) else: act = 1)
499.04 (if ((obs[0] + (-2.655662068575433 + ((((max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068) * obs[0]) * ((obs[2] * max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41)) * 0.930861360721168)) + max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) * -1.308724743524675))) < obs[3]) then: (if (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) < ((-1.4827636876916044 + 1.873020729358781) + max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068))) then: act = 1 else: act = 0) else: act = 1)
500.0 (if (-0.4404323984294292 < max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068)) then: (if (max(0, [ 0.185 -0.476 -0.914 -1.862] *dot* obs[:] + 0.41) < ((-1.2119099079327147 + 1.5848092362826398) + max(0, [ 0.475  0.177  1.257 -0.063] *dot* obs[:] + -0.068))) then: act = 1 else: act = 0) else: act = 1)
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [0.082 0.024 0.092 0.164] *dot* obs[:] + 0.069)) < (max(0, [-0.024  0.096  0.065  0.596] *dot* obs[:] + 0.145) + max(0, [0.164 0.008 0.205 0.199] *dot* obs[:] + 0.098))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [0.121 0.115 0.444 0.41 ] *dot* obs[:] + 0.147)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.352 -0.042 -0.059 -0.253] *dot* obs[:] + 0.09)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.172  0.04  -0.036  0.033] *dot* obs[:] + -0.036) < max(0, [-0.134  0.284 -0.136 -0.181] *dot* obs[:] + 0.029)) then: act = 1 else: act = 1))) else: act = 1) 9.36
13.54 (if ((-0.19470842610191946 + max(0, [ 0.352 -0.042 -0.059 -0.253] *dot* obs[:] + 0.09)) < obs[2]) then: (if (((max(0, [ 0.115 -0.05   0.445  0.218] *dot* obs[:] + 0.123) * max(0, [ 0.168  0.032 -0.014  0.253] *dot* obs[:] + 0.059)) * max(0, [0.082 0.024 0.092 0.164] *dot* obs[:] + 0.069)) < (obs[0] * (obs[2] * obs[1]))) then: (if (-0.7992497870507815 < obs[3]) then: (if (obs[1] < (((((obs[2] * max(0, [ 0.037 -0.081 -0.086 -0.183] *dot* obs[:] + 0.058)) * (max(0, [ 0.352 -0.042 -0.059 -0.253] *dot* obs[:] + 0.09) + max(0, [ 0.041  0.015  0.131 -0.001] *dot* obs[:] + -0.033))) * max(0, [-0.168  0.026  0.4    0.229] *dot* obs[:] + 0.108)) * obs[0]) * -1.9999977459669322)) then: act = 0 else: act = 0) else: (if (-2.2027200671730025 < max(0, [ 0.352 -0.042 -0.059 -0.253] *dot* obs[:] + 0.09)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.172  0.04  -0.036  0.033] *dot* obs[:] + -0.036) < max(0, [-0.134  0.284 -0.136 -0.181] *dot* obs[:] + 0.029)) then: act = 1 else: act = 1))) else: act = 1)
107.08 (if (obs[0] < (max(0, [ 0.037 -0.081 -0.086 -0.183] *dot* obs[:] + 0.058) + obs[2])) then: (if (-2.3972372737201444 < (0.2888893477418369 * obs[2])) then: (if (max(0, [0.215 0.046 0.5   0.447] *dot* obs[:] + 0.137) < max(0, [-0.182 -0.05  -0.17  -0.234] *dot* obs[:] + 0.124)) then: (if (0.874412523638953 < ((max(0, [-0.192  0.21   0.273  0.207] *dot* obs[:] + 0.12) + obs[0]) + (max(0, [-0.238 -0.057  0.138 -0.039] *dot* obs[:] + -0.071) + max(0, [ 0.109 -0.21  -0.286 -0.327] *dot* obs[:] + 0.103)))) then: act = 0 else: act = 0) else: (if (-1.1284234591965896 < max(0, [ 0.352 -0.042 -0.059 -0.253] *dot* obs[:] + 0.09)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.172  0.04  -0.036  0.033] *dot* obs[:] + -0.036) < max(0, [-0.134  0.284 -0.136 -0.181] *dot* obs[:] + 0.029)) then: act = 1 else: act = 1))) else: act = 1)
500.0 (if ((((1.0239538900451883 * obs[1]) + obs[3]) + obs[2]) < ((-0.8776876210780898 * ((max(0, [0.121 0.115 0.444 0.41 ] *dot* obs[:] + 0.147) * -2.901997520474801) * -2.069411003824428)) * max(0, [-0.067  0.176  0.06  -0.048] *dot* obs[:] + -0.086))) then: (if (-1.558693547938832 < (obs[2] * 1.1112817134426953)) then: (if (max(0, [0.215 0.046 0.5   0.447] *dot* obs[:] + 0.137) < max(0, [-0.182 -0.05  -0.17  -0.234] *dot* obs[:] + 0.124)) then: (if (-0.021243551909450265 < (obs[2] * 0.29470654839685934)) then: act = 0 else: act = 0) else: (if (-3.3354804734751164 < obs[2]) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.172  0.04  -0.036  0.033] *dot* obs[:] + -0.036) < max(0, [-0.134  0.284 -0.136 -0.181] *dot* obs[:] + 0.029)) then: act = 1 else: act = 1))) else: act = 1)
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
76.88 (if (((obs[1] + -0.5868414652040352) + 0.3577437499267634) < -1.0174985366805096) then: (if (((-2.0396057467780913 * (obs[0] * 1.4505218093921721)) + (-2.923787868612344 * -2.175102905406734)) < -0.5485520903719643) then: (if (obs[1] < obs[0]) then: (if (((-2.3970975031317643 + -2.246578472836366) * (obs[2] + obs[3])) < obs[0]) then: act = 0 else: act = 0) else: act = 0) else: act = 0) else: (if (-1.9403645168246682 < (-0.3217212560077628 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.474391657960508 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
99.57 (if (((obs[3] + obs[2]) + 0.0211667664195484) < ((obs[3] * obs[0]) + (((2.0141032663415626 * obs[1]) * obs[1]) * obs[0]))) then: (if (((obs[2] * (obs[0] * -3.574494074067454)) + (-1.4282499704997897 * -4.045529418228186)) < obs[1]) then: (if (obs[1] < obs[0]) then: (if (((-2.324923700066592 + -3.082850168431208) * (obs[0] + (((((((1.97226953932564 + (obs[1] + ((1.5847399105993125 * 0.5613710763839643) + -0.37143232876197335))) + obs[0]) * obs[2]) + (obs[1] * obs[2])) + (((obs[3] * ((0.11674528584241284 * obs[1]) * -2.717421430743236)) * obs[1]) * (((1.435043182448877 * 1.3742478669260663) + obs[1]) * 0.33389079535035604))) + 1.090433021412799) * obs[0]))) < ((obs[2] + (0.516727029773989 + (((-3.274337941316985 * (obs[3] + ((obs[3] * (-1.896197993466036 + 1.0080447449162127)) + obs[2]))) + obs[2]) * (-3.0409226215000573 * 2.208383911304618)))) * (obs[0] + obs[3]))) then: act = 0 else: act = 0) else: act = 0) else: act = 0) else: (if (-1.2040802533194783 < (-1.245899765076797 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-3.0857238264507467 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
105.8 (if (((obs[3] + obs[2]) + 0.00930501875708295) < ((obs[3] * obs[0]) + (((0.24519686425031056 * obs[1]) * obs[1]) * obs[0]))) then: (if (((obs[2] * (obs[0] * -2.780904965165195)) + (-1.111121914513813 * -4.167754403765774)) < obs[1]) then: (if (obs[1] < obs[0]) then: (if (((-2.2192696926056064 + -3.656227236613769) * (obs[0] + (((((((1.3595181732068138 + (obs[1] + ((1.4241594400433297 * 0.5469051450179403) + -0.27498100652938373))) + obs[0]) * obs[2]) + (obs[1] * obs[2])) + (((obs[3] * ((1.4967090598762676 * obs[1]) * -3.294774065486561)) * obs[1]) * (((2.057029798790864 * -2.099225848201087) + obs[1]) * 0.6508601905193265))) + 1.404520739455985) * obs[0]))) < ((obs[2] + (0.9002632196518678 + (((-3.6841024446046218 * (obs[3] + ((obs[3] * (-2.433271782166895 + 1.5932550732646469)) + obs[2]))) + obs[2]) * (-3.2398702366820165 * 2.6360545574401226)))) * (obs[0] + obs[3]))) then: act = 0 else: act = 0) else: act = 0) else: act = 0) else: (if (-0.904226953781035 < (-0.7842364504454687 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-3.3739319617361043 < obs[0]) then: act = 0 else: act = 0)) else: act = 0))
498.58 (if (((obs[3] + obs[2]) + 0.29121245001775986) < ((2.155127994653161 + -1.8880133319351133) + (((-0.485865096566165 * (((obs[0] * 0.7982654578303063) + obs[1]) * 0.9640611637986947)) * obs[1]) * obs[0]))) then: (if ((obs[0] + -0.4551432643845539) < obs[1]) then: (if (obs[1] < ((obs[3] * obs[1]) * 1.67985670893202)) then: act = 0 else: act = 0) else: act = 0) else: act = 1)
500.0 (if (((obs[3] + obs[2]) + 0.29121245001775986) < ((2.155127994653161 + -1.8880133319351133) + (((-0.485865096566165 * (((obs[0] * 0.7982654578303063) + obs[1]) * 0.9640611637986947)) * obs[1]) * obs[0]))) then: (if ((obs[0] + -0.4551432643845539) < obs[1]) then: (if (obs[1] < ((obs[3] * obs[1]) * 1.67985670893202)) then: act = 0 else: act = 0) else: act = 0) else: act = 1)
