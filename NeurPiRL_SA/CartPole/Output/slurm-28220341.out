created virtual environment CPython3.8.10.final.0-64 in 13347ms
  creator CPython3Posix(dest=/localscratch/orfanos.28220341.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 0 else: act = 1) else: act = 1) 9.35
160.63 (if (obs[3] < (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[2])) then: (if (1.8755330070538607 < -0.711002257485476) then: act = 0 else: (if (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) < obs[2]) then: act = 0 else: act = 0)) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
162.18 (if (obs[3] < (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[2])) then: (if (2.228944765075251 < obs[0]) then: (if (0.016582642486508536 < max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388)) then: act = 1 else: act = 1) else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
164.73 (if (obs[3] < (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[2])) then: (if (2.228944765075251 < obs[0]) then: (if (0.016582642486508536 < max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388)) then: act = 1 else: act = 1) else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
194.02 (if (obs[3] < ((max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) * ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + -0.25) * obs[0])) * obs[1])) then: (if (0.8428548861259751 < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
200.87 (if (obs[3] < ((max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) * ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + -0.20328749647055439) * obs[0])) * obs[1])) then: (if (1.0343070684581572 < (max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + (0.25 * (0.75 + 0.25))))) then: act = 1 else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
238.29 (if (obs[3] < ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * 2.25) * 0.49463547691884246)) then: (if (0.3432755342324343 < (max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + (-0.42340429145555586 * (1.9899030532240785 + -0.9544786618439509))))) then: act = 1 else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
244.25 (if (obs[3] < ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * 2.25) * 0.49463547691884246)) then: (if (0.3432755342324343 < (max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + (-0.42340429145555586 * (1.9899030532240785 + -0.9544786618439509))))) then: act = 1 else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
480.35 (if (obs[3] < ((max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) * 1.53840505547923) * 0.5472073757846829)) then: (if (0.26677553114508873 < (max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + (-0.266419458510953 * (0.59390758827953 + 1.3290336824650018))))) then: act = 1 else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
481.67 (if (obs[3] < ((max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) * 1.53840505547923) * 0.5472073757846829)) then: (if (0.26677553114508873 < (max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + (-0.266419458510953 * (0.59390758827953 + 1.3290336824650018))))) then: act = 1 else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
483.65 (if (obs[3] < ((max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) * 1.53840505547923) * 0.5472073757846829)) then: (if (0.26677553114508873 < (max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + (-0.266419458510953 * (0.59390758827953 + 1.3290336824650018))))) then: act = 1 else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
486.98 (if ((-1.051664224028236 + max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388)) < (obs[0] + 2.147021872420431)) then: (if (0.762924270308637 < (max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + (0.005249777690280594 * ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + ((max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + 1.286839743336143) + obs[0])) * (-1.131486509878486 + 0.2016897602811269)))))) then: act = 1 else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
493.52 (if ((-1.051664224028236 + max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388)) < (obs[0] + 2.147021872420431)) then: (if (0.762924270308637 < (max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + (max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + (0.005249777690280594 * ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) + ((max(0, [0.182 0.628 1.236 1.977] *dot* obs[:] + 0.388) + 1.286839743336143) + obs[0])) * (-1.131486509878486 + 0.2016897602811269)))))) then: act = 1 else: act = 0) else: (if ((max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085) * obs[1]) < max(0, [-0.457 -1.223  0.59   1.019] *dot* obs[:] + 0.085)) then: act = 1 else: act = 1))
500
(if (max(0, [-0.248 -0.035 -0.096 -0.222] *dot* obs[:] + 0.121) < ((obs[3] + -0.041488997648713) + (-0.889837753278921 + obs[0]))) then: (if (obs[0] < max(0, [-0.054 -0.015 -0.099  0.174] *dot* obs[:] + -0.032)) then: act = 0 else: act = 1) else: act = 1) 9.35
177.92 (if (obs[3] < (max(0, [ 0.095 -0.142  0.088 -0.267] *dot* obs[:] + 0.082) * (((obs[0] + obs[3]) * 0.75) + (max(0, [ 0.131 -0.171  0.059  0.288] *dot* obs[:] + 0.094) * obs[1])))) then: (if (1.2521320282154433 < 0.5304579630042352) then: act = 0 else: (if (1.0000571874086726 < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.125 -0.206 -0.382 -0.266] *dot* obs[:] + 0.133) * obs[1]) < max(0, [ 0.177 -0.082  0.202 -0.149] *dot* obs[:] + 0.079)) then: act = 1 else: act = 1))
246.97 (if (obs[3] < (max(0, [ 0.131 -0.171  0.059  0.288] *dot* obs[:] + 0.094) * (-2.4416002921930797 * obs[2]))) then: (if (0.6435714147061735 < (max(0, [ 0.186 -0.082  0.259  0.337] *dot* obs[:] + 0.119) * (obs[0] * ((obs[3] + max(0, [-0.257 -0.038 -0.001 -0.34 ] *dot* obs[:] + 0.115)) * obs[2])))) then: act = 0 else: (if (max(0, [-0.099  0.237  0.194 -0.206] *dot* obs[:] + 0.091) < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.125 -0.206 -0.382 -0.266] *dot* obs[:] + 0.133) * obs[1]) < max(0, [ 0.177 -0.082  0.202 -0.149] *dot* obs[:] + 0.079)) then: act = 1 else: act = 1))
500.0 (if (obs[3] < (0.6048243731586911 * (-2.8367909617455496 * obs[2]))) then: (if (2.3010861343948323 < (-1.786067413108354 * (obs[0] * ((obs[3] + max(0, [-0.257 -0.038 -0.001 -0.34 ] *dot* obs[:] + 0.115)) * obs[2])))) then: (if (max(0, [-0.033  0.447 -0.148 -0.257] *dot* obs[:] + 0.074) < obs[2]) then: (if (max(0, [-0.202 -0.056  0.089  0.227] *dot* obs[:] + 0.043) < (obs[1] * (obs[1] + obs[0]))) then: act = 1 else: (if ((2.370084268371635 * max(0, [ 0.017  0.103  0.051 -0.333] *dot* obs[:] + 0.087)) < 1.0887772911248) then: (if (-0.2863108040842483 < (obs[0] + max(0, [ 0.001 -0.237 -0.195  0.263] *dot* obs[:] + -0.002))) then: (if (max(0, [ 0.305 -0.165 -0.014  0.33 ] *dot* obs[:] + 0.09) < obs[0]) then: act = 1 else: act = 0) else: (if (max(0, [ 0.305 -0.165 -0.014  0.33 ] *dot* obs[:] + 0.09) < -2.5805578208040747) then: act = 1 else: act = 1)) else: act = 0)) else: act = 0) else: (if (max(0, [-0.099  0.237  0.194 -0.206] *dot* obs[:] + 0.091) < obs[3]) then: act = 0 else: act = 0)) else: (if ((max(0, [ 0.125 -0.206 -0.382 -0.266] *dot* obs[:] + 0.133) * obs[1]) < max(0, [ 0.177 -0.082  0.202 -0.149] *dot* obs[:] + 0.079)) then: act = 1 else: act = 1))
500
(if ((-1.041488997648713 + (obs[3] * -0.24994281259132756)) < (-0.889837753278921 * (-1.0988337136840802 * obs[1]))) then: act = 1 else: act = 0) 9.35
192.48 (if ((obs[0] * (obs[2] * 0.8243994676544772)) < (obs[3] * -0.718554960011189)) then: act = 0 else: (if (obs[1] < ((-0.8434936873875656 + ((obs[2] * (obs[3] * obs[0])) + (-2.6598677462415665 + -0.1782048729378512))) * -0.605666818035963)) then: act = 1 else: (if (obs[3] < 0.8409630099259908) then: act = 0 else: (if (0.6133732609260303 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
198.17 (if ((obs[0] * (obs[2] * 0.8438078346561557)) < (obs[3] * -0.770171222895854)) then: act = 0 else: (if (obs[1] < ((-0.9912675625218068 + ((obs[2] * (obs[3] * obs[0])) + (-2.8961739496426033 + 1.085233755089201))) * -0.6460695608343157)) then: act = 1 else: (if (obs[3] < 0.9335727601243706) then: act = 0 else: (if (0.802431979121503 < obs[2]) then: act = 1 else: (if (obs[3] < obs[0]) then: act = 1 else: (if (obs[1] < obs[0]) then: act = 0 else: act = 0))))))
455.8 (if ((-1.1477738751342412 * (-1.1985034253466789 * obs[2])) < (obs[3] * -2.030962138294494)) then: act = 0 else: (if (obs[2] < obs[3]) then: act = 1 else: act = 1))
474.56 (if ((-1.2955477502684825 * (-1.2363062034010368 * obs[2])) < (obs[3] * -1.8419034200990212)) then: act = 0 else: (if (obs[2] < obs[3]) then: act = 1 else: act = 1))
500.0 (if (obs[2] < (obs[3] * -0.5880693490550088)) then: act = 0 else: (if (((((-1.8096211739591719 * obs[3]) + obs[0]) * 1.1382816903678485) * obs[0]) < ((-1.9321978873869918 * 0.1524122037895716) + (((-0.30540474018251296 + obs[1]) * (0.5431074841341186 * 0.7536099737714921)) * ((obs[1] + 2.460605808724806) + -1.6658205167735072)))) then: act = 1 else: act = 1))
