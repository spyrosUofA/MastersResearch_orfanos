created virtual environment CPython3.8.10.final.0-64 in 30844ms
  creator CPython3Posix(dest=/localscratch/orfanos.28232157.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/box2d_py-2.3.5+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cycler-0.11.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.1.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/kiwisolver-1.3.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/matplotlib-3.4.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.21.2+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/pandas-1.3.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyparsing-3.0.6+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.3+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-1.0.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.7.1+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/stable_baselines3-1.2.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-3.0.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2/torch-1.10.0+computecanada-cp38-cp38-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/typing_extensions-4.0.0+computecanada-py3-none-any.whl
Installing collected packages: six, numpy, future, typing-extensions, threadpoolctl, scipy, pytz, python-dateutil, pyparsing, pyglet, Pillow, kiwisolver, joblib, cycler, cloudpickle, torch, scikit-learn, pandas, matplotlib, gym, stable-baselines3, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada cycler-0.11.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.1.0+computecanada kiwisolver-1.3.1+computecanada matplotlib-3.4.2+computecanada numpy-1.21.2+computecanada pandas-1.3.0+computecanada pyglet-1.5.0+computecanada pyparsing-3.0.6+computecanada python-dateutil-2.8.2+computecanada pytz-2021.3+computecanada scikit-learn-1.0.1+computecanada scipy-1.7.1+computecanada six-1.16.0+computecanada stable-baselines3-1.2.0+computecanada threadpoolctl-3.0.0+computecanada torch-1.10.0+computecanada typing-extensions-4.0.0+computecanada
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326)) < (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) + max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) < max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416)) then: act = 1 else: act = 1))) else: act = 1) 9.36
372.44 (if ((-0.39417888422911757 + max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416)) < obs[2]) then: act = 0 else: act = 1)
381.51 (if ((-0.39417888422911757 + max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416)) < obs[2]) then: act = 0 else: act = 1)
384.51 (if ((-0.39417888422911757 + max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416)) < obs[2]) then: act = 0 else: act = 1)
483.56 (if (((0.6173438327048868 * 0.9682209290136696) + -0.44235177821785754) < (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) * max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416))) then: (if (max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326) < max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326)) then: (if (obs[1] < obs[2]) then: act = 0 else: act = 1) else: (if ((obs[3] + obs[0]) < ((-0.6432841066040693 * max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416)) + obs[3])) then: act = 0 else: act = 1)) else: (if (-1.8340251649876373 < ((obs[0] + obs[0]) + (max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326) + obs[3]))) then: (if (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) < obs[2]) then: act = 1 else: (if (obs[2] < max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326)) then: act = 0 else: (if (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) < obs[0]) then: act = 0 else: act = 0))) else: act = 1))
499.21 (if (((0.09584761099643979 * max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326)) + 0.13029802401205992) < (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) * 0.3849093063153209)) then: act = 1 else: (if (-1.0923063759549685 < ((obs[0] + obs[0]) + (max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326) + obs[3]))) then: (if (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) < obs[2]) then: act = 1 else: (if (obs[2] < max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326)) then: act = 0 else: (if (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) < obs[0]) then: act = 0 else: act = 0))) else: act = 1))
499.32 (if (((0.09584761099643979 * max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326)) + 0.13029802401205992) < (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) * 0.3849093063153209)) then: act = 1 else: (if (-1.0923063759549685 < ((obs[0] + obs[0]) + (max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326) + obs[3]))) then: (if (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) < obs[2]) then: act = 1 else: (if (obs[2] < max(0, [-1.162 -1.195  0.202 -0.048] *dot* obs[:] + 0.326)) then: act = 0 else: (if (max(0, [-0.401  0.673  1.347  1.352] *dot* obs[:] + 0.416) < obs[0]) then: act = 0 else: act = 0))) else: act = 1))
500
(if (1.9679974510710019 < obs[2]) then: (if ((-2.2370368840860544 * max(0, [ 0.318 -0.254 -0.148 -0.318] *dot* obs[:] + 0.134)) < (max(0, [ 0.268  0.001  0.246 -0.045] *dot* obs[:] + -0.037) + max(0, [-0.146  0.119 -0.151 -0.112] *dot* obs[:] + 0.093))) then: (if (0.024831238939354572 < obs[3]) then: (if (obs[1] < max(0, [-0.316  0.078 -0.387 -0.085] *dot* obs[:] + 0.039)) then: act = 0 else: act = 0) else: (if (-2.0323388036908616 < max(0, [ 0.17  -0.292  0.132  0.392] *dot* obs[:] + 0.066)) then: act = 1 else: act = 1)) else: (if (obs[1] < obs[3]) then: act = 1 else: (if (max(0, [ 0.255 -0.07   0.322  0.002] *dot* obs[:] + 0.038) < max(0, [-0.407  0.201  0.067  0.228] *dot* obs[:] + 0.099)) then: act = 1 else: act = 1))) else: act = 1) 9.36
44.36 (if (0.024831238939354572 < obs[1]) then: act = 0 else: act = 1)
199.01 (if (obs[3] < max(0, [-0.03   0.021 -0.221  0.266] *dot* obs[:] + -0.024)) then: act = 0 else: act = 1)
200.53 (if (obs[3] < max(0, [-0.03   0.021 -0.221  0.266] *dot* obs[:] + -0.024)) then: act = 0 else: act = 1)
208.54 (if (obs[3] < max(0, [-0.068 -0.085  0.039  0.053] *dot* obs[:] + 0.008)) then: act = 0 else: act = 1)
210.59 (if (obs[3] < max(0, [-0.068 -0.085  0.039  0.053] *dot* obs[:] + 0.008)) then: act = 0 else: act = 1)
500.0 (if (obs[3] < (-1.6398468964647201 * ((0.9249131425016497 + max(0, [-0.014 -0.125  0.192  0.369] *dot* obs[:] + 0.062)) * obs[2]))) then: act = 0 else: act = 1)
500
(if (1.9679974510710019 < obs[2]) then: (if (-2.2370368840860544 < obs[3]) then: (if (obs[2] < 0.024831238939354572) then: (if (obs[3] < obs[1]) then: act = 0 else: act = 0) else: act = 1) else: act = 0) else: (if ((obs[2] * obs[2]) < (-1.0323388036908616 * obs[1])) then: (if (obs[2] < obs[3]) then: (if (obs[1] < obs[1]) then: act = 1 else: act = 1) else: (if (-1.0398160989562555 < obs[0]) then: act = 0 else: act = 0)) else: act = 0)) 52.29
56.21 (if ((-1.85182670101632 * 0.14303621394061822) < -1.710367165378541) then: act = 1 else: (if (obs[2] < ((((-1.1880559782606097 + obs[3]) + (2.407256763045677 * (obs[1] * (-2.8653028582262117 + obs[0])))) * (obs[3] * obs[0])) * (obs[0] * ((2.1579897742862437 * (((obs[1] * 1.516413467463712) * (1.6150949327612933 * -2.1828408649514373)) * ((1.0346075538049635 * obs[1]) * (obs[0] * obs[2])))) + ((((-2.211918376369086 * -1.0884218832278465) + obs[0]) + (0.5621477432804378 + (-1.9864883641491584 * obs[0]))) + -0.2852469298993677))))) then: (if (obs[1] < (obs[2] * (1.129029450929866 * -0.700570503624325))) then: (if (obs[3] < obs[1]) then: act = 1 else: act = 1) else: act = 0) else: act = 1))
96.48 (if ((2.128507411544446 * 1.5671100860846794) < (((((-1.9624072707803621 * obs[0]) + (obs[1] * obs[0])) + 2.467294901139974) * (obs[1] * ((obs[2] * -2.5822357627354435) * (obs[3] * -2.1733162974048628)))) * ((-0.936615335995526 * (obs[0] * obs[0])) * (((2.063175218336748 * 1.819566207432508) + obs[1]) * 0.8051891856272846)))) then: act = 1 else: (if (obs[2] < ((((-1.0670543093125815 + obs[3]) + (2.05982445085478 * (obs[1] * (-3.6160650667857914 + obs[0])))) * (obs[3] * obs[0])) * (obs[0] * ((1.8676207628435124 * ((1.0605669163846474 * obs[2]) + 0.8998273368372616)) + ((((-2.1438419324479736 * -0.8635331857691846) + obs[0]) + (-0.36066102859031807 + (-2.1159706827298495 * obs[0]))) + 0.11795059431196919))))) then: (if (obs[1] < (obs[2] * (-0.09650434070802599 * -1.0057237846925284))) then: (if (obs[3] < obs[1]) then: act = 1 else: act = 1) else: act = 0) else: act = 1))
265.1 (if ((1.4820110081359041 * 0.9279118756529506) < (((((-1.2380138800308926 * obs[1]) + (obs[1] * -6.326168514888702)) + -0.3407798229373741) * (obs[0] * (obs[1] + -0.6385918479849253))) * ((obs[0] + (-0.2101772614954695 * (obs[2] * (-1.1001726631627384 + obs[1])))) + (0.9971184186909638 * (((obs[2] * 1.8834136375514334) + -0.9751687610606454) + obs[1]))))) then: act = 1 else: (if (obs[2] < ((((-1.5109983292982756 + obs[3]) + (2.0899521725820724 * -1.6227243682506778)) * (obs[3] * obs[0])) * (obs[0] * ((-1.6187793107140203 * (obs[1] + -0.9130289589020064)) + ((((-4.791671030899382 * -1.7259684283371444) + obs[0]) + (-2.833567639442591 + (-2.782266286634787 * obs[0]))) + 0.8771065782445691))))) then: (if (obs[1] < (obs[2] * (-2.1754278629160693 * -3.538758522753538))) then: (if (obs[3] < obs[1]) then: act = 1 else: act = 1) else: act = 0) else: act = 1))
271.4 (if ((1.2320110081359041 * 1.041611494081374) < obs[0]) then: act = 1 else: (if (obs[2] < ((((-1.4994751628379686 + obs[3]) + (2.0226210181347124 * -1.3727243682506778)) * (obs[3] * obs[0])) * (obs[0] * ((-1.8687793107140203 * (obs[1] + -0.6630289589020064)) + ((((-4.870202596640887 * -1.4759684283371444) + obs[0]) + (-2.611036533348296 + (-2.7004666467157956 * obs[0]))) + 1.089597426748328))))) then: (if (obs[1] < (obs[2] * (-2.2871271472865518 * -3.691998894737526))) then: (if (obs[3] < obs[1]) then: act = 1 else: act = 1) else: act = 0) else: act = 1))
302.88 (if ((0.8159778720589286 * 1.1766959062823568) < obs[0]) then: act = 1 else: (if (obs[2] < ((((-2.8922352418693498 + (-0.5072482253584425 + (((obs[3] + obs[0]) * (0.6559903149286503 + -1.1018992947901227)) + (-0.7268563716670997 + (-0.049277262037100145 + -1.3337639197688786))))) + (obs[2] * -1.2093508902426966)) * (obs[3] * obs[0])) * (obs[0] * ((((obs[1] * ((1.6345799453449334 * -0.7156447141801157) + -2.592763724685532)) * ((obs[1] + obs[0]) + (obs[1] + ((obs[3] * obs[1]) * obs[0])))) * (obs[1] + -1.1497885425304117)) + ((((-5.258517207280991 * -2.4738045201975587) + obs[0]) + (-5.613259209557488 + (-4.404531357420173 * obs[0]))) + -0.9479343904362163))))) then: (if (obs[1] < (obs[2] * (-3.735993669350188 * -3.0569579457172282))) then: (if (obs[3] < obs[1]) then: act = 1 else: act = 1) else: act = 0) else: act = 1))
311.49 (if ((0.8159778720589286 * 1.1766959062823568) < obs[0]) then: act = 1 else: (if (obs[2] < ((((-2.8922352418693498 + (-0.5072482253584425 + (((obs[3] + obs[0]) * (0.6559903149286503 + -1.1018992947901227)) + (-0.7268563716670997 + (-0.049277262037100145 + -1.3337639197688786))))) + (obs[2] * -1.2093508902426966)) * (obs[3] * obs[0])) * (obs[0] * ((((obs[1] * ((1.6345799453449334 * -0.7156447141801157) + -2.592763724685532)) * ((obs[1] + obs[0]) + (obs[1] + ((obs[3] * obs[1]) * obs[0])))) * (obs[1] + -1.1497885425304117)) + ((((-5.258517207280991 * -2.4738045201975587) + obs[0]) + (-5.613259209557488 + (-4.404531357420173 * obs[0]))) + -0.9479343904362163))))) then: (if (obs[1] < (obs[2] * (-3.735993669350188 * -3.0569579457172282))) then: (if (obs[3] < obs[1]) then: act = 1 else: act = 1) else: act = 0) else: act = 1))
317.84 (if ((0.8159778720589286 * 1.1766959062823568) < obs[0]) then: act = 1 else: (if (obs[2] < ((((-2.8922352418693498 + (-0.5072482253584425 + (((obs[3] + obs[0]) * (0.6559903149286503 + -1.1018992947901227)) + (-0.7268563716670997 + (-0.049277262037100145 + -1.3337639197688786))))) + (obs[2] * -1.2093508902426966)) * (obs[3] * obs[0])) * (obs[0] * ((((obs[1] * ((1.6345799453449334 * -0.7156447141801157) + -2.592763724685532)) * ((obs[1] + obs[0]) + (obs[1] + ((obs[3] * obs[1]) * obs[0])))) * (obs[1] + -1.1497885425304117)) + ((((-5.258517207280991 * -2.4738045201975587) + obs[0]) + (-5.613259209557488 + (-4.404531357420173 * obs[0]))) + -0.9479343904362163))))) then: (if (obs[1] < (obs[2] * (-3.735993669350188 * -3.0569579457172282))) then: (if (obs[3] < obs[1]) then: act = 1 else: act = 1) else: act = 0) else: act = 1))
320.97 (if ((0.7199702252719342 * 1.220409047697915) < obs[0]) then: act = 1 else: (if (obs[2] < ((((-3.1427816048516357 + (-0.9397843372045787 + ((((obs[3] + (0.28533514781667346 + 2.353975292639489)) + (-0.15099100654366915 * obs[1])) * (0.8348967644546459 + -1.402417284278338)) + (-0.652362654849036 + (-0.3990363493828002 + -1.1520631706149365))))) + (obs[2] * -1.245548262692186)) * (obs[3] * obs[0])) * (obs[0] * ((((obs[1] * ((1.0864498633623336 * (-2.1577800671765424 + ((((1.173280742678734 * obs[0]) + -0.0028815813090360964) * obs[0]) + (obs[2] + obs[0])))) + -2.689780135758117)) * ((obs[1] + obs[0]) + (obs[1] + ((obs[3] * obs[1]) * obs[0])))) * (obs[0] + -1.3005273851499555)) + ((((-5.377965504149758 * -2.728302288691747) + obs[0]) + (-6.32436986181565 + (-4.847558406363408 * obs[0]))) + -1.193744937733737))))) then: (if (obs[1] < (obs[2] * (-4.106832579331236 * -2.738386584069305))) then: (if (obs[3] < obs[1]) then: act = 1 else: act = 1) else: act = 0) else: act = 1))
321.13 (if ((0.6220627426135517 * 1.54385997590627) < obs[0]) then: act = 1 else: (if (obs[2] < ((((-4.019903944225901 + (-1.8151199207228523 + ((((obs[3] + (1.1503157726424078 + 2.843625335031662)) + 1.3991549729576491) * (-0.2819530987629446 + -2.0493738720444865)) + (-1.030583435461895 + (-0.08943574684761962 + -1.9417614700051467))))) + obs[2]) * (obs[3] * obs[0])) * (obs[0] * ((((obs[1] * ((1.1272024305200026 * (-2.985370230963137 + ((((-0.5856300717410413 * obs[0]) + -0.7391060122410251) * obs[0]) + (obs[2] + obs[0])))) + -2.433001998926851)) * ((obs[1] + obs[0]) + (obs[1] + ((obs[3] * obs[1]) * obs[0])))) * (obs[0] + -1.2222173844902349)) + ((((-5.8452576454639384 * -2.741129832485541) + obs[0]) + (-7.754512395209714 + (-5.490188287358808 * obs[0]))) + -2.1630448781236025))))) then: (if (obs[1] < (obs[2] * (-4.63424633754593 * -3.0585490822046992))) then: (if (obs[3] < obs[1]) then: act = 1 else: act = 1) else: act = 0) else: act = 1))
