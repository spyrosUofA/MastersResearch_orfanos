created virtual environment CPython3.6.10.final.0-64 in 12408ms
  creator CPython3Posix(dest=/localscratch/orfanos.25044404.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:178: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -328.9363490674044
(if (((max(0, [-0.069 -0.395 -0.01   0.514  0.004  0.094 -0.025 -0.305] *dot* obs[:] + -0.414) + 0.5) * max(0, [ 0.033 -0.345  1.044 -1.245 -1.612 -2.791  0.394  0.655] *dot* obs[:] + -0.943)) < 1.0) then: act = 3 else: (if ((1.0 * -0.5) < 0.0) then: act = 0 else: (if (obs[3] < max(0, [ 0.093 -0.221 -0.139  0.094 -0.306 -0.177 -0.205 -0.157] *dot* obs[:] + -0.761)) then: (if (5.0 < 0.5) then: act = 3 else: act = 2) else: (if (max(0, [ 0.426 -0.205  0.541  0.104 -1.898  0.205  0.195  0.41 ] *dot* obs[:] + -0.343) < -0.5) then: act = 3 else: act = 2))))

Current best:  -137.40263629137243
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.288  0.557 -0.044  0.073  0.22   0.364 -0.4   -0.402] *dot* obs[:] + -1.692)) + 2.0)) then: (if ((0.0 + obs[1]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.5 < obs[3]) then: act = 2 else: (if (0.0 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -114.88918037994497
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.288  0.557 -0.044  0.073  0.22   0.364 -0.4   -0.402] *dot* obs[:] + -1.692)) + 2.0)) then: (if ((0.0 + obs[1]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -112.24573945427476
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.288  0.557 -0.044  0.073  0.22   0.364 -0.4   -0.402] *dot* obs[:] + -1.692)) + 2.0)) then: (if ((2.0 + obs[1]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (2.0 < obs[1]) then: act = 1 else: act = 2)) else: (if ((obs[1] + 2.0) < ((obs[7] + (2.0 * 2.0)) * 5.0)) then: (if (((5.0 + obs[3]) + (max(0, [-0.024 -0.259  0.139  0.266 -0.14  -0.014  0.038  0.341] *dot* obs[:] + -0.617) + obs[6])) < max(0, [ 0.21  -0.463  0.031 -0.241  0.33  -0.224 -0.029 -0.055] *dot* obs[:] + -0.718)) then: (if (max(0, [ 0.013 -0.298 -0.036  0.286 -0.084  0.1   -0.259  0.123] *dot* obs[:] + -0.358) < (-0.5 * obs[5])) then: act = 2 else: (if (obs[5] < 1.0) then: act = 0 else: (if (2.0 < 2.0) then: act = 2 else: act = 1))) else: (if (max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514) < (max(0, [-0.924 -0.646 -0.067  0.304  0.128 -0.31   0.256 -1.156] *dot* obs[:] + -1.219) + obs[0])) then: act = 0 else: (if (5.0 < max(0, [ 2.542 -0.781  1.152 -0.555 -1.251 -0.347  0.014  0.068] *dot* obs[:] + -0.295)) then: act = 0 else: (if (max(0, [ 0.342  0.032 -0.016 -0.063 -0.157  0.27  -0.625 -0.393] *dot* obs[:] + -0.67) < max(0, [ 0.879 -0.152 -0.497 -1.694 -2.294 -0.717 -2.022 -1.566] *dot* obs[:] + -0.487)) then: act = 2 else: act = 3)))) else: act = 0)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -110.65762931268058
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.288  0.557 -0.044  0.073  0.22   0.364 -0.4   -0.402] *dot* obs[:] + -1.692)) + 2.0)) then: (if ((2.0 + obs[6]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (2.0 < obs[1]) then: act = 3 else: act = 2)) else: (if ((obs[1] + 2.0) < ((obs[7] + (2.0 * 2.0)) * 5.0)) then: (if (((5.0 + obs[3]) + (max(0, [-0.024 -0.259  0.139  0.266 -0.14  -0.014  0.038  0.341] *dot* obs[:] + -0.617) + obs[6])) < max(0, [ 0.21  -0.463  0.031 -0.241  0.33  -0.224 -0.029 -0.055] *dot* obs[:] + -0.718)) then: (if (max(0, [ 0.013 -0.298 -0.036  0.286 -0.084  0.1   -0.259  0.123] *dot* obs[:] + -0.358) < (-0.5 * obs[1])) then: act = 2 else: (if (obs[4] < 1.0) then: act = 0 else: (if (2.0 < 2.0) then: act = 2 else: act = 1))) else: (if (max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514) < (max(0, [-0.924 -0.646 -0.067  0.304  0.128 -0.31   0.256 -1.156] *dot* obs[:] + -1.219) + obs[0])) then: act = 0 else: (if (5.0 < max(0, [ 2.542 -0.781  1.152 -0.555 -1.251 -0.347  0.014  0.068] *dot* obs[:] + -0.295)) then: act = 0 else: (if (max(0, [ 0.342  0.032 -0.016 -0.063 -0.157  0.27  -0.625 -0.393] *dot* obs[:] + -0.67) < max(0, [ 0.879 -0.152 -0.497 -1.694 -2.294 -0.717 -2.022 -1.566] *dot* obs[:] + -0.487)) then: act = 2 else: act = 3)))) else: act = 0)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -109.25816152842583
(if (obs[0] < (((obs[1] + max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514)) + max(0, [-0.006 -0.192 -0.265  0.054  0.009 -0.054 -0.351 -0.307] *dot* obs[:] + -0.725)) + 2.0)) then: (if ((2.0 + obs[6]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + (0.0 + -0.5))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (2.0 < obs[1]) then: act = 3 else: act = 2)) else: (if ((obs[1] + 2.0) < ((max(0, [ 0.019 -0.139 -0.104 -0.062 -0.171  0.013 -0.555 -0.258] *dot* obs[:] + -0.553) + (2.0 * 2.0)) * 5.0)) then: (if (((obs[0] + obs[3]) + (max(0, [-0.024 -0.259  0.139  0.266 -0.14  -0.014  0.038  0.341] *dot* obs[:] + -0.617) + obs[6])) < max(0, [ 0.21  -0.463  0.031 -0.241  0.33  -0.224 -0.029 -0.055] *dot* obs[:] + -0.718)) then: (if (max(0, [ 0.013 -0.298 -0.036  0.286 -0.084  0.1   -0.259  0.123] *dot* obs[:] + -0.358) < (-0.5 * obs[1])) then: act = 2 else: (if (obs[4] < 1.0) then: act = 0 else: (if (2.0 < 2.0) then: act = 2 else: act = 1))) else: (if (max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514) < (max(0, [-0.924 -0.646 -0.067  0.304  0.128 -0.31   0.256 -1.156] *dot* obs[:] + -1.219) + obs[0])) then: act = 0 else: (if (5.0 < max(0, [ 2.542 -0.781  1.152 -0.555 -1.251 -0.347  0.014  0.068] *dot* obs[:] + -0.295)) then: act = 0 else: (if (max(0, [ 0.342  0.032 -0.016 -0.063 -0.157  0.27  -0.625 -0.393] *dot* obs[:] + -0.67) < max(0, [ 0.879 -0.152 -0.497 -1.694 -2.294 -0.717 -2.022 -1.566] *dot* obs[:] + -0.487)) then: act = 2 else: act = 3)))) else: act = 0)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -105.89563346063316
(if (obs[0] < (((obs[1] + max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514)) + max(0, [-0.006 -0.192 -0.265  0.054  0.009 -0.054 -0.351 -0.307] *dot* obs[:] + -0.725)) + 2.0)) then: (if (((((0.0 + max(0, [ 0.151 -0.408  0.252 -0.171  0.032  0.007 -0.307 -0.417] *dot* obs[:] + -0.787)) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + (0.0 + -0.5))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: (if ((obs[1] + 2.0) < ((max(0, [ 0.019 -0.139 -0.104 -0.062 -0.171  0.013 -0.555 -0.258] *dot* obs[:] + -0.553) + (2.0 * 2.0)) * 5.0)) then: (if (max(0, [-0.061  0.048  0.055  0.315 -0.055 -0.065  0.01  -0.323] *dot* obs[:] + -0.457) < max(0, [ 0.21  -0.463  0.031 -0.241  0.33  -0.224 -0.029 -0.055] *dot* obs[:] + -0.718)) then: (if (max(0, [ 0.013 -0.298 -0.036  0.286 -0.084  0.1   -0.259  0.123] *dot* obs[:] + -0.358) < (-0.5 * obs[1])) then: act = 2 else: (if (obs[4] < 1.0) then: act = 1 else: (if (2.0 < 2.0) then: act = 2 else: act = 1))) else: (if (max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514) < (max(0, [-0.924 -0.646 -0.067  0.304  0.128 -0.31   0.256 -1.156] *dot* obs[:] + -1.219) + obs[0])) then: act = 0 else: (if (5.0 < max(0, [ 2.542 -0.781  1.152 -0.555 -1.251 -0.347  0.014  0.068] *dot* obs[:] + -0.295)) then: act = 0 else: (if (max(0, [ 0.342  0.032 -0.016 -0.063 -0.157  0.27  -0.625 -0.393] *dot* obs[:] + -0.67) < max(0, [ 0.879 -0.152 -0.497 -1.694 -2.294 -0.717 -2.022 -1.566] *dot* obs[:] + -0.487)) then: act = 2 else: act = 3)))) else: act = 0)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -104.7937908247704
(if (obs[0] < (((obs[1] + max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514)) + max(0, [-0.006 -0.192 -0.265  0.054  0.009 -0.054 -0.351 -0.307] *dot* obs[:] + -0.725)) + 2.0)) then: (if (((((0.0 + max(0, [ 0.151 -0.408  0.252 -0.171  0.032  0.007 -0.307 -0.417] *dot* obs[:] + -0.787)) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + (0.0 + -0.5))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: (if ((obs[1] + (obs[5] * obs[5])) < ((max(0, [ 0.019 -0.139 -0.104 -0.062 -0.171  0.013 -0.555 -0.258] *dot* obs[:] + -0.553) + (2.0 * 2.0)) * 5.0)) then: (if (max(0, [-0.061  0.048  0.055  0.315 -0.055 -0.065  0.01  -0.323] *dot* obs[:] + -0.457) < max(0, [ 0.21  -0.463  0.031 -0.241  0.33  -0.224 -0.029 -0.055] *dot* obs[:] + -0.718)) then: (if (max(0, [ 0.013 -0.298 -0.036  0.286 -0.084  0.1   -0.259  0.123] *dot* obs[:] + -0.358) < (-0.5 * obs[1])) then: act = 2 else: (if (obs[4] < 1.0) then: act = 1 else: (if (2.0 < 2.0) then: act = 2 else: act = 1))) else: (if (max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514) < (max(0, [-0.924 -0.646 -0.067  0.304  0.128 -0.31   0.256 -1.156] *dot* obs[:] + -1.219) + obs[0])) then: act = 0 else: (if (5.0 < max(0, [ 2.542 -0.781  1.152 -0.555 -1.251 -0.347  0.014  0.068] *dot* obs[:] + -0.295)) then: act = 0 else: (if (max(0, [ 0.342  0.032 -0.016 -0.063 -0.157  0.27  -0.625 -0.393] *dot* obs[:] + -0.67) < max(0, [ 0.879 -0.152 -0.497 -1.694 -2.294 -0.717 -2.022 -1.566] *dot* obs[:] + -0.487)) then: act = 2 else: act = 3)))) else: act = 0)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -91.5397475232525
(if (obs[0] < (((obs[1] + max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514)) + max(0, [-0.006 -0.192 -0.265  0.054  0.009 -0.054 -0.351 -0.307] *dot* obs[:] + -0.725)) + 2.0)) then: (if (((((0.0 + max(0, [ 0.151 -0.408  0.252 -0.171  0.032  0.007 -0.307 -0.417] *dot* obs[:] + -0.787)) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + (0.0 + 5.0))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: (if ((obs[1] + (obs[5] * obs[5])) < ((max(0, [ 0.019 -0.139 -0.104 -0.062 -0.171  0.013 -0.555 -0.258] *dot* obs[:] + -0.553) + (2.0 * 2.0)) * 5.0)) then: (if (max(0, [-0.061  0.048  0.055  0.315 -0.055 -0.065  0.01  -0.323] *dot* obs[:] + -0.457) < max(0, [ 0.21  -0.463  0.031 -0.241  0.33  -0.224 -0.029 -0.055] *dot* obs[:] + -0.718)) then: (if (max(0, [ 0.013 -0.298 -0.036  0.286 -0.084  0.1   -0.259  0.123] *dot* obs[:] + -0.358) < (-0.5 * obs[1])) then: act = 2 else: (if (obs[4] < 1.0) then: act = 1 else: (if (2.0 < 2.0) then: act = 2 else: act = 1))) else: (if (max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514) < (max(0, [-0.924 -0.646 -0.067  0.304  0.128 -0.31   0.256 -1.156] *dot* obs[:] + -1.219) + obs[0])) then: act = 0 else: (if (5.0 < max(0, [ 2.542 -0.781  1.152 -0.555 -1.251 -0.347  0.014  0.068] *dot* obs[:] + -0.295)) then: act = 0 else: (if (max(0, [ 0.342  0.032 -0.016 -0.063 -0.157  0.27  -0.625 -0.393] *dot* obs[:] + -0.67) < max(0, [ 0.879 -0.152 -0.497 -1.694 -2.294 -0.717 -2.022 -1.566] *dot* obs[:] + -0.487)) then: act = 2 else: act = 3)))) else: act = 0)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -82.39806664835989
(if (obs[0] < (((obs[1] + max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514)) + max(0, [-0.006 -0.192 -0.265  0.054  0.009 -0.054 -0.351 -0.307] *dot* obs[:] + -0.725)) + 2.0)) then: (if (((((0.0 + max(0, [ 0.151 -0.408  0.252 -0.171  0.032  0.007 -0.307 -0.417] *dot* obs[:] + -0.787)) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + (0.0 + 5.0))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: (if ((obs[1] + (obs[5] * obs[5])) < (obs[4] * 5.0)) then: (if (max(0, [-0.061  0.048  0.055  0.315 -0.055 -0.065  0.01  -0.323] *dot* obs[:] + -0.457) < max(0, [ 0.21  -0.463  0.031 -0.241  0.33  -0.224 -0.029 -0.055] *dot* obs[:] + -0.718)) then: (if (max(0, [ 0.013 -0.298 -0.036  0.286 -0.084  0.1   -0.259  0.123] *dot* obs[:] + -0.358) < (-0.5 * obs[1])) then: act = 2 else: (if (obs[4] < 1.0) then: act = 1 else: (if (2.0 < 2.0) then: act = 2 else: act = 1))) else: (if (max(0, [ 0.035 -0.508 -0.019 -0.072 -0.107 -0.077 -0.422 -0.516] *dot* obs[:] + -0.514) < (max(0, [-0.924 -0.646 -0.067  0.304  0.128 -0.31   0.256 -1.156] *dot* obs[:] + -1.219) + obs[0])) then: act = 0 else: (if (5.0 < max(0, [ 2.542 -0.781  1.152 -0.555 -1.251 -0.347  0.014  0.068] *dot* obs[:] + -0.295)) then: act = 0 else: (if (max(0, [ 0.342  0.032 -0.016 -0.063 -0.157  0.27  -0.625 -0.393] *dot* obs[:] + -0.67) < max(0, [ 0.879 -0.152 -0.497 -1.694 -2.294 -0.717 -2.022 -1.566] *dot* obs[:] + -0.487)) then: act = 2 else: act = 3)))) else: act = 0)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -78.65764775417202
(if (obs[0] < (((obs[1] + (max(0, [ 0.681  0.233 -0.685 -0.634 -2.883  0.383 -0.394 -0.741] *dot* obs[:] + -0.443) * ((obs[6] * (obs[5] * max(0, [ 1.201  1.245  1.466  1.37  -2.221 -0.524 -0.143 -0.122] *dot* obs[:] + 0.353))) + (((5.0 + max(0, [ 0.17  -0.482 -0.095 -0.212  0.062  0.194 -0.135 -0.267] *dot* obs[:] + -0.583)) * (obs[4] + obs[6])) + (obs[2] + obs[7]))))) + max(0, [-0.006 -0.192 -0.265  0.054  0.009 -0.054 -0.351 -0.307] *dot* obs[:] + -0.725)) + 2.0)) then: (if (((((0.0 + max(0, [ 0.151 -0.408  0.252 -0.171  0.032  0.007 -0.307 -0.417] *dot* obs[:] + -0.787)) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + (0.0 + 5.0))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -77.95273631720431
(if (obs[0] < (((obs[1] + (max(0, [ 0.681  0.233 -0.685 -0.634 -2.883  0.383 -0.394 -0.741] *dot* obs[:] + -0.443) * ((obs[6] * (obs[5] * max(0, [ 1.201  1.245  1.466  1.37  -2.221 -0.524 -0.143 -0.122] *dot* obs[:] + 0.353))) + ((max(0, [-0.371  0.357  1.121 -1.812  0.812 -0.002 -1.291 -1.518] *dot* obs[:] + -0.812) + max(0, [-0.126 -0.143  0.601 -0.696  0.585  0.185 -0.212 -0.672] *dot* obs[:] + -0.892)) + ((5.0 + ((obs[6] * obs[0]) + -0.5)) + (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) * (0.0 + (max(0, [ 0.254 -0.646  0.025  0.26   0.047  0.236 -0.239 -0.482] *dot* obs[:] + -0.592) + max(0, [-0.325 -1.161  0.331  0.255 -1.359 -0.189 -0.151 -1.668] *dot* obs[:] + -0.695))))))))) + max(0, [-0.006 -0.192 -0.265  0.054  0.009 -0.054 -0.351 -0.307] *dot* obs[:] + -0.725)) + 2.0)) then: (if ((((((max(0, [-0.209 -0.364 -0.003  0.044  0.075 -0.026 -0.048  0.028] *dot* obs[:] + -0.394) + (0.5 * (obs[3] * 5.0))) * (obs[7] + ((obs[0] + obs[7]) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < ((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) * 2.0) + (0.0 + 5.0))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -69.55128626801306
(if (obs[0] < (((obs[1] + (max(0, [ 0.681  0.233 -0.685 -0.634 -2.883  0.383 -0.394 -0.741] *dot* obs[:] + -0.443) * (obs[2] + ((max(0, [-0.371  0.357  1.121 -1.812  0.812 -0.002 -1.291 -1.518] *dot* obs[:] + -0.812) + max(0, [-0.126 -0.143  0.601 -0.696  0.585  0.185 -0.212 -0.672] *dot* obs[:] + -0.892)) + ((1.0 + ((obs[6] * obs[0]) + -0.5)) + (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) * (0.0 + (max(0, [ 0.254 -0.646  0.025  0.26   0.047  0.236 -0.239 -0.482] *dot* obs[:] + -0.592) + max(0, [-0.325 -1.161  0.331  0.255 -1.359 -0.189 -0.151 -1.668] *dot* obs[:] + -0.695))))))))) + -0.5) + 2.0)) then: (if ((((((max(0, [-0.209 -0.364 -0.003  0.044  0.075 -0.026 -0.048  0.028] *dot* obs[:] + -0.394) + (0.5 * (obs[3] * 5.0))) * (obs[7] + ((obs[0] + obs[7]) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < ((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) * 2.0) + (0.0 + 5.0))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -69.37370033951895
(if ((((obs[3] * obs[1]) * -0.5) + max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679)) < (((obs[1] + (max(0, [ 0.681  0.233 -0.685 -0.634 -2.883  0.383 -0.394 -0.741] *dot* obs[:] + -0.443) * (obs[2] + ((max(0, [-0.371  0.357  1.121 -1.812  0.812 -0.002 -1.291 -1.518] *dot* obs[:] + -0.812) + max(0, [-0.126 -0.143  0.601 -0.696  0.585  0.185 -0.212 -0.672] *dot* obs[:] + -0.892)) + ((1.0 + ((obs[6] * obs[0]) + -0.5)) + (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) * (0.0 + (max(0, [ 0.254 -0.646  0.025  0.26   0.047  0.236 -0.239 -0.482] *dot* obs[:] + -0.592) + max(0, [-0.325 -1.161  0.331  0.255 -1.359 -0.189 -0.151 -1.668] *dot* obs[:] + -0.695))))))))) + -0.5) + 2.0)) then: (if ((((((max(0, [-0.209 -0.364 -0.003  0.044  0.075 -0.026 -0.048  0.028] *dot* obs[:] + -0.394) + (0.5 * (obs[3] * 5.0))) * (obs[7] + ((obs[0] + obs[7]) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < ((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) * 2.0) + (0.0 + 5.0))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -69.3719653090887
(if ((((obs[3] * obs[1]) * -0.5) + max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679)) < (((obs[1] + (max(0, [ 0.681  0.233 -0.685 -0.634 -2.883  0.383 -0.394 -0.741] *dot* obs[:] + -0.443) * (obs[2] + ((max(0, [-0.371  0.357  1.121 -1.812  0.812 -0.002 -1.291 -1.518] *dot* obs[:] + -0.812) + max(0, [-0.126 -0.143  0.601 -0.696  0.585  0.185 -0.212 -0.672] *dot* obs[:] + -0.892)) + ((((max(0, [ 0.529 -0.441  0.189 -1.833 -3.473  0.401 -0.047 -1.141] *dot* obs[:] + -0.365) * -0.5) + (max(0, [-0.229 -0.694 -0.252 -0.248 -0.063 -0.279 -0.873  0.067] *dot* obs[:] + -0.948) * (0.5 * obs[6]))) + ((obs[6] * obs[0]) + -0.5)) + (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) * (0.0 + (max(0, [ 0.254 -0.646  0.025  0.26   0.047  0.236 -0.239 -0.482] *dot* obs[:] + -0.592) + max(0, [-0.325 -1.161  0.331  0.255 -1.359 -0.189 -0.151 -1.668] *dot* obs[:] + -0.695))))))))) + -0.5) + 2.0)) then: (if ((((((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) + (1.0 * (obs[3] * 5.0))) * (obs[7] + ((obs[0] + obs[7]) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < ((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) * 2.0) + (0.0 + 5.0))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -61.414894814235076
(if ((((obs[3] * obs[1]) * -0.5) + max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679)) < (((obs[1] + (max(0, [ 0.681  0.233 -0.685 -0.634 -2.883  0.383 -0.394 -0.741] *dot* obs[:] + -0.443) * max(0, [-0.069 -0.395 -0.01   0.514  0.004  0.094 -0.025 -0.305] *dot* obs[:] + -0.414))) + -0.5) + 2.0)) then: (if ((((((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) + (1.0 * (obs[3] * 5.0))) * (obs[7] + ((obs[0] + obs[7]) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < ((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) * 2.0) + (0.0 + 5.0))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -58.66644590516243
(if ((((obs[3] * obs[1]) * -0.5) + max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679)) < (max(0, [ 0.557  0.578  0.472 -1.62   3.032 -0.717  0.246 -0.822] *dot* obs[:] + -0.959) + 2.0)) then: (if ((((((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) + (1.0 * (obs[3] * 5.0))) * (obs[7] + ((obs[0] + (obs[5] + max(0, [ 0.091 -0.125 -0.1    0.327 -0.085  0.174  0.178 -0.252] *dot* obs[:] + -0.594))) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (obs[3] < ((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) * 2.0) + (0.0 + 5.0))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -56.42038159408538
(if ((((obs[3] * obs[1]) * -0.5) + max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679)) < (max(0, [ 0.557  0.578  0.472 -1.62   3.032 -0.717  0.246 -0.822] *dot* obs[:] + -0.959) + 2.0)) then: (if ((((((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) + (1.0 * ((max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542) + ((max(0, [-0.371  0.357  1.121 -1.812  0.812 -0.002 -1.291 -1.518] *dot* obs[:] + -0.812) * obs[5]) + (obs[4] + (0.5 + (1.0 * (obs[3] + (obs[2] * max(0, [ 0.671 -0.826  0.374 -0.532 -0.148  0.599  0.37   0.626] *dot* obs[:] + -0.391)))))))) * 5.0))) * (obs[7] + ((obs[0] + (obs[5] + max(0, [ 0.091 -0.125 -0.1    0.327 -0.085  0.174  0.178 -0.252] *dot* obs[:] + -0.594))) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (2.0 < (2.0 * max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -54.13136299054881
(if ((((obs[3] * obs[1]) * 0.0) + max(0, [ 1.076 -0.68  -0.83   1.862 -0.458 -0.492 -1.035  0.121] *dot* obs[:] + -0.464)) < (max(0, [ 0.557  0.578  0.472 -1.62   3.032 -0.717  0.246 -0.822] *dot* obs[:] + -0.959) + 2.0)) then: (if ((((((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) + (1.0 * ((max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542) + ((max(0, [-0.371  0.357  1.121 -1.812  0.812 -0.002 -1.291 -1.518] *dot* obs[:] + -0.812) * obs[5]) + (obs[4] + (0.5 + (1.0 * -0.5))))) * 5.0))) * (obs[7] + ((obs[0] + (obs[5] + max(0, [ 0.091 -0.125 -0.1    0.327 -0.085  0.174  0.178 -0.252] *dot* obs[:] + -0.594))) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (2.0 < (2.0 * max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -48.96169388487076
(if ((((obs[3] * obs[1]) * 0.0) + max(0, [ 1.076 -0.68  -0.83   1.862 -0.458 -0.492 -1.035  0.121] *dot* obs[:] + -0.464)) < ((max(0, [-0.827  0.277 -1.24   1.265  1.776  0.442 -0.43  -0.215] *dot* obs[:] + 0.686) + obs[4]) + 2.0)) then: (if ((((((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) + (1.0 * ((max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542) + ((max(0, [-0.371  0.357  1.121 -1.812  0.812 -0.002 -1.291 -1.518] *dot* obs[:] + -0.812) * obs[5]) + (obs[4] + (max(0, [ 0.3   -0.803 -0.06  -0.237  0.064 -0.105 -0.264 -0.371] *dot* obs[:] + -0.607) + (1.0 * -0.5))))) * 5.0))) * (obs[7] + ((obs[0] + (obs[5] + max(0, [ 1.099 -0.689  0.42   0.144  0.217  0.066  0.326 -0.131] *dot* obs[:] + -1.105))) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (2.0 < (2.0 * max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -47.779667024411964
(if ((((obs[1] * obs[1]) * 0.0) + max(0, [ 1.076 -0.68  -0.83   1.862 -0.458 -0.492 -1.035  0.121] *dot* obs[:] + -0.464)) < ((max(0, [ 0.501 -0.567  0.6   -1.497 -0.839  1.048  0.861 -1.105] *dot* obs[:] + -0.778) + obs[4]) + 2.0)) then: (if ((((((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) + (1.0 * ((max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542) + ((max(0, [-0.371  0.357  1.121 -1.812  0.812 -0.002 -1.291 -1.518] *dot* obs[:] + -0.812) * obs[5]) + (obs[4] + (max(0, [ 0.3   -0.803 -0.06  -0.237  0.064 -0.105 -0.264 -0.371] *dot* obs[:] + -0.607) + (max(0, [ 0.167 -0.11   0.048 -0.    -0.765  0.616  0.141  0.27 ] *dot* obs[:] + -0.953) * ((obs[6] + (((max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + 1.0) + (max(0, [-0.924 -0.646 -0.067  0.304  0.128 -0.31   0.256 -1.156] *dot* obs[:] + -1.219) * -0.5)) * max(0, [ 0.086 -0.36   0.063  0.325 -0.035  0.072 -0.497  0.182] *dot* obs[:] + -0.355))) + obs[0])))))) * 5.0))) * (obs[7] + ((obs[0] + (obs[5] + max(0, [ 1.099 -0.689  0.42   0.144  0.217  0.066  0.326 -0.131] *dot* obs[:] + -1.105))) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + obs[6]) < -0.5) then: (if (2.0 < (2.0 * max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -40.01034856757664
(if ((((obs[1] * obs[1]) * (obs[6] * obs[6])) + max(0, [ 1.076 -0.68  -0.83   1.862 -0.458 -0.492 -1.035  0.121] *dot* obs[:] + -0.464)) < ((max(0, [ 0.501 -0.567  0.6   -1.497 -0.839  1.048  0.861 -1.105] *dot* obs[:] + -0.778) + obs[4]) + 2.0)) then: (if ((((((max(0, [ 0.769 -0.651 -0.191 -0.647 -0.157  0.198 -1.086 -0.847] *dot* obs[:] + -0.95) + (1.0 * ((max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542) + ((max(0, [ 0.501 -0.567  0.6   -1.497 -0.839  1.048  0.861 -1.105] *dot* obs[:] + -0.778) * obs[5]) + (obs[4] + (2.0 * obs[4])))) * 5.0))) * (obs[7] + ((obs[0] + (obs[5] + max(0, [ 1.099 -0.689  0.42   0.144  0.217  0.066  0.326 -0.131] *dot* obs[:] + -1.105))) * (obs[5] + max(0, [ 0.293 -0.345 -0.074  0.579  0.062 -0.125 -0.581  0.2  ] *dot* obs[:] + -0.594))))) + obs[3]) + 0.5) + ((max(0, [-0.006 -0.192 -0.265  0.054  0.009 -0.054 -0.351 -0.307] *dot* obs[:] + -0.725) * (max(0, [ 0.022 -0.424  0.021 -0.112  0.151 -0.35  -0.103 -0.281] *dot* obs[:] + -0.337) * ((1.0 + 5.0) + obs[6]))) + 0.0)) < -0.5) then: (if (2.0 < (2.0 * max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217))) then: (if (-0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 3 else: act = 2)) else: act = 3) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))
