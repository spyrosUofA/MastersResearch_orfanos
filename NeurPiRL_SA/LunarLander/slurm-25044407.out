created virtual environment CPython3.6.10.final.0-64 in 8009ms
  creator CPython3Posix(dest=/localscratch/orfanos.25044407.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:178: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -831.4068712140219
(if (obs[2] < obs[1]) then: act = 2 else: act = 3)

Current best:  -755.9271564054065
(if (obs[2] < (2.0 * obs[1])) then: act = 2 else: act = 3)

Current best:  -583.8466917294452
(if (0.5 < max(0, [ 0.004  0.003 -0.009 -0.191 -0.014  0.022 -0.121 -0.324] *dot* obs[:] + -0.38)) then: act = 2 else: act = 3)

Current best:  -535.2870185737729
(if (0.5 < max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766)) then: act = 2 else: act = 3)

Current best:  -131.80081560837579
(if (max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527) < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (2.0 < ((max(0, [ 0.225 -0.403  0.008  0.018 -0.186  0.17  -0.059  0.06 ] *dot* obs[:] + -0.518) + 2.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -129.00041348029626
(if (max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087) < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (2.0 < ((max(0, [ 0.225 -0.403  0.008  0.018 -0.186  0.17  -0.059  0.06 ] *dot* obs[:] + -0.518) + 2.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -125.7813633816749
(if (obs[5] < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (2.0 < ((max(0, [ 0.225 -0.403  0.008  0.018 -0.186  0.17  -0.059  0.06 ] *dot* obs[:] + -0.518) + 2.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -125.4175684117487
(if (obs[5] < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (2.0 < ((max(0, [ 0.225 -0.403  0.008  0.018 -0.186  0.17  -0.059  0.06 ] *dot* obs[:] + -0.518) + 0.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -121.54587427910448
(if (obs[5] < max(0, [-0.305 -0.379 -0.355 -0.292 -0.325  0.267  0.203 -0.009] *dot* obs[:] + -0.839)) then: (if (2.0 < ((max(0, [ 0.225 -0.403  0.008  0.018 -0.186  0.17  -0.059  0.06 ] *dot* obs[:] + -0.518) + 0.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -121.51773387338348
(if (obs[5] < max(0, [-0.305 -0.379 -0.355 -0.292 -0.325  0.267  0.203 -0.009] *dot* obs[:] + -0.839)) then: (if (-0.5 < ((max(0, [ 0.225 -0.403  0.008  0.018 -0.186  0.17  -0.059  0.06 ] *dot* obs[:] + -0.518) + 0.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -120.17215313545057
(if (obs[5] < max(0, [-0.305 -0.379 -0.355 -0.292 -0.325  0.267  0.203 -0.009] *dot* obs[:] + -0.839)) then: (if (-0.5 < ((0.5 + 0.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -117.83466291992896
(if (obs[5] < max(0, [-0.305 -0.379 -0.355 -0.292 -0.325  0.267  0.203 -0.009] *dot* obs[:] + -0.839)) then: (if (max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589) < ((0.5 + 0.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -117.69636433911216
(if (obs[5] < max(0, [ 0.074 -0.714  0.134 -0.143 -0.318 -0.046 -0.613 -0.635] *dot* obs[:] + -0.134)) then: (if (max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589) < ((0.5 + 0.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -115.88389670431728
(if (obs[5] < max(0, [ 0.074 -0.714  0.134 -0.143 -0.318 -0.046 -0.613 -0.635] *dot* obs[:] + -0.134)) then: (if (max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589) < ((0.5 + 0.5) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -111.6692939382481
(if (obs[5] < max(0, [ 0.074 -0.714  0.134 -0.143 -0.318 -0.046 -0.613 -0.635] *dot* obs[:] + -0.134)) then: (if (max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589) < ((obs[1] + 0.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -111.37313237133203
(if (obs[5] < max(0, [ 0.074 -0.714  0.134 -0.143 -0.318 -0.046 -0.613 -0.635] *dot* obs[:] + -0.134)) then: (if (max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589) < ((0.0 + 0.0) + (obs[2] * 2.0))) then: act = 1 else: act = 1) else: act = 0)

Current best:  -110.6484387620885
(if (obs[4] < max(0, [ 0.675 -0.431  0.055  0.44   1.325  0.445 -0.143 -0.293] *dot* obs[:] + -0.11)) then: (if (max(0, [ 0.491 -0.051  0.336  0.373  0.861 -0.764  0.016 -0.412] *dot* obs[:] + -0.962) < obs[4]) then: act = 1 else: (if (-0.5 < max(0, [-0.189  0.238 -1.3   -1.816  1.825  0.518  0.034 -0.043] *dot* obs[:] + -0.029)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -109.82830923019169
(if (obs[4] < max(0, [ 0.675 -0.431  0.055  0.44   1.325  0.445 -0.143 -0.293] *dot* obs[:] + -0.11)) then: (if (max(0, [ 0.1   -0.154  0.045  0.318  0.101 -0.012 -0.01  -0.337] *dot* obs[:] + -0.386) < obs[4]) then: act = 1 else: (if (-0.5 < max(0, [-0.189  0.238 -1.3   -1.816  1.825  0.518  0.034 -0.043] *dot* obs[:] + -0.029)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -108.8449175962372
(if (obs[4] < max(0, [ 0.675 -0.431  0.055  0.44   1.325  0.445 -0.143 -0.293] *dot* obs[:] + -0.11)) then: (if (max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542) < obs[4]) then: act = 1 else: (if (-0.5 < max(0, [-0.189  0.238 -1.3   -1.816  1.825  0.518  0.034 -0.043] *dot* obs[:] + -0.029)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -108.16539798005216
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542) < ((0.0 * 5.0) * 0.0)) then: act = 1 else: (if (-0.5 < max(0, [-0.189  0.238 -1.3   -1.816  1.825  0.518  0.034 -0.043] *dot* obs[:] + -0.029)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -86.30500338830839
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542) < ((0.0 * 5.0) * 0.0)) then: act = 1 else: (if ((((obs[1] + 0.0) * obs[5]) * (obs[1] * ((max(0, [-0.305 -0.379 -0.355 -0.292 -0.325  0.267  0.203 -0.009] *dot* obs[:] + -0.839) + 2.0) + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -86.28094381370043
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < ((0.0 * 5.0) * 0.0)) then: act = 1 else: (if ((((obs[1] + 0.0) * obs[5]) * (obs[1] * ((max(0, [-0.305 -0.379 -0.355 -0.292 -0.325  0.267  0.203 -0.009] *dot* obs[:] + -0.839) + 2.0) + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -78.47656256756657
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < ((0.0 * 5.0) * 0.0)) then: act = 1 else: (if ((((obs[1] + 0.0) * obs[5]) * (obs[1] * ((max(0, [-0.305 -0.379 -0.355 -0.292 -0.325  0.267  0.203 -0.009] *dot* obs[:] + -0.839) + 2.0) + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -78.00395348397723
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < ((0.0 * 5.0) * -0.5)) then: act = 1 else: (if ((((obs[1] + 0.0) * obs[5]) * (obs[1] * ((max(0, [-0.305 -0.379 -0.355 -0.292 -0.325  0.267  0.203 -0.009] *dot* obs[:] + -0.839) + 2.0) + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -67.42046537523194
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < ((0.5 * 5.0) * max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623))) then: act = 2 else: (if ((((obs[1] + 0.0) * obs[5]) * (obs[1] * (obs[7] + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -46.40760690642023
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < ((0.5 * 5.0) * max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623))) then: act = 2 else: (if ((((obs[1] + -0.5) * obs[5]) * (obs[1] * (obs[7] + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -46.07361147225612
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < obs[4]) then: act = 2 else: (if ((((obs[1] + -0.5) * obs[5]) * (obs[1] * (obs[7] + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -43.13623191228631
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) then: act = 2 else: (if ((((obs[1] + -0.5) * obs[5]) * (obs[1] * (obs[5] + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -33.71652386111777
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) then: (if (max(0, [ 0.053 -2.617  0.393 -1.893  0.749  1.546 -0.512 -0.526] *dot* obs[:] + -0.192) < max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766)) then: act = 2 else: (if (0.0 < max(0, [-0.195 -0.635  0.067 -0.544 -0.526 -0.096 -0.01  -0.616] *dot* obs[:] + -0.686)) then: (if (obs[3] < (2.0 * 5.0)) then: (if (max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731) < obs[1]) then: (if (obs[7] < 1.0) then: act = 1 else: act = 2) else: (if (2.0 < obs[3]) then: act = 1 else: act = 2)) else: (if (obs[2] < max(0, [-0.435 -0.234 -0.285 -0.017  0.283 -0.24   0.363  0.259] *dot* obs[:] + -0.642)) then: act = 0 else: (if (max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087) < max(0, [ 1.586 -0.423  0.267 -1.072  0.022 -2.24  -0.374 -0.29 ] *dot* obs[:] + -0.322)) then: act = 1 else: act = 3))) else: act = 0)) else: (if ((((obs[1] + -0.5) * obs[5]) * (obs[1] * (obs[5] + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -31.9021664302993
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) then: (if (max(0, [ 0.053 -2.617  0.393 -1.893  0.749  1.546 -0.512 -0.526] *dot* obs[:] + -0.192) < max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766)) then: act = 2 else: (if (0.0 < max(0, [-0.195 -0.635  0.067 -0.544 -0.526 -0.096 -0.01  -0.616] *dot* obs[:] + -0.686)) then: (if (obs[3] < (2.0 * 5.0)) then: (if (max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731) < obs[1]) then: (if (obs[7] < 1.0) then: act = 1 else: act = 2) else: (if (2.0 < obs[3]) then: act = 1 else: act = 2)) else: (if (obs[7] < max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738)) then: act = 0 else: (if (max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087) < max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) then: act = 1 else: act = 3))) else: act = 0)) else: (if ((((obs[1] + -0.5) * obs[5]) * (obs[1] * (obs[5] + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -28.464461174727738
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) then: (if (max(0, [ 0.074 -0.714  0.134 -0.143 -0.318 -0.046 -0.613 -0.635] *dot* obs[:] + -0.134) < 0.0) then: act = 2 else: (if (0.0 < max(0, [-0.195 -0.635  0.067 -0.544 -0.526 -0.096 -0.01  -0.616] *dot* obs[:] + -0.686)) then: (if (obs[3] < (2.0 * 5.0)) then: (if (max(0, [ 0.225 -0.403  0.008  0.018 -0.186  0.17  -0.059  0.06 ] *dot* obs[:] + -0.518) < obs[1]) then: (if (obs[7] < 1.0) then: act = 1 else: (if ((max(0, [-0.72  -0.08   0.052  0.045  0.273  0.16  -0.34   0.116] *dot* obs[:] + -0.814) + max(0, [-0.079  0.249  0.605 -1.737  0.138 -0.324 -0.829 -0.923] *dot* obs[:] + -0.762)) < max(0, [ 0.735 -2.09  -0.072 -0.118 -1.658  0.643  0.183 -0.492] *dot* obs[:] + -0.561)) then: act = 3 else: (if (0.5 < obs[1]) then: (if ((max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597) * max(0, [ 0.243 -0.523 -0.306  0.309 -0.263  0.184 -0.303 -0.183] *dot* obs[:] + -0.489)) < (max(0, [ 1.466 -0.86   0.592  0.708  0.906  0.165 -0.517  0.406] *dot* obs[:] + -1.314) + 2.0)) then: (if (max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847) < 5.0) then: (if (5.0 < obs[2]) then: act = 2 else: act = 2) else: act = 3) else: act = 3) else: act = 0))) else: (if (2.0 < obs[3]) then: act = 1 else: act = 2)) else: (if (obs[7] < max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738)) then: act = 0 else: (if (max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087) < max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) then: act = 1 else: act = 3))) else: act = 0)) else: (if ((((obs[1] + -0.5) * obs[5]) * (obs[1] * (obs[5] + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)

Current best:  -26.946261274013978
(if (obs[4] < max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) then: (if (max(0, [ 0.074 -0.714  0.134 -0.143 -0.318 -0.046 -0.613 -0.635] *dot* obs[:] + -0.134) < 0.0) then: act = 2 else: (if (0.0 < max(0, [-0.195 -0.635  0.067 -0.544 -0.526 -0.096 -0.01  -0.616] *dot* obs[:] + -0.686)) then: (if (obs[3] < (2.0 * 2.0)) then: (if (max(0, [ 0.225 -0.403  0.008  0.018 -0.186  0.17  -0.059  0.06 ] *dot* obs[:] + -0.518) < obs[1]) then: (if (obs[7] < 1.0) then: act = 1 else: (if ((max(0, [-0.72  -0.08   0.052  0.045  0.273  0.16  -0.34   0.116] *dot* obs[:] + -0.814) + max(0, [-0.079  0.249  0.605 -1.737  0.138 -0.324 -0.829 -0.923] *dot* obs[:] + -0.762)) < max(0, [ 1.466 -0.86   0.592  0.708  0.906  0.165 -0.517  0.406] *dot* obs[:] + -1.314)) then: act = 3 else: (if (0.5 < obs[1]) then: (if ((((obs[6] + obs[6]) + ((((0.5 + 1.0) + (1.0 * max(0, [-0.366 -0.616  0.111  0.314  0.413  0.077  0.187  0.015] *dot* obs[:] + -0.645))) + (5.0 + 5.0)) * (1.0 * (5.0 * obs[3])))) * max(0, [ 0.243 -0.523 -0.306  0.309 -0.263  0.184 -0.303 -0.183] *dot* obs[:] + -0.489)) < (max(0, [ 1.466 -0.86   0.592  0.708  0.906  0.165 -0.517  0.406] *dot* obs[:] + -1.314) + 2.0)) then: (if (max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847) < 5.0) then: (if (5.0 < obs[2]) then: act = 2 else: act = 2) else: act = 1) else: act = 3) else: act = 0))) else: (if (2.0 < obs[3]) then: act = 1 else: act = 2)) else: (if (obs[7] < max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738)) then: act = 0 else: (if (max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087) < max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) then: act = 1 else: act = 3))) else: act = 0)) else: (if ((((obs[1] + -0.5) * obs[5]) * (obs[1] * (obs[5] + (1.0 + max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943))))) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (1.0 < obs[5]) then: act = 0 else: act = 1) else: act = 2)) else: act = 3)
