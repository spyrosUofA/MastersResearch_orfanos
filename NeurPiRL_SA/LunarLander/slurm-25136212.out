created virtual environment CPython3.6.10.final.0-64 in 14760ms
  creator CPython3Posix(dest=/localscratch/orfanos.25136212.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -756.2708491483529
(if (((0.0 * obs[7]) + max(0, [-0.223 -2.023  0.129 -1.464  0.113  1.205 -0.438  0.24 ] *dot* obs[:] + -0.591)) < 0.9450232779108508) then: (if (0.05413561749105775 < max(0, [ 0.426 -0.33   0.474 -0.042 -0.216  0.557 -0.129 -0.589] *dot* obs[:] + -0.638)) then: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[6]) then: (if (obs[3] < max(0, [ 0.21  -0.901  0.99  -0.965 -1.097 -1.932  0.219  0.092] *dot* obs[:] + -0.587)) then: act = 1 else: act = 1) else: (if (1.0082359371429213 < -0.032331691263639356) then: act = 1 else: act = 2)) else: act = 2) else: (if ((4.988026455855555 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.5743707767219447 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -612.2175624669228
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.9450232779108508) then: (if (0.05413561749105775 < max(0, [ 0.426 -0.33   0.474 -0.042 -0.216  0.557 -0.129 -0.589] *dot* obs[:] + -0.638)) then: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[6]) then: (if (obs[3] < max(0, [ 0.21  -0.901  0.99  -0.965 -1.097 -1.932  0.219  0.092] *dot* obs[:] + -0.587)) then: act = 1 else: act = 1) else: (if (1.0082359371429213 < -0.032331691263639356) then: act = 1 else: act = 2)) else: act = 2) else: (if ((4.988026455855555 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.5743707767219447 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -551.9081632439381
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [ 0.127 -0.271 -0.036 -0.074 -0.195  0.196 -0.21   0.035] *dot* obs[:] + -0.417)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 1.0601957171389507) then: (if (0.050834025389004445 < max(0, [ 0.426 -0.33   0.474 -0.042 -0.216  0.557 -0.129 -0.589] *dot* obs[:] + -0.638)) then: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[6]) then: (if (obs[3] < max(0, [ 0.21  -0.901  0.99  -0.965 -1.097 -1.932  0.219  0.092] *dot* obs[:] + -0.587)) then: act = 1 else: act = 1) else: (if (0.8808616412950886 < -0.14048488068873916) then: act = 1 else: act = 2)) else: act = 2) else: (if ((4.879429020530273 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.5415839750552057 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -111.10309471666687
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [ 0.127 -0.271 -0.036 -0.074 -0.195  0.196 -0.21   0.035] *dot* obs[:] + -0.417)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.8067341754181273) then: act = 0 else: (if ((4.960771625805959 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.744532253526669 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -82.32495377962232
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [ 0.127 -0.271 -0.036 -0.074 -0.195  0.196 -0.21   0.035] *dot* obs[:] + -0.417)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.6618617528225424) then: act = 0 else: (if ((2.0 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.8265644399827363 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -79.87219759248495
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [ 0.127 -0.271 -0.036 -0.074 -0.195  0.196 -0.21   0.035] *dot* obs[:] + -0.417)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.7094193479008118) then: act = 0 else: (if ((1.9279504900005973 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (-0.5 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-1.0803433008499699 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -78.93672066368008
(if (((0.0 * obs[7]) + ((obs[4] * max(0, [ 0.127 -0.271 -0.036 -0.074 -0.195  0.196 -0.21   0.035] *dot* obs[:] + -0.417)) * max(0, [-0.062 -0.136 -0.137 -0.087 -0.257  0.151 -0.153 -0.258] *dot* obs[:] + -0.515))) < 0.3885307187366125) then: act = 0 else: (if ((-0.12452312054638542 + max(0, [-0.104 -0.835  0.182 -0.081  0.207  0.207 -0.014 -0.245] *dot* obs[:] + -0.124)) < obs[4]) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-2.673439884187074 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -76.46424787077017
(if (((0.0 * obs[7]) + ((obs[4] * max(0, [ 0.127 -0.271 -0.036 -0.074 -0.195  0.196 -0.21   0.035] *dot* obs[:] + -0.417)) * max(0, [ 0.221  0.832 -0.007 -1.561  0.526 -0.347 -0.774 -0.354] *dot* obs[:] + -1.045))) < 0.2242472312331878) then: act = 0 else: (if ((0.2943874710852143 + max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501)) < obs[4]) then: (if (max(0, [-0.048 -0.539  0.164 -0.15   0.368 -0.176 -0.18   0.147] *dot* obs[:] + -0.695) < ((max(0, [ 0.064 -0.515 -0.236  0.805 -0.286 -0.009 -0.201 -0.339] *dot* obs[:] + -0.412) + max(0, [ 0.096 -0.582  0.075  0.181 -0.274 -0.308  0.217 -0.379] *dot* obs[:] + -0.547)) * obs[4])) then: act = 0 else: (if (((1.0 * max(0, [ 0.367 -0.66  -0.349  0.429 -0.179  0.066 -0.317  0.01 ] *dot* obs[:] + -0.601)) + max(0, [-0.77   0.204 -0.688  1.48   1.481  0.279 -0.644 -0.081] *dot* obs[:] + -0.498)) < max(0, [ 0.064 -0.515 -0.236  0.805 -0.286 -0.009 -0.201 -0.339] *dot* obs[:] + -0.412)) then: act = 2 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < obs[5]) then: act = 3 else: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[0]) then: act = 3 else: act = 3)))) else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-3.577093045034615 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -62.99951464353103
(if (((0.0 * obs[7]) + ((obs[4] * 1.0) * max(0, [-0.005  0.05  -0.231  0.522  0.044  0.466 -0.172 -0.075] *dot* obs[:] + -0.672))) < 0.12987600660599652) then: act = 0 else: (if (max(0, [-1.365  0.405 -1.177  1.144  2.059  1.234 -0.83  -0.523] *dot* obs[:] + 0.471) < max(0, [-0.33  -0.789  0.059  0.245  0.236  0.17  -0.315  0.149] *dot* obs[:] + -0.64)) then: (if (max(0, [-0.048 -0.539  0.164 -0.15   0.368 -0.176 -0.18   0.147] *dot* obs[:] + -0.695) < ((max(0, [ 0.064 -0.515 -0.236  0.805 -0.286 -0.009 -0.201 -0.339] *dot* obs[:] + -0.412) + max(0, [ 0.096 -0.582  0.075  0.181 -0.274 -0.308  0.217 -0.379] *dot* obs[:] + -0.547)) * obs[4])) then: act = 0 else: (if (((1.0 * max(0, [ 0.367 -0.66  -0.349  0.429 -0.179  0.066 -0.317  0.01 ] *dot* obs[:] + -0.601)) + max(0, [-0.77   0.204 -0.688  1.48   1.481  0.279 -0.644 -0.081] *dot* obs[:] + -0.498)) < max(0, [ 0.064 -0.515 -0.236  0.805 -0.286 -0.009 -0.201 -0.339] *dot* obs[:] + -0.412)) then: act = 2 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < obs[5]) then: act = 3 else: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[0]) then: act = 3 else: act = 3)))) else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-3.6225010339599155 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -48.15704313071656
(if (((0.0 * obs[4]) + ((obs[4] * 1.0) * max(0, [-0.005  0.05  -0.231  0.522  0.044  0.466 -0.172 -0.075] *dot* obs[:] + -0.672))) < 0.3066628381557937) then: act = 0 else: (if (max(0, [-1.365  0.405 -1.177  1.144  2.059  1.234 -0.83  -0.523] *dot* obs[:] + 0.471) < max(0, [-0.33  -0.789  0.059  0.245  0.236  0.17  -0.315  0.149] *dot* obs[:] + -0.64)) then: (if (max(0, [-0.048 -0.539  0.164 -0.15   0.368 -0.176 -0.18   0.147] *dot* obs[:] + -0.695) < ((max(0, [ 0.064 -0.515 -0.236  0.805 -0.286 -0.009 -0.201 -0.339] *dot* obs[:] + -0.412) + max(0, [ 0.096 -0.582  0.075  0.181 -0.274 -0.308  0.217 -0.379] *dot* obs[:] + -0.547)) * obs[4])) then: act = 0 else: (if (((1.0 * max(0, [ 0.367 -0.66  -0.349  0.429 -0.179  0.066 -0.317  0.01 ] *dot* obs[:] + -0.601)) + max(0, [-0.77   0.204 -0.688  1.48   1.481  0.279 -0.644 -0.081] *dot* obs[:] + -0.498)) < max(0, [ 0.064 -0.515 -0.236  0.805 -0.286 -0.009 -0.201 -0.339] *dot* obs[:] + -0.412)) then: act = 2 else: (if (1.977919554605927 < -0.6623433270959599) then: (if ((obs[5] + (((1.0 * max(0, [-0.167 -0.202  0.127 -0.179 -0.014  0.164 -0.095 -0.226] *dot* obs[:] + -0.508)) + obs[4]) + -0.5)) < (obs[0] * 5.0)) then: act = 1 else: (if (max(0, [-0.165  0.414  0.39  -0.463 -1.034 -0.615 -1.379 -0.8  ] *dot* obs[:] + -0.832) < (5.0 * obs[0])) then: (if (obs[0] < obs[5]) then: act = 3 else: (if (0.984751904806778 < obs[3]) then: act = 3 else: act = 0)) else: (if (max(0, [-1.365  0.405 -1.177  1.144  2.059  1.234 -0.83  -0.523] *dot* obs[:] + 0.471) < obs[0]) then: (if (-0.5356401109916182 < obs[4]) then: act = 3 else: act = 2) else: act = 0))) else: act = 2))) else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-4.887920270581143 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -46.86272617208682
(if (((0.0 * obs[3]) + (obs[0] + max(0, [ 0.577 -1.28   0.465 -1.814  1.077 -0.728 -1.445  0.897] *dot* obs[:] + 0.175))) < 2.0112669438855697) then: act = 0 else: (if (max(0, [-1.365  0.405 -1.177  1.144  2.059  1.234 -0.83  -0.523] *dot* obs[:] + 0.471) < max(0, [-0.33  -0.789  0.059  0.245  0.236  0.17  -0.315  0.149] *dot* obs[:] + -0.64)) then: (if (max(0, [-0.186 -0.195  0.187  0.184 -0.094 -0.136  0.201  0.419] *dot* obs[:] + -0.828) < ((max(0, [ 0.064 -0.515 -0.236  0.805 -0.286 -0.009 -0.201 -0.339] *dot* obs[:] + -0.412) + max(0, [ 0.096 -0.582  0.075  0.181 -0.274 -0.308  0.217 -0.379] *dot* obs[:] + -0.547)) * obs[4])) then: act = 0 else: (if (4.855640067265879 < (5.203179586513778 + (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) + max(0, [-0.053 -0.855 -0.101 -0.355  0.026  0.285 -0.4   -0.291] *dot* obs[:] + -0.204)))) then: act = 2 else: (if (1.6892828728637963 < 0.9478865504341358) then: (if ((obs[5] + (((1.0 * max(0, [-0.167 -0.202  0.127 -0.179 -0.014  0.164 -0.095 -0.226] *dot* obs[:] + -0.508)) + obs[4]) + 0.004973990631992435)) < (max(0, [ 0.158 -0.176  0.23   0.229  0.146 -0.086 -0.355  0.058] *dot* obs[:] + -0.586) * obs[2])) then: act = 1 else: (if (max(0, [-0.165  0.414  0.39  -0.463 -1.034 -0.615 -1.379 -0.8  ] *dot* obs[:] + -0.832) < (5.0 * obs[0])) then: act = 3 else: (if (max(0, [-1.365  0.405 -1.177  1.144  2.059  1.234 -0.83  -0.523] *dot* obs[:] + 0.471) < obs[0]) then: (if (0.1102257588282877 < obs[4]) then: act = 3 else: act = 2) else: act = 0))) else: act = 2))) else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-4.147663151221747 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -41.73744193267989
(if (((0.0 * obs[3]) + (obs[0] + max(0, [ 0.577 -1.28   0.465 -1.814  1.077 -0.728 -1.445  0.897] *dot* obs[:] + 0.175))) < 2.063568879435288) then: act = 0 else: act = 2)

Current best:  -40.65044566123171
(if (((0.0 * obs[3]) + ((max(0, [-0.167 -0.202  0.127 -0.179 -0.014  0.164 -0.095 -0.226] *dot* obs[:] + -0.508) + max(0, [-0.079 -0.141  0.115  0.382 -0.454 -0.167 -0.28  -0.531] *dot* obs[:] + -0.184)) + max(0, [ 0.577 -1.28   0.465 -1.814  1.077 -0.728 -1.445  0.897] *dot* obs[:] + 0.175))) < 1.905901524220788) then: act = 0 else: act = 2)

Current best:  -37.05648603359198
(if (((0.0 * obs[1]) + ((max(0, [-0.167 -0.202  0.127 -0.179 -0.014  0.164 -0.095 -0.226] *dot* obs[:] + -0.508) + max(0, [-0.079 -0.141  0.115  0.382 -0.454 -0.167 -0.28  -0.531] *dot* obs[:] + -0.184)) + max(0, [ 0.577 -1.28   0.465 -1.814  1.077 -0.728 -1.445  0.897] *dot* obs[:] + 0.175))) < 1.6057777699062141) then: act = 0 else: act = 2)

Current best:  -26.467929044859385
(if (((0.0 * obs[1]) + ((max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577) + max(0, [-0.079 -0.141  0.115  0.382 -0.454 -0.167 -0.28  -0.531] *dot* obs[:] + -0.184)) + max(0, [ 0.577 -1.28   0.465 -1.814  1.077 -0.728 -1.445  0.897] *dot* obs[:] + 0.175))) < 1.7589053879222851) then: act = 0 else: act = 2)

Current best:  -22.472941546641447
(if ((max(0, [ 0.105 -0.498 -0.18   0.15  -0.254 -0.056 -0.134  0.048] *dot* obs[:] + -0.563) + ((max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577) + max(0, [-0.079 -0.141  0.115  0.382 -0.454 -0.167 -0.28  -0.531] *dot* obs[:] + -0.184)) + max(0, [ 0.577 -1.28   0.465 -1.814  1.077 -0.728 -1.445  0.897] *dot* obs[:] + 0.175))) < 0.6787667028945583) then: act = 0 else: act = 2)

Current best:  13.613841646987186
(if ((max(0, [ 0.105 -0.498 -0.18   0.15  -0.254 -0.056 -0.134  0.048] *dot* obs[:] + -0.563) + ((max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577) + obs[2]) + max(0, [ 0.577 -1.28   0.465 -1.814  1.077 -0.728 -1.445  0.897] *dot* obs[:] + 0.175))) < 0.42362698532431603) then: act = 0 else: act = 2)

Current best:  24.275773023033206
(if ((max(0, [ 0.105 -0.498 -0.18   0.15  -0.254 -0.056 -0.134  0.048] *dot* obs[:] + -0.563) + ((max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577) + obs[5]) + max(0, [ 0.577 -1.28   0.465 -1.814  1.077 -0.728 -1.445  0.897] *dot* obs[:] + 0.175))) < 1.069593807111982) then: act = 0 else: act = 2)

Current best:  60.178037463941905
(if (((((1.0 + max(0, [-0.022 -0.233 -0.047  0.305 -0.224  0.124 -0.535  0.146] *dot* obs[:] + -0.335)) + max(0, [ 0.073 -0.765 -0.109 -0.133  0.154 -0.125 -0.59  -0.43 ] *dot* obs[:] + -0.551)) * 2.0) * max(0, [ 0.577 -1.28   0.465 -1.814  1.077 -0.728 -1.445  0.897] *dot* obs[:] + 0.175)) < 1.0350920781782063) then: act = 0 else: act = 2)
