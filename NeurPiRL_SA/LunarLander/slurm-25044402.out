created virtual environment CPython3.6.10.final.0-64 in 7815ms
  creator CPython3Posix(dest=/localscratch/orfanos.25044402.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:178: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -138.48293434857607
(if (2.0 < ((max(0, [-0.32  -0.725  1.033  0.324 -1.926 -0.173 -0.525 -0.536] *dot* obs[:] + 0.086) + obs[0]) * (5.0 + obs[6]))) then: act = 1 else: act = 0)

Current best:  -124.72469770978356
(if (2.0 < ((max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) + obs[0]) * (5.0 + obs[6]))) then: act = 1 else: act = 0)

Current best:  -123.86847435396905
(if ((1.0 * ((obs[6] * 0.5) + obs[1])) < (obs[2] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -117.5672365708354
(if ((1.0 * ((obs[1] * 0.5) + obs[1])) < (obs[2] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -115.82402176463638
(if ((1.0 * ((obs[1] * 0.5) + ((obs[5] * max(0, [ 0.28   0.299 -0.541 -0.898 -2.471 -0.758 -0.491 -0.782] *dot* obs[:] + -1.099)) * ((obs[7] * max(0, [ 0.043 -0.142 -0.485 -0.185  0.288 -0.337 -0.709 -0.028] *dot* obs[:] + -0.63)) + 0.5)))) < (obs[2] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -114.88907347464873
(if ((1.0 * (max(0, [ 0.043 -0.349  0.308  0.033 -0.306 -0.32  -0.084 -0.193] *dot* obs[:] + -0.663) + ((obs[5] * max(0, [ 0.28   0.299 -0.541 -0.898 -2.471 -0.758 -0.491 -0.782] *dot* obs[:] + -1.099)) * ((obs[7] * max(0, [ 0.043 -0.142 -0.485 -0.185  0.288 -0.337 -0.709 -0.028] *dot* obs[:] + -0.63)) + 0.5)))) < (obs[2] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -114.81760929855734
(if ((1.0 * (max(0, [ 0.735 -2.09  -0.072 -0.118 -1.658  0.643  0.183 -0.492] *dot* obs[:] + -0.561) + ((obs[5] * max(0, [ 0.28   0.299 -0.541 -0.898 -2.471 -0.758 -0.491 -0.782] *dot* obs[:] + -1.099)) * ((obs[7] * max(0, [ 0.043 -0.142 -0.485 -0.185  0.288 -0.337 -0.709 -0.028] *dot* obs[:] + -0.63)) + 2.0)))) < (obs[2] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -111.74978442761389
(if ((1.0 * (obs[5] + ((obs[5] * max(0, [ 0.28   0.299 -0.541 -0.898 -2.471 -0.758 -0.491 -0.782] *dot* obs[:] + -1.099)) * ((obs[7] * max(0, [ 0.043 -0.142 -0.485 -0.185  0.288 -0.337 -0.709 -0.028] *dot* obs[:] + -0.63)) + 2.0)))) < (obs[2] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -111.28011288326074
(if ((1.0 * (obs[5] + ((obs[4] * max(0, [ 0.708  0.298 -0.21  -2.52  -1.391 -0.87  -1.021 -0.913] *dot* obs[:] + -0.482)) * ((obs[7] * max(0, [ 0.043 -0.142 -0.485 -0.185  0.288 -0.337 -0.709 -0.028] *dot* obs[:] + -0.63)) + 2.0)))) < (obs[2] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -110.58091273412727
(if ((1.0 * (obs[5] + (max(0, [ 0.133 -0.226 -0.154  0.126 -0.246 -0.121 -0.214 -0.157] *dot* obs[:] + -0.79) * ((obs[7] * obs[4]) + 2.0)))) < (obs[2] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -110.5594809892094
(if ((1.0 * (obs[5] + (max(0, [ 0.133 -0.226 -0.154  0.126 -0.246 -0.121 -0.214 -0.157] *dot* obs[:] + -0.79) * (obs[1] + obs[0])))) < (obs[2] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -108.65170257577591
(if ((5.0 * (obs[5] + (max(0, [ 0.133 -0.226 -0.154  0.126 -0.246 -0.121 -0.214 -0.157] *dot* obs[:] + -0.79) * (obs[1] + -0.5)))) < (max(0, [ 0.126 -0.331  0.242  0.119  0.147 -0.538 -0.261 -0.27 ] *dot* obs[:] + -0.528) * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -105.99868048229303
(if ((5.0 * (obs[5] + (max(0, [ 0.133 -0.226 -0.154  0.126 -0.246 -0.121 -0.214 -0.157] *dot* obs[:] + -0.79) * (max(0, [ 0.1   -0.154  0.045  0.318  0.101 -0.012 -0.01  -0.337] *dot* obs[:] + -0.386) * obs[1])))) < (obs[7] * (-0.5 * max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575)))) then: act = 1 else: act = 0)

Current best:  -101.15734679678148
(if (-0.5 < (0.0 + (obs[1] * ((obs[3] + 1.0) * 1.0)))) then: (if ((2.0 * obs[2]) < (obs[6] + max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498))) then: (if (obs[0] < max(0, [-1.09  -0.27  -1.141  0.882  2.474 -0.313 -0.819 -0.138] *dot* obs[:] + -0.551)) then: act = 0 else: (if (0.0 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -99.69585368331227
(if (-0.5 < (0.0 + (obs[1] * ((obs[2] + 1.0) * 1.0)))) then: (if ((2.0 * obs[2]) < (obs[6] + max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498))) then: (if (obs[0] < max(0, [-1.09  -0.27  -1.141  0.882  2.474 -0.313 -0.819 -0.138] *dot* obs[:] + -0.551)) then: act = 0 else: (if (0.0 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -84.72243739055078
(if (-0.5 < (0.0 + (obs[4] * ((obs[2] + 1.0) * 1.0)))) then: (if ((2.0 * obs[2]) < (obs[6] + max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498))) then: (if (obs[0] < max(0, [-1.09  -0.27  -1.141  0.882  2.474 -0.313 -0.819 -0.138] *dot* obs[:] + -0.551)) then: act = 0 else: (if (0.0 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -83.34242727727704
(if (-0.5 < (2.0 + (obs[4] * ((obs[2] + 1.0) * 1.0)))) then: (if ((2.0 * obs[2]) < (obs[6] + max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498))) then: (if (obs[0] < max(0, [-1.09  -0.27  -1.141  0.882  2.474 -0.313 -0.819 -0.138] *dot* obs[:] + -0.551)) then: act = 0 else: (if (0.0 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -64.92049469731609
(if (-0.5 < (2.0 + (obs[4] * ((obs[3] + 1.0) * 1.0)))) then: (if ((2.0 * obs[2]) < (obs[6] + max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498))) then: (if (obs[7] < max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) then: act = 0 else: (if (0.0 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -50.886302591161865
(if (-0.5 < (2.0 + (obs[4] * (5.0 * 1.0)))) then: (if ((2.0 * obs[2]) < (obs[6] + max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498))) then: (if (obs[7] < max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) then: act = 0 else: (if (0.0 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -50.01685651458869
(if (-0.5 < (2.0 + (obs[4] * (5.0 * 1.0)))) then: (if ((2.0 * obs[2]) < ((max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) + 0.0)) then: (if (obs[7] < max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) then: act = 0 else: (if (0.0 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -46.23191767510527
(if (-0.5 < (2.0 + (obs[4] * (5.0 * 1.0)))) then: (if ((2.0 * obs[2]) < ((max(0, [-0.52  -0.263 -1.4    0.616  2.876 -0.242 -0.806  0.255] *dot* obs[:] + -0.423) + max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) + 0.0)) then: (if (obs[7] < max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) then: act = 0 else: (if (0.0 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -45.18430397787802
(if (-0.5 < ((((max(0, [-0.095  0.236 -0.475 -0.49   0.632  0.737 -0.322 -0.103] *dot* obs[:] + -0.874) * (obs[1] * 0.0)) * 0.0) + 2.0) + (obs[4] * -0.5))) then: (if ((2.0 * obs[2]) < ((max(0, [-0.52  -0.263 -1.4    0.616  2.876 -0.242 -0.806  0.255] *dot* obs[:] + -0.423) + max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) + 0.0)) then: (if (obs[7] < max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) then: act = 0 else: (if (0.5 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -39.761795764069944
(if (-0.5 < ((((max(0, [-0.095  0.236 -0.475 -0.49   0.632  0.737 -0.322 -0.103] *dot* obs[:] + -0.874) * (obs[1] * 0.0)) * 0.0) + 2.0) + (obs[4] * -0.5))) then: (if ((2.0 * obs[2]) < ((max(0, [-0.52  -0.263 -1.4    0.616  2.876 -0.242 -0.806  0.255] *dot* obs[:] + -0.423) + max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) + 0.0)) then: (if (obs[7] < max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) then: (if (((5.0 * 0.0) * obs[4]) < obs[5]) then: (if ((-0.5 + obs[3]) < max(0, [ 0.261 -0.436  0.012  0.478  0.065 -0.196  0.049 -0.257] *dot* obs[:] + -0.779)) then: (if (5.0 < (obs[3] * max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527))) then: (if (-0.5 < obs[0]) then: act = 2 else: act = 0) else: (if (0.0 < obs[4]) then: act = 3 else: (if (obs[3] < max(0, [-0.299 -0.298  0.115  0.006 -0.003 -0.064 -0.376 -0.207] *dot* obs[:] + -0.374)) then: act = 2 else: act = 3))) else: (if (5.0 < 5.0) then: act = 2 else: (if (obs[7] < 1.0) then: (if (max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354) < 1.0) then: act = 1 else: act = 2) else: (if (2.0 < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 3 else: act = 2)))) else: (if (obs[4] < obs[4]) then: act = 0 else: (if ((2.0 * -0.5) < (2.0 + max(0, [ 0.109 -1.123  0.36   0.303 -0.925 -1.108 -0.37  -0.816] *dot* obs[:] + -0.098))) then: act = 1 else: (if (5.0 < max(0, [-0.72  -0.08   0.052  0.045  0.273  0.16  -0.34   0.116] *dot* obs[:] + -0.814)) then: act = 3 else: act = 1)))) else: (if (0.5 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -32.32529002448278
(if (-0.5 < ((((max(0, [-0.095  0.236 -0.475 -0.49   0.632  0.737 -0.322 -0.103] *dot* obs[:] + -0.874) * (obs[1] * 0.0)) * 0.0) + 2.0) + (obs[4] * -0.5))) then: (if ((2.0 * obs[2]) < ((max(0, [-0.52  -0.263 -1.4    0.616  2.876 -0.242 -0.806  0.255] *dot* obs[:] + -0.423) + max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) + 0.0)) then: (if (obs[7] < max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) then: (if (((5.0 * 0.0) * obs[4]) < obs[5]) then: (if ((-0.5 + obs[3]) < max(0, [ 0.261 -0.436  0.012  0.478  0.065 -0.196  0.049 -0.257] *dot* obs[:] + -0.779)) then: (if (5.0 < (obs[3] * max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527))) then: (if (-0.5 < obs[0]) then: act = 2 else: act = 0) else: (if (0.0 < obs[4]) then: act = 3 else: (if (obs[3] < max(0, [-0.299 -0.298  0.115  0.006 -0.003 -0.064 -0.376 -0.207] *dot* obs[:] + -0.374)) then: act = 2 else: act = 3))) else: (if (5.0 < 5.0) then: act = 2 else: (if (obs[7] < 1.0) then: (if (max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354) < 1.0) then: act = 1 else: (if (0.5 < obs[0]) then: act = 2 else: act = 1)) else: (if (2.0 < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 3 else: act = 2)))) else: (if (obs[4] < obs[4]) then: act = 0 else: (if ((2.0 * -0.5) < (2.0 + max(0, [ 0.109 -1.123  0.36   0.303 -0.925 -1.108 -0.37  -0.816] *dot* obs[:] + -0.098))) then: act = 1 else: (if (5.0 < max(0, [-0.72  -0.08   0.052  0.045  0.273  0.16  -0.34   0.116] *dot* obs[:] + -0.814)) then: act = 3 else: act = 1)))) else: (if (0.5 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)

Current best:  -23.650882099236888
(if (-0.5 < ((((max(0, [-0.095  0.236 -0.475 -0.49   0.632  0.737 -0.322 -0.103] *dot* obs[:] + -0.874) * (obs[1] * 0.0)) * 0.0) + 5.0) + (obs[4] * -0.5))) then: (if ((2.0 * obs[2]) < ((max(0, [-0.52  -0.263 -1.4    0.616  2.876 -0.242 -0.806  0.255] *dot* obs[:] + -0.423) + max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) + 0.0)) then: (if (obs[7] < max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) then: (if (((5.0 * 0.0) * obs[4]) < obs[5]) then: (if ((-0.5 + obs[3]) < max(0, [ 0.261 -0.436  0.012  0.478  0.065 -0.196  0.049 -0.257] *dot* obs[:] + -0.779)) then: (if (5.0 < (obs[3] * max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527))) then: (if (-0.5 < obs[0]) then: act = 2 else: act = 0) else: (if (0.0 < obs[4]) then: act = 3 else: (if (obs[3] < max(0, [-0.299 -0.298  0.115  0.006 -0.003 -0.064 -0.376 -0.207] *dot* obs[:] + -0.374)) then: act = 2 else: act = 3))) else: (if (5.0 < 5.0) then: act = 2 else: (if (obs[7] < 1.0) then: (if (max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354) < 1.0) then: act = 1 else: (if (0.5 < obs[0]) then: act = 2 else: act = 1)) else: (if (2.0 < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 3 else: act = 2)))) else: (if (obs[4] < obs[4]) then: act = 0 else: (if ((2.0 * -0.5) < (2.0 + max(0, [ 0.109 -1.123  0.36   0.303 -0.925 -1.108 -0.37  -0.816] *dot* obs[:] + -0.098))) then: act = 1 else: (if (5.0 < max(0, [-0.72  -0.08   0.052  0.045  0.273  0.16  -0.34   0.116] *dot* obs[:] + -0.814)) then: act = 3 else: act = 1)))) else: (if (0.5 < obs[2]) then: act = 2 else: act = 2)) else: (if (max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) < max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) then: act = 2 else: (if (obs[2] < obs[7]) then: act = 1 else: act = 0))) else: act = 0)
