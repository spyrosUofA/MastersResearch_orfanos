created virtual environment CPython3.6.10.final.0-64 in 19285ms
  creator CPython3Posix(dest=/localscratch/orfanos.25130018.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -613.8189884406689
act = 1

Current best:  -564.5952330748783
act = 3

Current best:  -168.80644462056077
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * max(0, [ 0.008 -0.199  0.319  0.137 -0.039 -0.297 -0.563 -0.503] *dot* obs[:] + -0.837)) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -164.33250486077054
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -126.68567392457084
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -116.34010442709315
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[1]) then: (if (-0.5 < max(0, [ 0.136 -0.733  0.336  0.111  0.319 -0.13  -0.415 -0.363] *dot* obs[:] + -0.844)) then: act = 3 else: act = 0) else: (if (((obs[3] * max(0, [-0.132 -0.972  0.705  0.54  -0.108  0.633 -0.889  0.352] *dot* obs[:] + -0.713)) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.0 + obs[5])) then: act = 2 else: (if ((5.0 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.5) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -91.22310134896675
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[5]) then: (if (-0.5 < max(0, [ 0.136 -0.733  0.336  0.111  0.319 -0.13  -0.415 -0.363] *dot* obs[:] + -0.844)) then: act = 3 else: act = 0) else: (if (((obs[3] * max(0, [-0.132 -0.972  0.705  0.54  -0.108  0.633 -0.889  0.352] *dot* obs[:] + -0.713)) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.0 + obs[5])) then: act = 2 else: (if ((5.0 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.5) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -85.63971430941216
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[5]) then: (if (-0.5 < max(0, [ 0.136 -0.733  0.336  0.111  0.319 -0.13  -0.415 -0.363] *dot* obs[:] + -0.844)) then: act = 3 else: act = 0) else: (if ((((max(0, [-0.435 -0.234 -0.285 -0.017  0.283 -0.24   0.363  0.259] *dot* obs[:] + -0.642) * 5.0) * max(0, [-0.132 -0.972  0.705  0.54  -0.108  0.633 -0.889  0.352] *dot* obs[:] + -0.713)) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.0 + obs[5])) then: act = 2 else: (if ((5.0 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.5) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -83.91468164777336
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[5]) then: (if (-0.5496237490569564 < max(0, [ 0.136 -0.733  0.336  0.111  0.319 -0.13  -0.415 -0.363] *dot* obs[:] + -0.844)) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (4.995325256525618 + obs[5])) then: act = 2 else: (if ((5.0705982407640064 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.5149040147196536) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -82.86679489347517
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[5]) then: (if (-0.5496237490569564 < max(0, [ 0.136 -0.733  0.336  0.111  0.319 -0.13  -0.415 -0.363] *dot* obs[:] + -0.844)) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (4.995325256525618 + obs[5])) then: act = 2 else: (if ((5.0705982407640064 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.5149040147196536) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -80.97297059084795
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[5]) then: (if (-0.4337795719924382 < (((((2.0 + max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) + (2.0 * obs[6])) + ((1.0 * -0.5) + max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577))) + max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731)) + ((((obs[2] * 5.0) + obs[6]) * (1.0 * obs[1])) + (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.0 + obs[4]))))) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.095512880966688 + obs[5])) then: act = 2 else: (if ((5.0637011236891025 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.5454133472738786) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -79.70597272346208
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[5]) then: (if (-0.4896170247866078 < (((((2.0352033494777215 + max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) + (2.0 * obs[6])) + ((1.0 * -0.5) + max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577))) + max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731)) + ((((obs[2] * 5.0) + obs[6]) * (1.0 * obs[1])) + (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.0916952027986606 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)))))) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.058828514544306 + obs[5])) then: act = 2 else: (if ((4.972439709839316 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.489920894731) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -79.59182166239552
(if ((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) * (1.0 * (2.0 * ((max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[5]) then: (if (-0.4896170247866078 < (((((2.0352033494777215 + max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) + (2.0 * obs[6])) + ((1.0 * -0.5) + max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577))) + max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731)) + ((((obs[2] * 5.0) + obs[6]) * (1.0 * obs[1])) + (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.0916952027986606 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)))))) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.058828514544306 + obs[5])) then: act = 2 else: (if ((4.972439709839316 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.489920894731) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -76.46157314813027
(if ((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) * (1.0 * (2.0 * ((max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[5]) then: (if (-0.3758687115434909 < (((((1.9585753964501882 + max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) + (2.0 * obs[6])) + (-0.5 * ((((0.5 + obs[1]) * (obs[4] * -0.5)) * ((0.5 * 2.0) + (2.0 + obs[3]))) + (max(0, [-0.283 -0.074 -0.121  0.715 -0.018  0.285 -0.243  0.353] *dot* obs[:] + -0.63) * ((max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) + obs[6]) * obs[5]))))) + max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731)) + ((((obs[2] * 5.0) + obs[6]) * (1.0 * obs[1])) + (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.072842509010118 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)))))) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (4.920468129374345 + obs[5])) then: act = 2 else: (if ((4.889005670241426 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.38782199147814445) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -74.34691462416468
(if ((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) * (1.0 * (2.0 * ((max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: (if (obs[7] < obs[5]) then: (if (-0.06934962681319777 < (((((2.057074698533894 + max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) + obs[3]) + (-0.5 * ((((0.5 + obs[1]) * (obs[4] * -0.5)) * ((0.5 * 2.0) + (2.0 + obs[3]))) + (max(0, [-0.283 -0.074 -0.121  0.715 -0.018  0.285 -0.243  0.353] *dot* obs[:] + -0.63) * ((max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) + obs[6]) * obs[5]))))) + max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731)) + ((((obs[2] * 5.0) + obs[6]) * (1.0 * obs[1])) + (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.357074595355405 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)))))) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.253769999527645 + obs[5])) then: act = 2 else: (if ((5.290448397141117 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -0.7117218300343154) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -73.84598525381234
(if ((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) * (1.0 * (2.0 * ((max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[4]) then: (if (obs[7] < obs[5]) then: (if (-0.28935856917606906 < (((((2.0934712258329897 + max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) + obs[3]) + (-0.5 * ((((0.5 + obs[1]) * (obs[4] * -0.5)) * ((0.5 * 2.0) + (2.0 + obs[3]))) + (max(0, [-0.283 -0.074 -0.121  0.715 -0.018  0.285 -0.243  0.353] *dot* obs[:] + -0.63) * ((max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) + obs[6]) * obs[5]))))) + max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731)) + ((((obs[2] * 5.0) + obs[6]) * (1.0 * obs[1])) + (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.6386689268429175 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)))))) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.170832916552287 + obs[5])) then: act = 2 else: (if ((5.2429822511073265 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -1.2950543090014899) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -67.4182898533632
(if ((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) * (1.0 * (2.0 * ((max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[4]) then: (if (obs[7] < obs[5]) then: (if (-0.1763606003088329 < (((((2.214999766088436 + max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) + obs[4]) + (-0.5 * ((((0.5 + obs[1]) * (obs[4] * -0.5)) * ((0.5 * 2.0) + (2.0 + obs[3]))) + (max(0, [-0.283 -0.074 -0.121  0.715 -0.018  0.285 -0.243  0.353] *dot* obs[:] + -0.63) * ((max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) + obs[6]) * obs[5]))))) + max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731)) + ((((obs[2] * 5.0) + obs[6]) * (1.0 * obs[1])) + (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.8642882884167604 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)))))) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.022234351638781 + obs[5])) then: act = 2 else: (if ((5.347044889304985 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -1.3706778796044297) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -56.93691378264736
(if ((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) * (1.0 * (2.0 * ((max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) * max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[4]) then: (if (obs[7] < obs[5]) then: (if (-0.2680043165860516 < (((((2.064392148342192 + max(0, [-0.339 -0.658  0.034  0.414 -0.211  0.146 -0.229 -0.526] *dot* obs[:] + -0.407)) + obs[4]) + (-0.5 * ((((0.5 + obs[1]) * (obs[4] * -0.5)) * ((0.5 * 2.0) + (2.0 + obs[3]))) + (max(0, [-0.283 -0.074 -0.121  0.715 -0.018  0.285 -0.243  0.353] *dot* obs[:] + -0.63) * ((max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) + obs[6]) * obs[5]))))) + max(0, [-0.318 -0.174  0.243  0.231  0.656 -0.658 -0.29  -0.666] *dot* obs[:] + -0.731)) + ((((obs[2] * 5.0) + obs[6]) * (1.0 * obs[1])) + (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.78737731857268 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)))))) then: act = 3 else: act = 0) else: (if (((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + (max(0, [-0.11  -0.059 -0.105  0.405 -0.051 -0.057 -0.053  0.247] *dot* obs[:] + -0.498) * (max(0, [-0.039 -0.076  0.019  0.188 -0.095 -0.029 -0.354  0.076] *dot* obs[:] + -0.567) + (0.5 + obs[1])))) + (max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259) * 2.0)) < (5.082506303048805 + obs[5])) then: act = 2 else: (if ((5.299500834386757 + obs[0]) < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: act = 2 else: (if (obs[7] < -1.0741756874562054) then: act = 2 else: act = 0)))) else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))
