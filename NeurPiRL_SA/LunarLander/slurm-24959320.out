created virtual environment CPython3.6.10.final.0-64 in 9765ms
  creator CPython3Posix(dest=/localscratch/orfanos.24959320.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:178: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -569.0586140534001
(if (((2.0 * 5.0) + obs[7]) < max(0, [-0.055 -0.137 -0.13  -0.081 -0.249  0.161 -0.153 -0.258] *dot* obs[:] + -0.519)) then: (if (obs[4] < 5.0) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < obs[4]) then: (if (max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623) < obs[3]) then: act = 3 else: act = 2) else: (if (obs[1] < 1.0) then: act = 2 else: act = 0)) else: (if (obs[6] < max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) then: act = 1 else: act = 1)) else: act = 3)

Current best:  -540.1106017933939
(if (((2.0 * 5.0) + obs[7]) < max(0, [ 0.297 -0.069 -1.335  1.683  1.115  0.605 -1.127  0.602] *dot* obs[:] + -0.736)) then: (if (obs[4] < 5.0) then: (if (max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51) < obs[4]) then: (if (max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623) < obs[3]) then: act = 3 else: act = 2) else: (if (obs[1] < 1.0) then: act = 2 else: act = 0)) else: (if (obs[6] < max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) then: act = 1 else: act = 1)) else: act = 3)

Current best:  -324.9342501898347
(if ((obs[0] + obs[7]) < (((5.0 * max(0, [ 0.136 -0.733  0.336  0.111  0.319 -0.13  -0.415 -0.363] *dot* obs[:] + -0.844)) + obs[0]) * ((obs[6] * 5.0) + max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439)))) then: act = 0 else: (if (2.0 < max(0, [-0.014 -0.082 -0.145  0.108 -0.134  0.131  0.115  0.029] *dot* obs[:] + -0.76)) then: (if (obs[0] < (1.0 * 1.0)) then: (if (max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766) < obs[3]) then: (if (1.0 < max(0, [ 0.101 -0.354 -0.014  0.308  0.067 -0.052 -0.121  0.044] *dot* obs[:] + -0.385)) then: act = 3 else: act = 3) else: (if (2.0 < max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589)) then: act = 0 else: act = 1)) else: (if (obs[6] < 2.0) then: act = 3 else: (if (max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354) < 5.0) then: act = 0 else: act = 1))) else: act = 1))

Current best:  -297.4672468611897
(if ((obs[0] + obs[7]) < (((5.0 * max(0, [ 0.136 -0.733  0.336  0.111  0.319 -0.13  -0.415 -0.363] *dot* obs[:] + -0.844)) + obs[0]) * ((obs[6] * ((max(0, [-0.02  -1.052 -1.29   0.273  0.024 -0.162 -0.368  0.696] *dot* obs[:] + -0.118) * max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577)) * 2.0)) + max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439)))) then: act = 0 else: (if (2.0 < max(0, [-0.014 -0.082 -0.145  0.108 -0.134  0.131  0.115  0.029] *dot* obs[:] + -0.76)) then: (if (obs[0] < (1.0 * 1.0)) then: (if (max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766) < obs[3]) then: (if (1.0 < max(0, [ 0.101 -0.354 -0.014  0.308  0.067 -0.052 -0.121  0.044] *dot* obs[:] + -0.385)) then: act = 3 else: act = 3) else: (if (2.0 < max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589)) then: act = 0 else: act = 1)) else: (if (obs[6] < 2.0) then: act = 3 else: (if (max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354) < 5.0) then: act = 0 else: act = 1))) else: act = 1))

Current best:  -294.8953024192296
(if ((obs[0] + obs[7]) < (((5.0 * max(0, [ 0.136 -0.733  0.336  0.111  0.319 -0.13  -0.415 -0.363] *dot* obs[:] + -0.844)) + obs[0]) * ((obs[6] * ((max(0, [-0.02  -1.052 -1.29   0.273  0.024 -0.162 -0.368  0.696] *dot* obs[:] + -0.118) * max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577)) * 2.0)) + max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439)))) then: act = 0 else: (if (2.0 < max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943)) then: (if (obs[0] < (1.0 * 1.0)) then: (if (max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766) < obs[3]) then: (if (1.0 < max(0, [ 0.101 -0.354 -0.014  0.308  0.067 -0.052 -0.121  0.044] *dot* obs[:] + -0.385)) then: act = 3 else: act = 3) else: (if (2.0 < max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589)) then: act = 0 else: act = 1)) else: (if (obs[6] < 2.0) then: act = 3 else: (if (max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354) < 5.0) then: act = 0 else: act = 1))) else: act = 1))

Current best:  -280.51129692786924
(if ((obs[0] + obs[7]) < (((5.0 * max(0, [ 0.136 -0.733  0.336  0.111  0.319 -0.13  -0.415 -0.363] *dot* obs[:] + -0.844)) + obs[0]) * ((obs[6] * ((max(0, [-0.02  -1.052 -1.29   0.273  0.024 -0.162 -0.368  0.696] *dot* obs[:] + -0.118) * max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577)) * 2.0)) + max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439)))) then: act = 0 else: (if (2.0 < max(0, [-0.171 -1.039 -0.856  1.243  1.9   -0.318  0.135 -0.012] *dot* obs[:] + -0.943)) then: (if (obs[0] < (1.0 * 1.0)) then: (if ((1.0 + (obs[1] * max(0, [ 0.053 -2.617  0.393 -1.893  0.749  1.546 -0.512 -0.526] *dot* obs[:] + -0.192))) < obs[3]) then: (if (1.0 < max(0, [ 0.101 -0.354 -0.014  0.308  0.067 -0.052 -0.121  0.044] *dot* obs[:] + -0.385)) then: act = 3 else: act = 3) else: (if (2.0 < max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589)) then: act = 0 else: act = 1)) else: (if (obs[6] < 2.0) then: act = 3 else: (if (max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354) < 5.0) then: act = 0 else: act = 1))) else: act = 1))

Current best:  -226.5287291902066
(if (-0.5 < obs[3]) then: (if (0.5 < obs[3]) then: act = 0 else: (if ((obs[4] * max(0, [ 0.236 -0.527  0.166  0.805  0.043 -0.114 -0.54  -0.025] *dot* obs[:] + -0.51)) < max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) then: act = 2 else: act = 0)) else: act = 2)

Current best:  -225.17594069832663
(if (-0.5 < obs[3]) then: (if (0.5 < obs[1]) then: act = 0 else: (if ((obs[4] * max(0, [ 0.236 -0.527  0.166  0.805  0.043 -0.114 -0.54  -0.025] *dot* obs[:] + -0.51)) < max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) then: act = 2 else: act = 0)) else: act = 2)

Current best:  -208.96996133194725
(if (-0.5 < obs[3]) then: (if (1.0 < obs[1]) then: act = 0 else: (if ((obs[4] * max(0, [ 0.236 -0.527  0.166  0.805  0.043 -0.114 -0.54  -0.025] *dot* obs[:] + -0.51)) < max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) then: act = 2 else: act = 0)) else: act = 2)

Current best:  -202.3129015587167
(if (-0.5 < obs[3]) then: (if (1.0 < obs[1]) then: act = 0 else: (if (5.0 < max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) then: act = 2 else: act = 0)) else: act = 2)

Current best:  -185.67640499829994
(if (-0.5 < obs[3]) then: (if (1.0 < obs[1]) then: act = 0 else: (if (5.0 < max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) then: act = 2 else: act = 0)) else: act = 2)

Current best:  -165.96497680403118
(if (-0.5 < obs[2]) then: (if (1.0 < obs[1]) then: act = 0 else: (if (5.0 < max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) then: act = 2 else: act = 0)) else: act = 2)

Current best:  -138.83844451178288
(if (-0.5 < 5.0) then: (if (1.0 < obs[1]) then: act = 0 else: (if (5.0 < max(0, [-0.175  0.201 -0.131  1.064  0.431  2.269 -0.554 -0.048] *dot* obs[:] + -0.925)) then: act = 2 else: act = 0)) else: act = 2)

Current best:  -120.65439283483045
(if (-0.5 < 5.0) then: (if ((((obs[7] * max(0, [-0.323  0.112 -0.343 -0.75  -2.726  0.422 -0.829 -0.634] *dot* obs[:] + -0.795)) + 0.5) + max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -115.79445729643541
(if (1.0 < 5.0) then: (if ((((obs[7] * max(0, [-0.323  0.112 -0.343 -0.75  -2.726  0.422 -0.829 -0.634] *dot* obs[:] + -0.795)) + 0.5) + max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -115.75924382855021
(if (1.0 < 5.0) then: (if ((((obs[7] * max(0, [-0.323  0.112 -0.343 -0.75  -2.726  0.422 -0.829 -0.634] *dot* obs[:] + -0.795)) + (((2.0 + (0.0 + max(0, [ 0.13  -0.271 -0.016 -0.076 -0.196  0.228 -0.21   0.054] *dot* obs[:] + -0.41))) * (2.0 * (max(0, [ 0.003 -0.91   0.234  0.128  0.085 -0.592 -0.402 -0.248] *dot* obs[:] + -1.189) * (obs[6] * max(0, [ 0.202 -0.256  0.045  0.239  0.251 -0.097 -0.085  0.03 ] *dot* obs[:] + -0.66))))) * (max(0, [ 0.109 -0.419  0.056  0.153 -0.254 -0.011 -0.157 -0.178] *dot* obs[:] + -0.617) + (((1.0 * 2.0) + 0.5) * (2.0 * (obs[4] + max(0, [-0.072 -1.556 -0.802 -0.706  0.799  0.604 -0.25  -0.57 ] *dot* obs[:] + 0.458))))))) + max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -112.8183713458791
(if (1.0 < 5.0) then: (if (((obs[1] + max(0, [-0.209 -0.256 -0.155  0.332 -0.089 -0.218 -0.487 -0.074] *dot* obs[:] + -0.531)) + max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -103.97618902261333
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if (((((((obs[4] + max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) * max(0, [-0.055 -0.137 -0.13  -0.081 -0.249  0.161 -0.153 -0.258] *dot* obs[:] + -0.519)) * 2.0) + max(0, [-0.014 -0.082 -0.145  0.108 -0.134  0.131  0.115  0.029] *dot* obs[:] + -0.76)) * (((max(0, [ 0.004  0.003 -0.009 -0.191 -0.014  0.022 -0.121 -0.324] *dot* obs[:] + -0.38) * 2.0) + ((max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738) + (1.0 + (0.0 + max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577)))) * max(0, [-0.141 -0.328 -0.203  0.14   0.147  0.104 -0.294 -0.203] *dot* obs[:] + -0.772))) + 0.5)) + max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -100.508959573874
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if (((((((obs[4] + max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) * (obs[6] + (max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608) * obs[0]))) * 2.0) + max(0, [-0.014 -0.082 -0.145  0.108 -0.134  0.131  0.115  0.029] *dot* obs[:] + -0.76)) * (((max(0, [ 0.004  0.003 -0.009 -0.191 -0.014  0.022 -0.121 -0.324] *dot* obs[:] + -0.38) * 2.0) + ((max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738) + (1.0 + (0.0 + max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577)))) * max(0, [-0.141 -0.328 -0.203  0.14   0.147  0.104 -0.294 -0.203] *dot* obs[:] + -0.772))) + 0.5)) + max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -99.36380449173477
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if (((((((obs[4] + max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) * (obs[6] + (max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608) * obs[0]))) * 2.0) + max(0, [-0.014 -0.082 -0.145  0.108 -0.134  0.131  0.115  0.029] *dot* obs[:] + -0.76)) * (((max(0, [-0.366 -0.616  0.111  0.314  0.413  0.077  0.187  0.015] *dot* obs[:] + -0.645) * 2.0) + ((max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738) + (1.0 + (0.0 + max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577)))) * max(0, [-0.141 -0.328 -0.203  0.14   0.147  0.104 -0.294 -0.203] *dot* obs[:] + -0.772))) + 0.5)) + max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -96.69560428370903
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if (((((((obs[4] + max(0, [-1.319  0.77  -0.796  2.274  2.394  0.733 -0.472 -0.485] *dot* obs[:] + 0.589)) * (obs[6] + (max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608) * obs[0]))) * 2.0) + max(0, [-0.141 -0.328 -0.203  0.14   0.147  0.104 -0.294 -0.203] *dot* obs[:] + -0.772)) * (((max(0, [-0.366 -0.616  0.111  0.314  0.413  0.077  0.187  0.015] *dot* obs[:] + -0.645) * 2.0) + ((max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738) + (1.0 + (0.0 + max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577)))) * max(0, [-0.141 -0.328 -0.203  0.14   0.147  0.104 -0.294 -0.203] *dot* obs[:] + -0.772))) + 0.5)) + max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -96.42002800470802
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if (((((((((obs[1] + obs[3]) + obs[7]) + obs[5]) * (obs[6] + (max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608) * obs[0]))) * 2.0) + max(0, [-0.141 -0.328 -0.203  0.14   0.147  0.104 -0.294 -0.203] *dot* obs[:] + -0.772)) * (((max(0, [-0.366 -0.616  0.111  0.314  0.413  0.077  0.187  0.015] *dot* obs[:] + -0.645) * 2.0) + ((max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738) + (1.0 + (0.0 + max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577)))) * max(0, [-0.141 -0.328 -0.203  0.14   0.147  0.104 -0.294 -0.203] *dot* obs[:] + -0.772))) + 0.5)) + max(0, [ 0.029 -0.539  0.04   0.029 -0.142 -0.208 -0.143 -0.509] *dot* obs[:] + -0.632)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -93.94928039404782
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if ((((((obs[1] + (((max(0, [ 0.039 -0.147  0.043  0.289  0.083  0.05   0.076 -0.044] *dot* obs[:] + -0.435) + obs[3]) * (1.0 + ((max(0, [ 0.022 -0.296 -0.177  0.381 -0.031  0.123 -0.334  0.123] *dot* obs[:] + -0.369) + 0.0) * obs[6]))) * obs[4])) + (obs[6] + max(0, [-0.18  -0.129 -0.029  0.094  0.139 -0.101  0.133 -0.322] *dot* obs[:] + -0.567))) + (5.0 * ((max(0, [-0.431 -3.246 -0.38  -1.011  0.083  0.115 -0.779 -0.858] *dot* obs[:] + 0.171) * 5.0) * max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)))) * max(0, [ 0.022 -0.296 -0.177  0.381 -0.031  0.123 -0.334  0.123] *dot* obs[:] + -0.369)) + ((5.0 + max(0, [-0.157 -0.394  0.216 -0.052  0.23  -0.226 -0.465  0.302] *dot* obs[:] + -0.684)) * 0.5)) < max(0, [-1.479 -1.02  -0.032 -0.372 -0.315 -0.397 -0.622 -0.944] *dot* obs[:] + -0.713)) then: act = 3 else: act = 0) else: act = 2)

Current best:  -87.19341604047479
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if ((obs[3] * max(0, [-0.019 -0.083 -0.21   0.383 -0.092  0.167 -0.116 -0.252] *dot* obs[:] + -0.543)) < obs[5]) then: act = 3 else: act = 0) else: act = 2)

Current best:  -86.9716394526194
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if ((max(0, [ 1.586 -0.423  0.267 -1.072  0.022 -2.24  -0.374 -0.29 ] *dot* obs[:] + -0.322) * max(0, [-0.019 -0.083 -0.21   0.383 -0.092  0.167 -0.116 -0.252] *dot* obs[:] + -0.543)) < obs[5]) then: act = 3 else: act = 0) else: act = 2)

Current best:  -86.20354116544453
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if ((max(0, [ 1.586 -0.423  0.267 -1.072  0.022 -2.24  -0.374 -0.29 ] *dot* obs[:] + -0.322) * (2.0 * max(0, [ 0.126 -0.331  0.242  0.119  0.147 -0.538 -0.261 -0.27 ] *dot* obs[:] + -0.528))) < obs[5]) then: act = 3 else: act = 0) else: act = 2)

Current best:  -85.44694147214302
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if ((max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577) * (2.0 * max(0, [ 0.126 -0.331  0.242  0.119  0.147 -0.538 -0.261 -0.27 ] *dot* obs[:] + -0.528))) < obs[5]) then: act = 3 else: act = 0) else: act = 2)

Current best:  -74.1096013939828
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 1.0) then: (if ((max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577) * (2.0 * max(0, [ 0.126 -0.331  0.242  0.119  0.147 -0.538 -0.261 -0.27 ] *dot* obs[:] + -0.528))) < obs[5]) then: act = 3 else: act = 0) else: act = 2)

Current best:  -59.61145768989457
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 1.0) then: (if ((max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577) * (2.0 * max(0, [ 0.126 -0.331  0.242  0.119  0.147 -0.538 -0.261 -0.27 ] *dot* obs[:] + -0.528))) < obs[5]) then: act = 3 else: act = 0) else: act = 2)

Current best:  -28.899051597456136
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 1.0) then: (if ((0.5 * 5.0) < (-0.5 + ((obs[5] * max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428)) + (obs[5] + max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766))))) then: (if (max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39) < 5.0) then: act = 1 else: (if ((max(0, [ 0.171 -0.284  0.603  0.546 -0.133 -0.3    0.323 -0.969] *dot* obs[:] + -1.146) + 0.5) < max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51)) then: act = 3 else: act = 3)) else: (if (0.0 < ((obs[5] + max(0, [-0.754 -2.473 -1.167 -1.143  0.229  0.197 -0.822 -1.258] *dot* obs[:] + 0.591)) * obs[7])) then: (if (0.0 < obs[1]) then: act = 3 else: (if (obs[1] < -0.5) then: (if (obs[7] < max(0, [ 0.491 -0.051  0.336  0.373  0.861 -0.764  0.016 -0.412] *dot* obs[:] + -0.962)) then: act = 0 else: act = 3) else: (if (obs[5] < 5.0) then: act = 1 else: act = 1))) else: (if ((obs[5] * -0.5) < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 3 else: act = 1))) else: act = 2)

Current best:  -27.50210131125398
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 1.0) then: (if ((0.5 * 5.0) < (-0.5 + ((obs[5] * max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428)) + (obs[5] + max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766))))) then: (if (max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39) < 5.0) then: act = 1 else: (if ((max(0, [ 0.171 -0.284  0.603  0.546 -0.133 -0.3    0.323 -0.969] *dot* obs[:] + -1.146) + 0.5) < max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51)) then: act = 3 else: act = 3)) else: (if (0.0 < ((obs[0] + max(0, [-0.754 -2.473 -1.167 -1.143  0.229  0.197 -0.822 -1.258] *dot* obs[:] + 0.591)) * obs[7])) then: (if (0.0 < obs[1]) then: act = 3 else: (if (obs[1] < -0.5) then: (if (obs[7] < max(0, [ 0.491 -0.051  0.336  0.373  0.861 -0.764  0.016 -0.412] *dot* obs[:] + -0.962)) then: act = 0 else: act = 3) else: (if (obs[5] < 5.0) then: act = 1 else: act = 1))) else: (if ((obs[5] * -0.5) < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 3 else: act = 1))) else: act = 2)

Current best:  -26.251611096734745
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 1.0) then: (if ((0.5 * 5.0) < (-0.5 + ((obs[5] * max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428)) + (obs[5] + max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766))))) then: (if ((2.0 * obs[1]) < 5.0) then: act = 1 else: (if ((max(0, [ 0.171 -0.284  0.603  0.546 -0.133 -0.3    0.323 -0.969] *dot* obs[:] + -1.146) + 0.5) < max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51)) then: act = 3 else: act = 3)) else: (if (0.0 < ((obs[0] + max(0, [-0.754 -2.473 -1.167 -1.143  0.229  0.197 -0.822 -1.258] *dot* obs[:] + 0.591)) * obs[7])) then: (if (0.0 < obs[1]) then: act = 3 else: (if (obs[1] < -0.5) then: (if (obs[7] < max(0, [ 0.491 -0.051  0.336  0.373  0.861 -0.764  0.016 -0.412] *dot* obs[:] + -0.962)) then: act = 0 else: act = 3) else: (if (obs[5] < 5.0) then: act = 1 else: act = 1))) else: (if ((obs[5] * -0.5) < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 3 else: act = 1))) else: act = 2)

Current best:  -25.26649226586691
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 1.0) then: (if ((5.0 * 5.0) < (-0.5 + ((obs[5] * max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428)) + (obs[5] + max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766))))) then: (if ((2.0 * obs[1]) < 5.0) then: act = 1 else: (if ((max(0, [ 0.171 -0.284  0.603  0.546 -0.133 -0.3    0.323 -0.969] *dot* obs[:] + -1.146) + 0.5) < max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51)) then: act = 3 else: act = 3)) else: (if (0.0 < ((obs[0] + max(0, [-0.754 -2.473 -1.167 -1.143  0.229  0.197 -0.822 -1.258] *dot* obs[:] + 0.591)) * obs[7])) then: (if (0.0 < obs[1]) then: act = 3 else: (if (obs[1] < -0.5) then: (if (obs[7] < max(0, [ 0.491 -0.051  0.336  0.373  0.861 -0.764  0.016 -0.412] *dot* obs[:] + -0.962)) then: act = 0 else: act = 3) else: (if (obs[5] < 5.0) then: act = 1 else: act = 1))) else: (if ((obs[5] * -0.5) < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 3 else: act = 1))) else: act = 2)

Current best:  -23.707188344214583
(if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 1.0) then: (if ((5.0 * 5.0) < (-0.5 + ((obs[5] * max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428)) + (obs[5] + max(0, [ 0.086 -0.768  0.005  0.623  0.153  0.347 -0.472 -0.923] *dot* obs[:] + -0.766))))) then: (if ((2.0 * obs[1]) < 5.0) then: act = 1 else: (if ((max(0, [ 0.171 -0.284  0.603  0.546 -0.133 -0.3    0.323 -0.969] *dot* obs[:] + -1.146) + 0.5) < max(0, [-0.168 -0.202  0.125 -0.178 -0.014  0.154 -0.095 -0.226] *dot* obs[:] + -0.51)) then: (if ((0.5 + max(0, [-0.141 -0.328 -0.203  0.14   0.147  0.104 -0.294 -0.203] *dot* obs[:] + -0.772)) < -0.5) then: act = 3 else: act = 3) else: act = 3)) else: (if (0.0 < ((obs[0] + max(0, [-0.754 -2.473 -1.167 -1.143  0.229  0.197 -0.822 -1.258] *dot* obs[:] + 0.591)) * obs[7])) then: (if (0.0 < obs[1]) then: act = 3 else: (if (obs[1] < -0.5) then: (if (obs[7] < max(0, [ 0.491 -0.051  0.336  0.373  0.861 -0.764  0.016 -0.412] *dot* obs[:] + -0.962)) then: act = 0 else: act = 3) else: (if (obs[5] < 5.0) then: act = 1 else: act = 1))) else: (if ((obs[5] * -0.5) < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 3 else: act = 1))) else: act = 2)
