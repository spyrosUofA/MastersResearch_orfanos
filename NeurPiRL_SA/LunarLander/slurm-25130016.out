created virtual environment CPython3.6.10.final.0-64 in 16410ms
  creator CPython3Posix(dest=/localscratch/orfanos.25130016.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment

Current best:  -321.899081121376
(if (((max(0, [-0.069 -0.395 -0.01   0.514  0.004  0.094 -0.025 -0.305] *dot* obs[:] + -0.414) + 0.5) * max(0, [ 0.033 -0.345  1.044 -1.245 -1.612 -2.791  0.394  0.655] *dot* obs[:] + -0.943)) < 1.0) then: act = 3 else: (if ((1.0 * -0.5) < 0.0) then: act = 0 else: (if (obs[3] < max(0, [ 0.093 -0.221 -0.139  0.094 -0.306 -0.177 -0.205 -0.157] *dot* obs[:] + -0.761)) then: (if (5.0 < 0.5) then: act = 3 else: act = 2) else: (if (max(0, [ 0.426 -0.205  0.541  0.104 -1.898  0.205  0.195  0.41 ] *dot* obs[:] + -0.343) < -0.5) then: act = 3 else: act = 2))))

Current best:  -137.51253935033617
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.288  0.557 -0.044  0.073  0.22   0.364 -0.4   -0.402] *dot* obs[:] + -1.692)) + 2.0)) then: (if ((0.0 + obs[1]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.5 < obs[3]) then: act = 2 else: (if (0.0 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -122.3500888239054
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.288  0.557 -0.044  0.073  0.22   0.364 -0.4   -0.402] *dot* obs[:] + -1.692)) + 2.0)) then: (if ((0.0 + obs[1]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.5 < 0.5) then: act = 2 else: (if (0.0 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -120.4135870772488
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.01  -0.668 -0.034 -0.325  0.689  0.469 -0.094 -0.384] *dot* obs[:] + -0.205)) + 2.2053557746714225)) then: (if ((-0.008062658901515904 + obs[1]) < -0.5149282616357345) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.5487890768597391 < 0.4409702425989814) then: act = 2 else: (if (0.027796429075385043 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -110.23259300619169
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.01  -0.668 -0.034 -0.325  0.689  0.469 -0.094 -0.384] *dot* obs[:] + -0.205)) + 2.236394791705777)) then: (if ((max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213) + obs[1]) < -0.5454951872035518) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.42139456713171936 < 0.6116596525143184) then: act = 2 else: (if (-0.002375830064592868 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -97.8830600849228
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.01  -0.668 -0.034 -0.325  0.689  0.469 -0.094 -0.384] *dot* obs[:] + -0.205)) + 2.211263168776622)) then: (if ((max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213) + obs[1]) < 0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.2970866098016496 < 0.33710552463608) then: act = 2 else: (if (5.231409541472942e-05 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -97.7408120736644
(if (obs[0] < ((max(0, [ 0.201 -0.154 -0.175  0.194 -0.089  0.097 -0.107  0.404] *dot* obs[:] + -0.639) + max(0, [-0.01  -0.668 -0.034 -0.325  0.689  0.469 -0.094 -0.384] *dot* obs[:] + -0.205)) + 2.119197725103437)) then: (if ((max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213) + obs[1]) < 0.5443058335231524) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.23514927059406243 < 0.4340332255422292) then: act = 2 else: (if (-0.09895835290437945 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -92.62871658312683
(if (obs[0] < ((max(0, [ 0.201 -0.154 -0.175  0.194 -0.089  0.097 -0.107  0.404] *dot* obs[:] + -0.639) + max(0, [-0.01  -0.668 -0.034 -0.325  0.689  0.469 -0.094 -0.384] *dot* obs[:] + -0.205)) + 2.3076710783153365)) then: (if ((max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213) + obs[1]) < 0.6157671004409739) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.26188892771882005 < 5.0) then: act = 2 else: (if (-0.05644741086199495 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -81.17242802963052
(if (obs[0] < ((max(0, [ 0.201 -0.154 -0.175  0.194 -0.089  0.097 -0.107  0.404] *dot* obs[:] + -0.639) + max(0, [-0.01  -0.668 -0.034 -0.325  0.689  0.469 -0.094 -0.384] *dot* obs[:] + -0.205)) + 2.3076710783153365)) then: (if ((max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213) + obs[1]) < 0.6157671004409739) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.26188892771882005 < 5.0) then: act = 2 else: (if (-0.05644741086199495 < obs[1]) then: act = 1 else: act = 3)) else: (if ((max(0, [-0.529 -0.459  0.953  1.019 -0.618 -0.035  0.514 -0.194] *dot* obs[:] + -0.847) + 5.0) < 0.0) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -48.71948663742387
(if (obs[0] < ((max(0, [ 0.201 -0.154 -0.175  0.194 -0.089  0.097 -0.107  0.404] *dot* obs[:] + -0.639) + max(0, [-0.01  -0.668 -0.034 -0.325  0.689  0.469 -0.094 -0.384] *dot* obs[:] + -0.205)) + 2.287319091668034)) then: (if ((max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213) + obs[1]) < 0.7372357274604169) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (-0.000776819071475818 < 0.5) then: act = 2 else: (if (0.08315408569834966 < obs[1]) then: act = 1 else: act = 3)) else: (if ((max(0, [-0.529 -0.459  0.953  1.019 -0.618 -0.035  0.514 -0.194] *dot* obs[:] + -0.847) + 4.940408701775122) < -0.12083420181172635) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -40.82223955287451
(if (obs[0] < ((max(0, [ 0.201 -0.154 -0.175  0.194 -0.089  0.097 -0.107  0.404] *dot* obs[:] + -0.639) + max(0, [-0.01  -0.668 -0.034 -0.325  0.689  0.469 -0.094 -0.384] *dot* obs[:] + -0.205)) + 2.0670157715902517)) then: (if ((max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213) + obs[1]) < 0.7019218448662831) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (-0.3527497152416388 < 1.2214213778295144) then: act = 2 else: act = 1) else: (if ((max(0, [-0.529 -0.459  0.953  1.019 -0.618 -0.035  0.514 -0.194] *dot* obs[:] + -0.847) + 4.560582611472514) < 0.13393773495886857) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))
