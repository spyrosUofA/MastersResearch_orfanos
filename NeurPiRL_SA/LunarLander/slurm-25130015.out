created virtual environment CPython3.6.10.final.0-64 in 6368ms
  creator CPython3Posix(dest=/localscratch/orfanos.25130015.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -831.3718635126445
(if (((0.0 * obs[7]) + max(0, [-0.223 -2.023  0.129 -1.464  0.113  1.205 -0.438  0.24 ] *dot* obs[:] + -0.591)) < 0.9654274801726076) then: (if (-0.06127560048111294 < max(0, [ 0.426 -0.33   0.474 -0.042 -0.216  0.557 -0.129 -0.589] *dot* obs[:] + -0.638)) then: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[6]) then: (if (obs[3] < max(0, [ 0.21  -0.901  0.99  -0.965 -1.097 -1.932  0.219  0.092] *dot* obs[:] + -0.587)) then: act = 1 else: act = 1) else: (if (1.030773337330671 < -0.045475312911856074) then: act = 1 else: act = 2)) else: act = 2) else: (if ((5.0802497775267685 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.5794405429647895 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -734.9607988756715
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.9654274801726076) then: (if (-0.06127560048111294 < max(0, [ 0.426 -0.33   0.474 -0.042 -0.216  0.557 -0.129 -0.589] *dot* obs[:] + -0.638)) then: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[6]) then: (if (obs[3] < max(0, [ 0.21  -0.901  0.99  -0.965 -1.097 -1.932  0.219  0.092] *dot* obs[:] + -0.587)) then: act = 1 else: act = 1) else: (if (1.030773337330671 < -0.045475312911856074) then: act = 1 else: act = 2)) else: act = 2) else: (if ((5.0802497775267685 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.5794405429647895 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -664.1588258731826
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.908561797398909) then: (if (-0.024593337942346166 < max(0, [ 0.426 -0.33   0.474 -0.042 -0.216  0.557 -0.129 -0.589] *dot* obs[:] + -0.638)) then: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[5]) then: (if (obs[3] < max(0, [ 0.21  -0.901  0.99  -0.965 -1.097 -1.932  0.219  0.092] *dot* obs[:] + -0.587)) then: act = 1 else: act = 1) else: (if (1.086961031077927 < -0.08402327029354478) then: act = 1 else: act = 2)) else: act = 2) else: (if ((5.107806133498844 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.5915674558952859 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -640.8821196060995
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.8862310100366717) then: (if (-0.12758757762674983 < max(0, [ 0.426 -0.33   0.474 -0.042 -0.216  0.557 -0.129 -0.589] *dot* obs[:] + -0.638)) then: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[5]) then: (if (obs[3] < max(0, [ 0.21  -0.901  0.99  -0.965 -1.097 -1.932  0.219  0.092] *dot* obs[:] + -0.587)) then: act = 3 else: act = 1) else: (if (1.0842551576904194 < -0.17747010648093514) then: act = 1 else: act = 2)) else: act = 2) else: (if ((5.183278786641923 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.5235024604152405 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -628.8266206415201
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.7964629919951314) then: (if (-0.19747296795559252 < max(0, [ 0.426 -0.33   0.474 -0.042 -0.216  0.557 -0.129 -0.589] *dot* obs[:] + -0.638)) then: (if (max(0, [-0.117 -0.527  0.073  0.011 -0.067 -0.61   0.128 -0.894] *dot* obs[:] + -0.341) < obs[5]) then: (if (obs[3] < max(0, [ 0.21  -0.901  0.99  -0.965 -1.097 -1.932  0.219  0.092] *dot* obs[:] + -0.587)) then: (if (2.0 < (obs[4] + -0.5)) then: act = 2 else: act = 3) else: act = 1) else: (if (1.1255805506458987 < -0.17714909442064242) then: act = 1 else: act = 2)) else: act = 2) else: (if ((5.1624494621669035 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.5311819028968549 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -605.2371601178179
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.8307969757514588) then: (if (((obs[4] * (obs[1] * max(0, [ 0.127 -0.271 -0.036 -0.074 -0.195  0.196 -0.21   0.035] *dot* obs[:] + -0.417))) + obs[6]) < (((max(0, [-0.882  0.436 -1.071  0.019  0.915  1.377 -0.179 -0.294] *dot* obs[:] + 0.107) + 0.5) + -0.5) * max(0, [ 0.221  0.832 -0.007 -1.561  0.526 -0.347 -0.774 -0.354] *dot* obs[:] + -1.045))) then: (if ((obs[4] + (max(0, [-0.104 -0.835  0.182 -0.081  0.207  0.207 -0.014 -0.245] *dot* obs[:] + -0.124) + max(0, [ 0.424 -0.234 -0.074  0.224 -0.012 -0.134  0.142  0.187] *dot* obs[:] + -0.856))) < (max(0, [-0.177  0.163  0.042 -0.933 -0.005 -0.78   0.484 -1.558] *dot* obs[:] + -0.66) * (max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577) + obs[4]))) then: (if ((max(0, [-0.279 -0.573  0.039  0.778 -0.056 -0.141 -0.519 -0.037] *dot* obs[:] + -0.491) + 5.0) < (max(0, [ 0.12  -2.071 -0.778 -0.974 -0.355 -0.436 -0.166 -0.032] *dot* obs[:] + 0.131) * max(0, [-0.177  0.163  0.042 -0.933 -0.005 -0.78   0.484 -1.558] *dot* obs[:] + -0.66))) then: act = 3 else: act = 2) else: act = 2) else: (if (((obs[4] * max(0, [-0.07  -0.398 -0.005  0.51   0.     0.1   -0.025 -0.303] *dot* obs[:] + -0.417)) + obs[2]) < max(0, [ 0.259 -0.1   -0.014  0.081  0.132 -0.04  -0.302 -0.089] *dot* obs[:] + -0.384)) then: act = 1 else: act = 3)) else: (if ((5.326298869743096 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.4618492187765146 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -380.19203523668506
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.8636785167362035) then: (if (((obs[4] * (obs[1] * max(0, [ 0.127 -0.271 -0.036 -0.074 -0.195  0.196 -0.21   0.035] *dot* obs[:] + -0.417))) + obs[6]) < (((max(0, [-0.882  0.436 -1.071  0.019  0.915  1.377 -0.179 -0.294] *dot* obs[:] + 0.107) + 0.5) + -0.5) * max(0, [ 0.221  0.832 -0.007 -1.561  0.526 -0.347 -0.774 -0.354] *dot* obs[:] + -1.045))) then: act = 0 else: (if (((obs[4] * max(0, [-0.07  -0.398 -0.005  0.51   0.     0.1   -0.025 -0.303] *dot* obs[:] + -0.417)) + obs[2]) < max(0, [ 0.259 -0.1   -0.014  0.081  0.132 -0.04  -0.302 -0.089] *dot* obs[:] + -0.384)) then: act = 1 else: act = 3)) else: (if ((5.360309340107381 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.4561524631679408 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -181.2588707779224
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.8636785167362035) then: (if (((obs[4] * (obs[1] * max(0, [ 0.127 -0.271 -0.036 -0.074 -0.195  0.196 -0.21   0.035] *dot* obs[:] + -0.417))) + obs[6]) < (((max(0, [-0.882  0.436 -1.071  0.019  0.915  1.377 -0.179 -0.294] *dot* obs[:] + 0.107) + 0.5) + 0.5) * max(0, [ 0.221  0.832 -0.007 -1.561  0.526 -0.347 -0.774 -0.354] *dot* obs[:] + -1.045))) then: act = 0 else: (if (((obs[4] * max(0, [-0.07  -0.398 -0.005  0.51   0.     0.1   -0.025 -0.303] *dot* obs[:] + -0.417)) + obs[2]) < max(0, [ 0.259 -0.1   -0.014  0.081  0.132 -0.04  -0.302 -0.089] *dot* obs[:] + -0.384)) then: act = 1 else: act = 3)) else: (if ((5.360309340107381 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.4561524631679408 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -175.9761562760894
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.9128443325719807) then: (if (((obs[4] * (obs[1] * max(0, [-0.048  0.284  0.34  -2.485 -0.12  -0.613 -0.232 -0.361] *dot* obs[:] + -0.59))) + obs[6]) < (((max(0, [-0.882  0.436 -1.071  0.019  0.915  1.377 -0.179 -0.294] *dot* obs[:] + 0.107) + 0.5) + 0.5) * max(0, [ 0.221  0.832 -0.007 -1.561  0.526 -0.347 -0.774 -0.354] *dot* obs[:] + -1.045))) then: act = 0 else: (if (((obs[4] * max(0, [-0.07  -0.398 -0.005  0.51   0.     0.1   -0.025 -0.303] *dot* obs[:] + -0.417)) + obs[2]) < max(0, [ 0.259 -0.1   -0.014  0.081  0.132 -0.04  -0.302 -0.089] *dot* obs[:] + -0.384)) then: act = 1 else: act = 3)) else: (if ((5.649347163662849 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.3567323207977008 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -170.90610502972925
(if (((0.0 * obs[7]) + ((obs[1] * max(0, [-0.25  -0.136  0.028  0.42  -0.096  0.003 -0.385 -0.187] *dot* obs[:] + -0.486)) * max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188))) < 0.9128443325719807) then: (if (((obs[4] * ((max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) + obs[4]) + max(0, [ 0.843 -0.598 -0.966  0.729 -0.601 -0.327  0.512 -0.046] *dot* obs[:] + -0.639))) + obs[6]) < (((max(0, [-0.882  0.436 -1.071  0.019  0.915  1.377 -0.179 -0.294] *dot* obs[:] + 0.107) + 0.5) + 0.5) * max(0, [ 0.221  0.832 -0.007 -1.561  0.526 -0.347 -0.774 -0.354] *dot* obs[:] + -1.045))) then: act = 0 else: (if (((obs[4] * max(0, [-0.07  -0.398 -0.005  0.51   0.     0.1   -0.025 -0.303] *dot* obs[:] + -0.417)) + obs[2]) < max(0, [ 0.259 -0.1   -0.014  0.081  0.132 -0.04  -0.302 -0.089] *dot* obs[:] + -0.384)) then: act = 1 else: act = 3)) else: (if ((5.649347163662849 + max(0, [-0.303 -0.299  0.116  0.005 -0.013 -0.091 -0.376 -0.207] *dot* obs[:] + -0.371)) < (0.0 * obs[3])) then: act = 0 else: (if (max(0, [-0.008 -0.682  0.169 -0.341 -0.368  0.211 -0.23  -0.454] *dot* obs[:] + -0.299) < max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11)) then: act = 3 else: (if (-0.3567323207977008 < obs[2]) then: act = 2 else: act = 3))))

Current best:  -130.39515210631777
(if (1.0 < max(0, [-0.436 -0.483  0.836 -0.038 -0.43  -1.029  0.046 -0.258] *dot* obs[:] + -0.853)) then: act = 0 else: (if (1.0 < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 0 else: act = 0))

Current best:  -122.44234614819842
(if (max(0, [ 0.073 -0.765 -0.109 -0.133  0.154 -0.125 -0.59  -0.43 ] *dot* obs[:] + -0.551) < (max(0, [-1.281 -1.098  1.647  1.076 -0.093  0.299 -0.516 -0.305] *dot* obs[:] + 0.233) + (obs[2] + 0.5))) then: act = 0 else: (if (1.1045222922894886 < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 0 else: act = 0))

Current best:  -119.17123110881019
(if (max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501) < (max(0, [-1.281 -1.098  1.647  1.076 -0.093  0.299 -0.516 -0.305] *dot* obs[:] + 0.233) + (obs[2] + 0.3936562604736686))) then: act = 0 else: (if (0.9994225583833729 < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 0 else: act = 0))

Current best:  -113.56138408377467
(if (max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501) < (obs[3] + (obs[2] + 0.5192937699056117))) then: act = 0 else: (if (1.0207083142000986 < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 0 else: act = 0))

Current best:  -111.08237232727315
(if (max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501) < (obs[0] + (obs[2] + 0.7238167147381966))) then: act = 0 else: (if (0.9715011391212661 < max(0, [ 0.025 -0.402  0.084  0.228 -0.14   0.157 -0.315 -0.005] *dot* obs[:] + -0.542)) then: act = 0 else: act = 0))

Current best:  -110.81293153597953
(if (max(0, [-0.1   -1.475 -0.095 -0.267 -0.264 -0.653  0.352  0.382] *dot* obs[:] + -0.133) < 0.0817946538457269) then: act = 0 else: (if (-0.5 < (0.0 * (0.0 * (max(0, [-0.002 -0.483  0.022 -0.088  0.377 -0.48  -0.552  0.148] *dot* obs[:] + -0.613) + 5.0)))) then: act = 0 else: act = 0))

Current best:  -107.93308295040168
(if (max(0, [-0.561  0.11  -0.351 -1.152  0.707  0.402 -0.449 -0.349] *dot* obs[:] + -0.153) < 0.21288727313513126) then: act = 0 else: (if (-1.10578747984934 < (0.0 * (0.0 * (max(0, [-0.002 -0.483  0.022 -0.088  0.377 -0.48  -0.552  0.148] *dot* obs[:] + -0.613) + 5.0)))) then: act = 0 else: act = 0))

Current best:  -102.563146037178
(if (max(0, [-0.065 -0.362  0.132 -0.015  0.111  0.261  0.005 -0.258] *dot* obs[:] + -0.557) < obs[0]) then: act = 0 else: (if (-1.0056375025026862 < (0.0 * (0.0 * (max(0, [-0.002 -0.483  0.022 -0.088  0.377 -0.48  -0.552  0.148] *dot* obs[:] + -0.613) + 5.0)))) then: act = 0 else: act = 0))

Current best:  -100.08460561874864
(if ((obs[0] * max(0, [-0.027 -0.224 -0.099  0.22   0.057 -0.017 -0.026  0.167] *dot* obs[:] + -0.409)) < (max(0, [-0.173 -0.151  0.118  0.252 -0.054  0.292  0.242 -0.664] *dot* obs[:] + -0.736) + -0.7097792239404233)) then: act = 0 else: (if (max(0, [-0.177  0.163  0.042 -0.933 -0.005 -0.78   0.484 -1.558] *dot* obs[:] + -0.66) < (obs[0] * (max(0, [-0.2   -0.452  0.039  0.341 -0.036  0.125 -0.239 -0.482] *dot* obs[:] + -0.816) * max(0, [-0.104 -0.835  0.182 -0.081  0.207  0.207 -0.014 -0.245] *dot* obs[:] + -0.124)))) then: act = 0 else: act = 0))
