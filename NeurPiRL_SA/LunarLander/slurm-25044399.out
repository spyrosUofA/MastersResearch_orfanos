created virtual environment CPython3.6.10.final.0-64 in 542ms
  creator CPython3Posix(dest=/localscratch/orfanos.25044399.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:178: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -797.1446388905825
(if (max(0, [-0.2   -0.452  0.039  0.341 -0.036  0.125 -0.239 -0.482] *dot* obs[:] + -0.816) < 0.0) then: (if (max(0, [-0.062 -0.136 -0.137 -0.087 -0.257  0.151 -0.153 -0.258] *dot* obs[:] + -0.515) < max(0, [ 0.55  -0.816 -0.622  2.263 -0.93   0.275  0.63   0.404] *dot* obs[:] + -0.395)) then: act = 3 else: act = 1) else: (if ((obs[1] + obs[6]) < (obs[2] + (obs[0] * obs[2]))) then: act = 1 else: (if (1.0 < 5.0) then: (if (1.0 < max(0, [-0.299 -0.323 -0.266  0.116  0.119  0.02  -0.296 -0.056] *dot* obs[:] + -0.679)) then: act = 1 else: act = 2) else: (if (1.0 < max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501)) then: act = 2 else: act = 1))))

Current best:  -653.4653636621357
(if (max(0, [-0.2   -0.452  0.039  0.341 -0.036  0.125 -0.239 -0.482] *dot* obs[:] + -0.816) < 0.0) then: (if (max(0, [-0.062 -0.136 -0.137 -0.087 -0.257  0.151 -0.153 -0.258] *dot* obs[:] + -0.515) < max(0, [ 0.55  -0.816 -0.622  2.263 -0.93   0.275  0.63   0.404] *dot* obs[:] + -0.395)) then: act = 3 else: act = 1) else: (if ((obs[4] + obs[6]) < (obs[2] + (obs[0] * obs[2]))) then: act = 1 else: (if (1.0 < 5.0) then: (if (1.0 < max(0, [-0.299 -0.323 -0.266  0.116  0.119  0.02  -0.296 -0.056] *dot* obs[:] + -0.679)) then: act = 1 else: act = 2) else: (if (1.0 < max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501)) then: act = 2 else: act = 1))))

Current best:  -586.6391850227926
(if (max(0, [-0.2   -0.452  0.039  0.341 -0.036  0.125 -0.239 -0.482] *dot* obs[:] + -0.816) < 0.0) then: (if (max(0, [-0.062 -0.136 -0.137 -0.087 -0.257  0.151 -0.153 -0.258] *dot* obs[:] + -0.515) < max(0, [ 0.55  -0.816 -0.622  2.263 -0.93   0.275  0.63   0.404] *dot* obs[:] + -0.395)) then: act = 3 else: act = 1) else: (if ((obs[4] + obs[6]) < (0.5 + (obs[0] * obs[2]))) then: act = 1 else: (if (1.0 < 5.0) then: (if (1.0 < max(0, [-0.299 -0.323 -0.266  0.116  0.119  0.02  -0.296 -0.056] *dot* obs[:] + -0.679)) then: act = 1 else: act = 2) else: (if (1.0 < max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501)) then: act = 2 else: act = 1))))

Current best:  -583.6229919373662
(if (max(0, [-0.2   -0.452  0.039  0.341 -0.036  0.125 -0.239 -0.482] *dot* obs[:] + -0.816) < 0.0) then: (if (max(0, [-0.062 -0.136 -0.137 -0.087 -0.257  0.151 -0.153 -0.258] *dot* obs[:] + -0.515) < max(0, [ 0.55  -0.816 -0.622  2.263 -0.93   0.275  0.63   0.404] *dot* obs[:] + -0.395)) then: act = 3 else: act = 1) else: (if ((obs[4] + obs[6]) < (0.5 + (obs[0] * obs[2]))) then: act = 1 else: (if (2.0 < 5.0) then: (if (1.0 < max(0, [-0.299 -0.323 -0.266  0.116  0.119  0.02  -0.296 -0.056] *dot* obs[:] + -0.679)) then: act = 1 else: act = 2) else: (if (1.0 < max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501)) then: act = 2 else: act = 1))))

Current best:  -576.0013517104361
(if (max(0, [-0.2   -0.452  0.039  0.341 -0.036  0.125 -0.239 -0.482] *dot* obs[:] + -0.816) < 0.0) then: (if (max(0, [-0.062 -0.136 -0.137 -0.087 -0.257  0.151 -0.153 -0.258] *dot* obs[:] + -0.515) < max(0, [ 0.55  -0.816 -0.622  2.263 -0.93   0.275  0.63   0.404] *dot* obs[:] + -0.395)) then: act = 3 else: (if (5.0 < 5.0) then: act = 0 else: (if (5.0 < 5.0) then: act = 0 else: act = 2))) else: (if ((obs[4] + obs[6]) < (0.5 + (obs[0] * obs[2]))) then: act = 1 else: (if (2.0 < 5.0) then: (if (1.0 < max(0, [-0.299 -0.323 -0.266  0.116  0.119  0.02  -0.296 -0.056] *dot* obs[:] + -0.679)) then: act = 1 else: act = 2) else: (if (1.0 < max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501)) then: act = 2 else: act = 1))))

Current best:  -545.6380429336133
(if (max(0, [-0.2   -0.452  0.039  0.341 -0.036  0.125 -0.239 -0.482] *dot* obs[:] + -0.816) < 0.0) then: (if (max(0, [-0.062 -0.136 -0.137 -0.087 -0.257  0.151 -0.153 -0.258] *dot* obs[:] + -0.515) < max(0, [ 0.55  -0.816 -0.622  2.263 -0.93   0.275  0.63   0.404] *dot* obs[:] + -0.395)) then: act = 3 else: (if (5.0 < 5.0) then: act = 0 else: (if (5.0 < 5.0) then: act = 0 else: act = 2))) else: (if ((obs[4] + obs[6]) < (((5.0 + obs[3]) + ((((max(0, [-0.158 -0.714 -0.184 -0.734  0.397 -0.266 -0.291 -0.725] *dot* obs[:] + -0.746) + obs[1]) + max(0, [ 0.12  -2.071 -0.778 -0.974 -0.355 -0.436 -0.166 -0.032] *dot* obs[:] + 0.131)) + max(0, [-0.065 -0.362  0.132 -0.015  0.111  0.261  0.005 -0.258] *dot* obs[:] + -0.557)) + -0.5)) + (obs[0] * obs[2]))) then: act = 1 else: (if (2.0 < 5.0) then: (if (1.0 < max(0, [-0.299 -0.323 -0.266  0.116  0.119  0.02  -0.296 -0.056] *dot* obs[:] + -0.679)) then: act = 1 else: act = 2) else: (if (1.0 < max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501)) then: act = 2 else: act = 1))))

Current best:  -544.8557383386661
(if (max(0, [-0.2   -0.452  0.039  0.341 -0.036  0.125 -0.239 -0.482] *dot* obs[:] + -0.816) < 0.0) then: (if ((((obs[3] + (obs[6] * obs[5])) * obs[0]) * ((obs[5] + ((obs[0] * obs[2]) + obs[5])) * max(0, [-0.07  -0.398 -0.005  0.51   0.     0.1   -0.025 -0.303] *dot* obs[:] + -0.417))) < max(0, [ 0.55  -0.816 -0.622  2.263 -0.93   0.275  0.63   0.404] *dot* obs[:] + -0.395)) then: act = 3 else: (if (5.0 < 5.0) then: act = 0 else: (if (5.0 < 5.0) then: act = 0 else: act = 2))) else: (if ((obs[4] + obs[6]) < (((5.0 + obs[3]) + ((((max(0, [-0.158 -0.714 -0.184 -0.734  0.397 -0.266 -0.291 -0.725] *dot* obs[:] + -0.746) + obs[1]) + max(0, [ 0.12  -2.071 -0.778 -0.974 -0.355 -0.436 -0.166 -0.032] *dot* obs[:] + 0.131)) + max(0, [-0.065 -0.362  0.132 -0.015  0.111  0.261  0.005 -0.258] *dot* obs[:] + -0.557)) + -0.5)) + (obs[0] * obs[2]))) then: act = 1 else: (if (2.0 < 5.0) then: (if (1.0 < max(0, [-0.299 -0.323 -0.266  0.116  0.119  0.02  -0.296 -0.056] *dot* obs[:] + -0.679)) then: act = 1 else: act = 2) else: (if (1.0 < max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501)) then: act = 2 else: act = 1))))

Current best:  -516.2416285519414
(if (max(0, [-0.2   -0.452  0.039  0.341 -0.036  0.125 -0.239 -0.482] *dot* obs[:] + -0.816) < 0.0) then: (if ((((obs[3] + (obs[6] * obs[5])) * obs[0]) * ((obs[5] + ((obs[0] * 0.0) + obs[5])) * max(0, [-0.07  -0.398 -0.005  0.51   0.     0.1   -0.025 -0.303] *dot* obs[:] + -0.417))) < max(0, [ 0.55  -0.816 -0.622  2.263 -0.93   0.275  0.63   0.404] *dot* obs[:] + -0.395)) then: act = 3 else: (if (5.0 < 5.0) then: act = 0 else: (if (5.0 < 5.0) then: act = 0 else: act = 2))) else: (if ((obs[4] + obs[6]) < (((5.0 + obs[3]) + ((((max(0, [-0.158 -0.714 -0.184 -0.734  0.397 -0.266 -0.291 -0.725] *dot* obs[:] + -0.746) + obs[1]) + max(0, [ 0.12  -2.071 -0.778 -0.974 -0.355 -0.436 -0.166 -0.032] *dot* obs[:] + 0.131)) + max(0, [-0.065 -0.362  0.132 -0.015  0.111  0.261  0.005 -0.258] *dot* obs[:] + -0.557)) + -0.5)) + (obs[0] * obs[2]))) then: act = 1 else: (if (2.0 < 5.0) then: (if (1.0 < max(0, [-0.299 -0.323 -0.266  0.116  0.119  0.02  -0.296 -0.056] *dot* obs[:] + -0.679)) then: act = 1 else: act = 2) else: (if (1.0 < max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501)) then: act = 2 else: act = 1))))

Current best:  -121.35072458620742
(if ((1.0 + (obs[5] + obs[3])) < obs[5]) then: act = 0 else: act = 0)

Current best:  -120.60044295813874
act = 0

Current best:  -117.19599437051517
(if (max(0, [-0.045 -0.301 -0.057  0.291 -0.064  0.085 -0.259  0.206] *dot* obs[:] + -0.327) < obs[1]) then: (if ((obs[6] + -0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[7] < -0.5) then: (if (max(0, [-0.484 -1.168 -0.138 -0.096  0.978  0.652  0.197 -0.216] *dot* obs[:] + -0.38) < max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188)) then: (if (2.0 < obs[4]) then: act = 0 else: act = 1) else: act = 0) else: act = 0))

Current best:  -111.75815396212606
(if (max(0, [-0.045 -0.301 -0.057  0.291 -0.064  0.085 -0.259  0.206] *dot* obs[:] + -0.327) < obs[1]) then: (if ((obs[6] + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[7] < -0.5) then: (if (max(0, [-0.484 -1.168 -0.138 -0.096  0.978  0.652  0.197 -0.216] *dot* obs[:] + -0.38) < max(0, [-0.34  -0.654  0.488  0.039  0.494 -0.314 -0.395 -0.211] *dot* obs[:] + -0.188)) then: (if (2.0 < obs[4]) then: act = 0 else: act = 1) else: act = 0) else: act = 0))

Current best:  -107.88530930115688
(if (max(0, [-0.045 -0.301 -0.057  0.291 -0.064  0.085 -0.259  0.206] *dot* obs[:] + -0.327) < obs[1]) then: (if ((obs[6] + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[7] < -0.5) then: (if ((max(0, [-1.281 -1.098  1.647  1.076 -0.093  0.299 -0.516 -0.305] *dot* obs[:] + 0.233) * obs[6]) < obs[0]) then: (if (2.0 < obs[4]) then: act = 0 else: act = 1) else: act = 0) else: act = 0))

Current best:  -95.0049851759849
(if (max(0, [-0.045 -0.301 -0.057  0.291 -0.064  0.085 -0.259  0.206] *dot* obs[:] + -0.327) < obs[1]) then: (if ((obs[6] + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if ((max(0, [-0.045 -0.301 -0.057  0.291 -0.064  0.085 -0.259  0.206] *dot* obs[:] + -0.327) * ((max(0, [ 0.259 -0.1   -0.014  0.081  0.132 -0.04  -0.302 -0.089] *dot* obs[:] + -0.384) + -0.5) * (max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) * 0.0))) < obs[4]) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -86.94141867720228
(if (max(0, [-0.045 -0.301 -0.057  0.291 -0.064  0.085 -0.259  0.206] *dot* obs[:] + -0.327) < obs[1]) then: (if ((obs[6] + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if ((max(0, [-0.045 -0.301 -0.057  0.291 -0.064  0.085 -0.259  0.206] *dot* obs[:] + -0.327) * ((max(0, [ 0.259 -0.1   -0.014  0.081  0.132 -0.04  -0.302 -0.089] *dot* obs[:] + -0.384) + -0.5) * (max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) * 0.0))) < obs[4]) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -86.22452303034792
(if (max(0, [-0.083 -0.465 -0.787  0.718 -0.21  -0.48  -0.419  0.154] *dot* obs[:] + -0.232) < obs[1]) then: (if ((obs[6] + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if ((max(0, [-0.045 -0.301 -0.057  0.291 -0.064  0.085 -0.259  0.206] *dot* obs[:] + -0.327) * ((max(0, [ 0.259 -0.1   -0.014  0.081  0.132 -0.04  -0.302 -0.089] *dot* obs[:] + -0.384) + -0.5) * (max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) * 0.0))) < obs[4]) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -82.23456818849768
(if (max(0, [-0.083 -0.465 -0.787  0.718 -0.21  -0.48  -0.419  0.154] *dot* obs[:] + -0.232) < obs[1]) then: (if ((0.0 + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if ((max(0, [-0.045 -0.301 -0.057  0.291 -0.064  0.085 -0.259  0.206] *dot* obs[:] + -0.327) * ((max(0, [ 0.259 -0.1   -0.014  0.081  0.132 -0.04  -0.302 -0.089] *dot* obs[:] + -0.384) + -0.5) * (max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) * 0.0))) < obs[4]) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -82.22416196481379
(if (max(0, [-0.083 -0.465 -0.787  0.718 -0.21  -0.48  -0.419  0.154] *dot* obs[:] + -0.232) < obs[1]) then: (if ((0.0 + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[1] < ((-0.5 + obs[4]) * ((obs[6] + max(0, [-1.15  -0.27   0.346  0.532  0.207  0.127 -0.464  0.139] *dot* obs[:] + -0.547)) + (obs[4] + max(0, [-0.048 -0.539  0.164 -0.15   0.368 -0.176 -0.18   0.147] *dot* obs[:] + -0.695))))) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -81.86231578734937
(if (obs[3] < max(0, [-0.025 -0.265 -0.08   0.382 -0.106 -0.096 -0.487  0.021] *dot* obs[:] + -0.3)) then: (if ((0.0 + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[1] < ((-0.5 + obs[4]) * 1.0)) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -79.20901452047775
(if (obs[2] < max(0, [-0.223 -2.023  0.129 -1.464  0.113  1.205 -0.438  0.24 ] *dot* obs[:] + -0.591)) then: (if ((0.0 + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[1] < (max(0, [-0.091 -0.401 -0.177 -0.147  0.073  0.018 -0.135 -0.242] *dot* obs[:] + -0.485) * 1.0)) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -76.77914312662979
(if (obs[5] < max(0, [-0.223 -2.023  0.129 -1.464  0.113  1.205 -0.438  0.24 ] *dot* obs[:] + -0.591)) then: (if ((0.0 + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[2] < (((((max(0, [-0.177  0.163  0.042 -0.933 -0.005 -0.78   0.484 -1.558] *dot* obs[:] + -0.66) * obs[0]) * obs[4]) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252)) * ((((obs[4] + max(0, [-0.065 -0.362  0.132 -0.015  0.111  0.261  0.005 -0.258] *dot* obs[:] + -0.557)) + (max(0, [-0.177  0.163  0.042 -0.933 -0.005 -0.78   0.484 -1.558] *dot* obs[:] + -0.66) + obs[0])) + ((obs[0] + obs[4]) + (obs[1] + obs[4]))) + obs[2])) * 1.0)) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -68.08897441229469
(if (obs[5] < max(0, [-0.223 -2.023  0.129 -1.464  0.113  1.205 -0.438  0.24 ] *dot* obs[:] + -0.591)) then: (if ((0.0 + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[2] < (((((max(0, [-0.051 -0.407 -0.009  0.126 -0.229 -0.062 -0.157 -0.178] *dot* obs[:] + -0.552) * obs[0]) * obs[4]) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252)) * ((((obs[4] + max(0, [-0.065 -0.362  0.132 -0.015  0.111  0.261  0.005 -0.258] *dot* obs[:] + -0.557)) + (max(0, [-0.177  0.163  0.042 -0.933 -0.005 -0.78   0.484 -1.558] *dot* obs[:] + -0.66) + obs[0])) + ((obs[0] + obs[4]) + (obs[1] + obs[4]))) + obs[2])) * 1.0)) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -67.57945078502519
(if (obs[5] < max(0, [-0.223 -2.023  0.129 -1.464  0.113  1.205 -0.438  0.24 ] *dot* obs[:] + -0.591)) then: (if ((0.0 + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[2] < (((((max(0, [-0.005  0.05  -0.231  0.522  0.044  0.466 -0.172 -0.075] *dot* obs[:] + -0.672) * obs[0]) * obs[4]) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252)) * ((((obs[4] + max(0, [-0.065 -0.362  0.132 -0.015  0.111  0.261  0.005 -0.258] *dot* obs[:] + -0.557)) + (max(0, [-0.177  0.163  0.042 -0.933 -0.005 -0.78   0.484 -1.558] *dot* obs[:] + -0.66) + obs[0])) + ((obs[0] + obs[4]) + (obs[1] + obs[4]))) + obs[2])) * 1.0)) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -63.47058084182324
(if (obs[5] < max(0, [-0.223 -2.023  0.129 -1.464  0.113  1.205 -0.438  0.24 ] *dot* obs[:] + -0.591)) then: (if ((0.0 + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[2] < (((((max(0, [-0.005  0.05  -0.231  0.522  0.044  0.466 -0.172 -0.075] *dot* obs[:] + -0.672) * obs[0]) * obs[4]) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252)) * (obs[4] * -0.5)) * 1.0)) then: (if ((max(0, [ 0.161 -0.56  -0.045  0.011 -0.305  0.014 -0.444  0.197] *dot* obs[:] + -0.527) + obs[3]) < obs[7]) then: act = 3 else: act = 1) else: act = 0))

Current best:  -63.28166279570703
(if (obs[5] < max(0, [-0.223 -2.023  0.129 -1.464  0.113  1.205 -0.438  0.24 ] *dot* obs[:] + -0.591)) then: (if ((0.0 + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -56.60261341704263
(if (obs[5] < max(0, [-0.223 -2.023  0.129 -1.464  0.113  1.205 -0.438  0.24 ] *dot* obs[:] + -0.591)) then: (if ((obs[6] + 0.5) < obs[1]) then: act = 0 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -52.670849219184845
(if (obs[5] < max(0, [-0.07  -0.398 -0.005  0.51   0.     0.1   -0.025 -0.303] *dot* obs[:] + -0.417)) then: (if ((max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501) + 0.5) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -51.173069800593524
(if (obs[5] < max(0, [ 0.231 -0.64   0.262 -0.421 -0.179 -0.091 -0.51  -0.524] *dot* obs[:] + -0.762)) then: (if ((max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501) + 0.5) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -49.861146153418304
(if (obs[5] < max(0, [-0.167 -0.202  0.127 -0.179 -0.014  0.164 -0.095 -0.226] *dot* obs[:] + -0.508)) then: (if ((max(0, [-0.13  -0.575  0.197 -0.01   0.413 -0.258 -0.269 -0.354] *dot* obs[:] + -0.501) + 0.5) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -48.60283690881266
(if (obs[5] < obs[6]) then: (if ((max(0, [-0.158 -0.714 -0.184 -0.734  0.397 -0.266 -0.291 -0.725] *dot* obs[:] + -0.746) + 0.5) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -27.579004568286308
(if (obs[5] < obs[6]) then: (if ((2.0 * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * 0.5)) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -22.87110088921396
(if (obs[5] < obs[6]) then: (if ((2.0 * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * (obs[1] + (max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11) * (5.0 * (5.0 * obs[4])))))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -7.855711259208197
(if (obs[5] < obs[6]) then: (if ((2.0 * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * (obs[1] + (max(0, [ 0.247 -1.879 -0.017  0.276 -0.789  0.217  1.18  -0.428] *dot* obs[:] + 0.11) * (5.0 * (max(0, [-0.305  0.374 -1.113  1.564  0.151 -0.67  -0.027  0.274] *dot* obs[:] + -0.065) * obs[4])))))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -3.8296214938581152
(if (obs[5] < (obs[5] * max(0, [-0.022 -0.233 -0.047  0.305 -0.224  0.124 -0.535  0.146] *dot* obs[:] + -0.335))) then: (if ((2.0 * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  -1.0440322438528016
(if (obs[5] < ((0.5 + obs[5]) * max(0, [-0.022 -0.233 -0.047  0.305 -0.224  0.124 -0.535  0.146] *dot* obs[:] + -0.335))) then: (if ((2.0 * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  2.945931654242945
(if (obs[5] < (obs[1] * max(0, [-0.022 -0.233 -0.047  0.305 -0.224  0.124 -0.535  0.146] *dot* obs[:] + -0.335))) then: (if ((2.0 * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  13.64168053108895
(if (obs[5] < (obs[1] * (0.5 * (obs[7] * 0.5)))) then: (if ((2.0 * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  17.299152092665455
(if (obs[5] < (obs[1] * (0.5 * (obs[7] * 0.5)))) then: (if ((5.0 * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  26.17438557626167
(if (obs[5] < ((max(0, [ 0.158 -0.176  0.23   0.229  0.146 -0.086 -0.355  0.058] *dot* obs[:] + -0.586) + -0.5) * (0.5 * (obs[7] * 0.5)))) then: (if (((((max(0, [ 0.172 -0.147 -0.177  0.193 -0.093  0.092 -0.275  0.298] *dot* obs[:] + -0.628) + 0.5) + 5.0) + obs[0]) * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  31.19311246109181
(if (obs[5] < ((max(0, [ 0.158 -0.176  0.23   0.229  0.146 -0.086 -0.355  0.058] *dot* obs[:] + -0.586) + -0.5) * (0.5 * (obs[7] * 0.5)))) then: (if ((((obs[0] + 5.0) + obs[0]) * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))

Current best:  44.116598396493124
(if (obs[5] < ((max(0, [ 0.039 -0.147  0.043  0.289  0.083  0.05   0.076 -0.044] *dot* obs[:] + -0.435) + -0.5) * (1.0 * (obs[7] * 0.5)))) then: (if ((5.0 * (max(0, [ 0.465 -2.55  -0.03  -1.689 -0.14  -0.662 -0.015 -1.013] *dot* obs[:] + 0.456) * max(0, [-0.558 -0.337 -0.589 -1.209  0.112 -1.379  0.011  0.169] *dot* obs[:] + -0.252))) < obs[1]) then: act = 1 else: act = 2) else: (if (obs[7] < 0.5) then: act = 3 else: act = 0))
