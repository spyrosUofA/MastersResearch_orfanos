created virtual environment CPython3.6.10.final.0-64 in 14869ms
  creator CPython3Posix(dest=/localscratch/orfanos.25136213.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -292.3479039634925
(if (((max(0, [-0.069 -0.395 -0.01   0.514  0.004  0.094 -0.025 -0.305] *dot* obs[:] + -0.414) + 0.5) * max(0, [ 0.033 -0.345  1.044 -1.245 -1.612 -2.791  0.394  0.655] *dot* obs[:] + -0.943)) < 1.0) then: act = 3 else: (if ((1.0 * -0.5) < 0.0) then: act = 0 else: (if (obs[3] < max(0, [ 0.093 -0.221 -0.139  0.094 -0.306 -0.177 -0.205 -0.157] *dot* obs[:] + -0.761)) then: (if (5.0 < 0.5) then: act = 3 else: act = 2) else: (if (max(0, [ 0.426 -0.205  0.541  0.104 -1.898  0.205  0.195  0.41 ] *dot* obs[:] + -0.343) < -0.5) then: act = 3 else: act = 2))))

Current best:  -129.53038370674216
(if (obs[0] < (((obs[1] + max(0, [-0.099 -0.564  0.208  0.004  0.327 -0.324 -0.08  -0.77 ] *dot* obs[:] + -0.653)) + max(0, [-0.288  0.557 -0.044  0.073  0.22   0.364 -0.4   -0.402] *dot* obs[:] + -1.692)) + 2.0)) then: (if ((0.0 + obs[1]) < -0.5) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.5 < obs[3]) then: act = 2 else: (if (0.0 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -94.68003753977271
(if (obs[0] < (1.0 + 1.9108134657787919)) then: (if ((-0.08100641246714187 + obs[1]) < -0.5352051794540955) then: (if (obs[3] < (max(0, [-0.159 -0.201  0.133 -0.18  -0.023  0.13  -0.095 -0.226] *dot* obs[:] + -0.51) + max(0, [-0.072 -0.331 -0.133 -0.046 -0.135 -0.021 -0.157 -0.178] *dot* obs[:] + -0.535))) then: (if (0.5436790538345955 < obs[3]) then: act = 2 else: (if (-0.08864568609193631 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -59.742646075817255
(if (obs[0] < (1.076802029597581 + 1.993167359160052)) then: (if ((0.1126711871653016 + obs[1]) < -0.7107341896917537) then: (if (2.0 < (-0.5 * (max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + max(0, [ 0.103 -0.576 -0.15  -0.032 -0.148  0.091 -0.198 -0.127] *dot* obs[:] + -0.169)))) then: (if (0.7353760640451963 < obs[3]) then: act = 2 else: (if (0.28523306301523765 < obs[1]) then: act = 1 else: act = 3)) else: (if (max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) < obs[6]) then: act = 0 else: act = 1)) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -45.998119219479335
(if (obs[0] < (1.5023437300898328 + 0.13177195294756863)) then: (if ((0.5456517510783389 + (0.0 * (1.0 + max(0, [-1.641 -0.628 -0.211 -2.119  0.795  1.682 -0.556 -0.567] *dot* obs[:] + -0.591)))) < (max(0, [-1.171 -0.726 -0.525 -1.421 -0.718 -1.64  -0.378 -0.67 ] *dot* obs[:] + -1.426) * 5.0)) then: (if (-0.5934572394815664 < (-0.5 * (max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + max(0, [ 0.103 -0.576 -0.15  -0.032 -0.148  0.091 -0.198 -0.127] *dot* obs[:] + -0.169)))) then: (if (0.6501675691462897 < obs[3]) then: act = 2 else: (if (-0.07583775716944721 < obs[1]) then: act = 2 else: act = 3)) else: act = 2) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -42.11378302468889
(if (obs[0] < (1.4368890045869782 + -0.008417605351224863)) then: (if ((1.0 + (0.0 * (1.0 + max(0, [-1.641 -0.628 -0.211 -2.119  0.795  1.682 -0.556 -0.567] *dot* obs[:] + -0.591)))) < (max(0, [-1.171 -0.726 -0.525 -1.421 -0.718 -1.64  -0.378 -0.67 ] *dot* obs[:] + -1.426) * 5.0)) then: (if (-0.286766962493881 < (-0.5 * (max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + max(0, [ 0.103 -0.576 -0.15  -0.032 -0.148  0.091 -0.198 -0.127] *dot* obs[:] + -0.169)))) then: (if (0.6697203509855422 < obs[3]) then: act = 2 else: (if (-0.1442685858399534 < obs[1]) then: act = 2 else: act = 3)) else: act = 2) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -6.589041484536168
(if (obs[0] < (1.704021675824879 + -0.26854306553865226)) then: (if ((0.6748417814323873 + (0.0 * (1.0 + max(0, [-1.641 -0.628 -0.211 -2.119  0.795  1.682 -0.556 -0.567] *dot* obs[:] + -0.591)))) < (max(0, [-1.171 -0.726 -0.525 -1.421 -0.718 -1.64  -0.378 -0.67 ] *dot* obs[:] + -1.426) * 5.0)) then: (if (0.191539814359203 < (-0.5 * (max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217)))) then: (if (0.5052508782366891 < obs[3]) then: act = 2 else: (if (0.1292933161834824 < obs[1]) then: act = 2 else: act = 3)) else: act = 2) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  -4.917029982359798
(if ((((obs[6] + ((obs[4] * -0.5) * obs[2])) + obs[2]) + ((obs[4] * 5.0) * (1.0 + obs[7]))) < (1.1863843887028485 + obs[2])) then: (if ((0.17252584700979673 + (0.0 * (1.0 + max(0, [-1.641 -0.628 -0.211 -2.119  0.795  1.682 -0.556 -0.567] *dot* obs[:] + -0.591)))) < (max(0, [-1.171 -0.726 -0.525 -1.421 -0.718 -1.64  -0.378 -0.67 ] *dot* obs[:] + -1.426) * 5.0)) then: (if (0.7059456370717261 < (-0.5 * (max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217)))) then: (if (-0.15812116809561963 < obs[7]) then: act = 2 else: (if (-0.7240384567309777 < obs[1]) then: act = 2 else: act = 3)) else: act = 2) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))

Current best:  47.52054663052072
(if ((((obs[4] + ((obs[4] * -0.5) * obs[2])) + obs[4]) + ((obs[4] * 5.0) * (1.0 + obs[7]))) < (1.337759925624444 + obs[2])) then: (if ((0.07515700431499582 + ((max(0, [-0.288  0.557 -0.044  0.073  0.22   0.364 -0.4   -0.402] *dot* obs[:] + -1.692) * ((2.0 + 1.0) + 0.5)) * (1.0 + max(0, [-1.641 -0.628 -0.211 -2.119  0.795  1.682 -0.556 -0.567] *dot* obs[:] + -0.591)))) < (max(0, [-1.171 -0.726 -0.525 -1.421 -0.718 -1.64  -0.378 -0.67 ] *dot* obs[:] + -1.426) * 5.0)) then: (if (1.666746095483316 < (-0.5 * 0.5)) then: (if (1.299394139203403 < ((5.0 + 1.0) * (max(0, [ 0.681  0.233 -0.685 -0.634 -2.883  0.383 -0.394 -0.741] *dot* obs[:] + -0.443) + (obs[5] + obs[7])))) then: act = 2 else: (if (-0.32205081144573583 < obs[1]) then: act = 2 else: act = 3)) else: act = 2) else: act = 0) else: (if (((1.0 + obs[2]) * (5.0 + 2.0)) < obs[3]) then: act = 1 else: act = 3))
