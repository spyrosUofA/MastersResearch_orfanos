created virtual environment CPython3.6.10.final.0-64 in 17117ms
  creator CPython3Posix(dest=/localscratch/orfanos.25136215.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -495.2533841486128
act = 1

Current best:  -480.28613352041896
act = 3

Current best:  -472.15485918481545
act = 3

Current best:  -200.33299707815263
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * max(0, [ 0.008 -0.199  0.319  0.137 -0.039 -0.297 -0.563 -0.503] *dot* obs[:] + -0.837)) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -172.04749894934088
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (2.0 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -139.33459438159815
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (0.5 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (obs[0] < max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)) then: act = 1 else: act = 3)) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -136.78020610087546
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (0.5 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (2.0 < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (obs[3] < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (obs[4] < (max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) + obs[6])) then: act = 2 else: act = 2) else: (if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.0) then: (if (-0.5 < 1.0) then: act = 2 else: act = 3) else: (if (obs[0] < obs[6]) then: act = 1 else: act = 0))) else: (if (obs[4] < max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527)) then: (if (max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) < 2.0) then: (if (max(0, [ 0.225 -0.403  0.008  0.018 -0.186  0.17  -0.059  0.06 ] *dot* obs[:] + -0.518) < 2.0) then: (if (2.0 < 1.0) then: act = 0 else: act = 1) else: act = 3) else: (if (obs[4] < -0.5) then: act = 1 else: (if (max(0, [-0.209 -0.256 -0.155  0.332 -0.089 -0.218 -0.487 -0.074] *dot* obs[:] + -0.531) < max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087)) then: act = 0 else: act = 2))) else: (if (obs[4] < max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608)) then: (if (0.0 < max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577)) then: act = 2 else: act = 2) else: (if (max(0, [ 0.297 -0.069 -1.335  1.683  1.115  0.605 -1.127  0.602] *dot* obs[:] + -0.736) < -0.5) then: act = 2 else: (if (obs[6] < obs[2]) then: act = 3 else: act = 0)))))) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -118.24974120503512
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (0.5 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (1.7749494953152398 < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (obs[3] < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (obs[4] < (max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) + obs[6])) then: act = 2 else: act = 2) else: (if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.2308512766872894) then: (if (-0.41006331563273946 < 0.9742398500982594) then: act = 2 else: act = 3) else: (if (obs[0] < obs[6]) then: act = 1 else: act = 0))) else: (if (obs[4] < max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527)) then: (if (max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) < 2.0394761525177763) then: (if (obs[0] < ((obs[0] + 2.0) * obs[7])) then: (if (2.362951793787859 < 0.9203639916775668) then: act = 0 else: act = 1) else: act = 3) else: (if (obs[4] < -0.5397007735234715) then: act = 1 else: (if (max(0, [-0.209 -0.256 -0.155  0.332 -0.089 -0.218 -0.487 -0.074] *dot* obs[:] + -0.531) < max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087)) then: act = 0 else: act = 2))) else: (if (obs[4] < max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608)) then: (if (0.03544511896577135 < max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577)) then: act = 2 else: act = 2) else: (if (max(0, [ 0.297 -0.069 -1.335  1.683  1.115  0.605 -1.127  0.602] *dot* obs[:] + -0.736) < -0.3949093496538756) then: act = 2 else: (if (obs[6] < obs[2]) then: act = 3 else: act = 0)))))) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -114.49549370517771
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (0.5 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (1.9453545301868596 < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (obs[3] < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (obs[4] < (max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) + obs[6])) then: act = 2 else: act = 2) else: (if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.310271817285333) then: (if (-0.3621668577010635 < 0.7666163978620806) then: act = 2 else: act = 3) else: (if (obs[0] < obs[6]) then: act = 1 else: act = 0))) else: (if (obs[4] < max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527)) then: (if (max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) < 1.987476218891318) then: (if (obs[0] < ((obs[0] + 2.0) * obs[7])) then: (if (2.430381870538405 < max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738)) then: act = 0 else: act = 1) else: act = 3) else: (if (obs[4] < -0.28173913541963186) then: act = 1 else: (if (max(0, [-0.209 -0.256 -0.155  0.332 -0.089 -0.218 -0.487 -0.074] *dot* obs[:] + -0.531) < max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087)) then: act = 0 else: act = 2))) else: (if (obs[4] < max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608)) then: (if (0.0934276048095968 < max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577)) then: act = 2 else: act = 2) else: (if (max(0, [ 0.297 -0.069 -1.335  1.683  1.115  0.605 -1.127  0.602] *dot* obs[:] + -0.736) < -0.34288209242415235) then: act = 2 else: (if (obs[6] < obs[2]) then: act = 3 else: act = 0)))))) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -108.42861161734584
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (0.5 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (1.9857522196903863 < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (obs[3] < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (obs[4] < (max(0, [ 0.186  0.056 -0.091 -0.185 -0.209  0.165 -0.013 -0.393] *dot* obs[:] + -0.52) + obs[6])) then: act = 2 else: act = 2) else: (if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.32075112478627) then: (if (-0.9503195521583413 < 0.9714421857877084) then: act = 2 else: act = 3) else: (if (obs[0] < obs[6]) then: act = 1 else: act = 0))) else: (if (obs[4] < max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527)) then: (if (max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) < 2.1785590756615894) then: (if (obs[0] < ((obs[0] + 2.0) * obs[7])) then: (if (2.2947949168446766 < max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738)) then: act = 0 else: act = 1) else: act = 3) else: (if (obs[4] < -0.34173182587343964) then: act = 1 else: (if (max(0, [-0.209 -0.256 -0.155  0.332 -0.089 -0.218 -0.487 -0.074] *dot* obs[:] + -0.531) < max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087)) then: act = 0 else: act = 2))) else: (if (obs[4] < max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608)) then: (if (0.48092335523482604 < max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577)) then: act = 2 else: act = 2) else: (if (max(0, [ 0.297 -0.069 -1.335  1.683  1.115  0.605 -1.127  0.602] *dot* obs[:] + -0.736) < 0.0846013768966158) then: act = 2 else: (if (obs[6] < obs[2]) then: act = 3 else: act = 0)))))) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -100.07162476413545
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (0.5 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (1.9967747326706684 < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (obs[3] < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (((obs[1] + obs[6]) * (1.0 * obs[1])) < (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.0 + obs[4]))) then: (if (obs[5] < max(0, [ 0.039 -0.147  0.043  0.289  0.083  0.05   0.076 -0.044] *dot* obs[:] + -0.435)) then: (if (2.0 < 0.0) then: act = 2 else: (if (0.5 < 0.0) then: (if (obs[5] < obs[1]) then: act = 2 else: act = 1) else: act = 0)) else: act = 0) else: (if (obs[3] < (obs[5] + 1.0)) then: (if (0.5 < (max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589) * 0.5)) then: (if (max(0, [-0.664 -0.015  1.481  1.42   4.092 -0.714 -1.197 -0.366] *dot* obs[:] + -0.11) < obs[3]) then: act = 3 else: act = 3) else: act = 2) else: (if (max(0, [ 0.191 -0.214  0.038 -0.043 -0.007  0.117 -0.381  0.113] *dot* obs[:] + -0.564) < obs[4]) then: (if (max(0, [ 0.022 -0.017  0.085  0.279  0.09   0.003  0.153 -0.323] *dot* obs[:] + -0.444) < obs[6]) then: act = 2 else: act = 0) else: (if (obs[4] < obs[6]) then: act = 3 else: act = 3)))) else: (if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.3024467805887885) then: (if (-0.8911864704073069 < 1.0374488139684908) then: act = 2 else: act = 3) else: (if (obs[0] < obs[6]) then: act = 1 else: act = 0))) else: (if (obs[4] < max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527)) then: (if (max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) < 2.106156899922395) then: (if (obs[0] < ((obs[0] + 2.0) * obs[7])) then: (if (2.2924945439160798 < max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738)) then: act = 0 else: act = 1) else: act = 3) else: (if (obs[4] < -0.3169050230241209) then: act = 1 else: (if (max(0, [-0.209 -0.256 -0.155  0.332 -0.089 -0.218 -0.487 -0.074] *dot* obs[:] + -0.531) < max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087)) then: act = 0 else: act = 2))) else: (if (obs[4] < max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608)) then: (if (0.553456599807913 < max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577)) then: act = 2 else: act = 2) else: (if (max(0, [ 0.297 -0.069 -1.335  1.683  1.115  0.605 -1.127  0.602] *dot* obs[:] + -0.736) < 0.0310746132105989) then: act = 2 else: (if (obs[6] < obs[2]) then: act = 3 else: act = 0)))))) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -60.20550504691755
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (0.5 * ((max(0, [-1.38  -0.754 -0.234  2.075  1.474 -0.34  -0.846 -0.431] *dot* obs[:] + -0.721) * max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847)) * obs[1])))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (1.9967747326706684 < max(0, [-0.181 -0.78  -0.422  0.225 -0.41   0.432 -0.616  0.452] *dot* obs[:] + -0.572)) then: (if (obs[3] < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (((obs[1] + obs[6]) * (1.0 * obs[1])) < (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[1]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (2.0 + obs[4]))) then: (if (obs[5] < max(0, [ 0.039 -0.147  0.043  0.289  0.083  0.05   0.076 -0.044] *dot* obs[:] + -0.435)) then: (if (2.0 < 0.0) then: act = 2 else: (if (0.5 < 0.0) then: (if (obs[5] < obs[1]) then: act = 2 else: act = 1) else: act = 0)) else: act = 0) else: (if (obs[3] < (obs[5] + 1.0)) then: (if (0.5 < (max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589) * 0.5)) then: (if (max(0, [-0.664 -0.015  1.481  1.42   4.092 -0.714 -1.197 -0.366] *dot* obs[:] + -0.11) < obs[3]) then: act = 3 else: act = 3) else: act = 2) else: (if (max(0, [ 0.191 -0.214  0.038 -0.043 -0.007  0.117 -0.381  0.113] *dot* obs[:] + -0.564) < obs[4]) then: (if (max(0, [-0.435 -0.234 -0.285 -0.017  0.283 -0.24   0.363  0.259] *dot* obs[:] + -0.642) < obs[6]) then: act = 2 else: act = 0) else: (if (obs[4] < obs[6]) then: act = 3 else: act = 3)))) else: (if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.3024467805887885) then: (if (-0.8911864704073069 < 1.0374488139684908) then: act = 2 else: act = 3) else: (if (obs[0] < obs[6]) then: act = 1 else: act = 0))) else: (if (obs[4] < max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527)) then: (if (max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) < 2.106156899922395) then: (if (obs[0] < ((obs[0] + 2.0) * obs[7])) then: (if (2.2924945439160798 < max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738)) then: act = 0 else: act = 1) else: act = 3) else: (if (obs[4] < -0.3169050230241209) then: act = 1 else: (if (max(0, [-0.209 -0.256 -0.155  0.332 -0.089 -0.218 -0.487 -0.074] *dot* obs[:] + -0.531) < max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087)) then: act = 0 else: act = 2))) else: (if (obs[4] < max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608)) then: (if (0.553456599807913 < max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577)) then: act = 2 else: act = 2) else: (if (max(0, [ 0.297 -0.069 -1.335  1.683  1.115  0.605 -1.127  0.602] *dot* obs[:] + -0.736) < 0.0310746132105989) then: act = 2 else: (if (obs[6] < obs[2]) then: act = 3 else: act = 0)))))) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))

Current best:  -58.3583816302344
(if ((max(0, [-0.616 -4.452 -0.056 -0.24  -0.689 -0.18   0.301 -1.316] *dot* obs[:] + 0.71) * (1.0 * (0.5 * obs[2]))) < max(0, [-0.191  0.224 -0.675 -0.69   3.349  0.31  -0.716 -0.042] *dot* obs[:] + -0.505)) then: (if ((obs[3] * max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) < obs[5]) then: act = 0 else: (if (2.1935866004538913 < obs[5]) then: (if (obs[3] < max(0, [-0.289 -1.022 -0.523 -0.591 -0.038 -1.384 -0.024  0.029] *dot* obs[:] + -0.623)) then: (if (((obs[1] + obs[6]) * (1.0 * obs[7])) < (((max(0, [-0.616 -0.269  0.048  0.441 -0.808 -0.596 -0.37  -0.353] *dot* obs[:] + -0.648) + obs[3]) + max(0, [ 0.071 -0.658  0.044 -0.149 -0.173 -0.041 -0.007 -0.017] *dot* obs[:] + -0.565)) + (1.8191998000182836 + obs[4]))) then: (if (obs[3] < max(0, [ 0.039 -0.147  0.043  0.289  0.083  0.05   0.076 -0.044] *dot* obs[:] + -0.435)) then: act = 1 else: act = 0) else: (if (obs[3] < (obs[5] + 1.1158441478290042)) then: (if (-0.7137544810831711 < (max(0, [ 0.071 -0.385  0.217  0.179  0.069 -0.068 -0.044  0.117] *dot* obs[:] + -0.589) * 0.5)) then: (if (max(0, [-0.664 -0.015  1.481  1.42   4.092 -0.714 -1.197 -0.366] *dot* obs[:] + -0.11) < obs[3]) then: act = 3 else: act = 3) else: act = 2) else: (if (max(0, [ 0.191 -0.214  0.038 -0.043 -0.007  0.117 -0.381  0.113] *dot* obs[:] + -0.564) < obs[4]) then: (if (max(0, [-0.435 -0.234 -0.285 -0.017  0.283 -0.24   0.363  0.259] *dot* obs[:] + -0.642) < obs[6]) then: act = 2 else: act = 0) else: (if (obs[4] < obs[6]) then: act = 3 else: act = 3)))) else: (if (max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528) < 2.436776207760209) then: (if (0.8152799055294477 < 1.616023840520879) then: act = 2 else: act = 3) else: (if (obs[0] < obs[6]) then: act = 1 else: act = 0))) else: (if (obs[4] < max(0, [ 1.839 -1.011  2.296  0.08  -0.785  0.472  0.05   0.411] *dot* obs[:] + -0.527)) then: (if (max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) < 2.3966741824628333) then: (if (obs[0] < ((obs[0] + 2.0) * obs[7])) then: (if (3.788536402243189 < max(0, [-0.362 -0.459 -1.004  1.459  1.181  0.026 -0.401  0.071] *dot* obs[:] + -0.738)) then: act = 0 else: act = 1) else: act = 3) else: (if (obs[4] < 0.4567550453191364) then: act = 1 else: (if (max(0, [-0.209 -0.256 -0.155  0.332 -0.089 -0.218 -0.487 -0.074] *dot* obs[:] + -0.531) < max(0, [-0.321 -0.89  -1.397  2.062 -0.472  0.721  0.349  1.791] *dot* obs[:] + 0.087)) then: act = 0 else: act = 2))) else: (if (obs[4] < max(0, [-0.146 -0.919  0.018 -0.102  0.218 -0.037 -0.178  0.024] *dot* obs[:] + -0.608)) then: (if (-0.8447593493192826 < max(0, [-0.407 -0.399 -0.067  0.701  0.26   0.228 -0.881  0.132] *dot* obs[:] + -0.577)) then: act = 2 else: act = 2) else: (if (max(0, [ 0.297 -0.069 -1.335  1.683  1.115  0.605 -1.127  0.602] *dot* obs[:] + -0.736) < 1.1488809918005414) then: act = 2 else: (if (obs[6] < obs[2]) then: act = 3 else: act = 0)))))) else: (if (obs[6] < max(0, [-0.297 -0.728 -0.175  0.276  0.231 -0.051  0.1   -0.092] *dot* obs[:] + -0.758)) then: act = 2 else: act = 1))
