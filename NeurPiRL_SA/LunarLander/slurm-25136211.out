created virtual environment CPython3.6.10.final.0-64 in 23486ms
  creator CPython3Posix(dest=/localscratch/orfanos.25136211.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -126.24523244731981
(if (2.0 < ((max(0, [-0.32  -0.725  1.033  0.324 -1.926 -0.173 -0.525 -0.536] *dot* obs[:] + 0.086) + obs[0]) * (5.0 + obs[6]))) then: act = 1 else: act = 0)

Current best:  -90.28362478541547
(if ((2.0 + obs[6]) < ((max(0, [-0.32  -0.725  1.033  0.324 -1.926 -0.173 -0.525 -0.536] *dot* obs[:] + 0.086) + obs[0]) * (5.0 + obs[6]))) then: act = 1 else: act = 0)

Current best:  -85.81892868577606
(if ((2.0 + obs[6]) < ((max(0, [-0.32  -0.725  1.033  0.324 -1.926 -0.173 -0.525 -0.536] *dot* obs[:] + 0.086) + obs[0]) * (5.0 + obs[6]))) then: act = 1 else: act = 0)

Current best:  -75.04878278745423
(if ((2.052887621574548 + obs[6]) < ((max(0, [-0.068 -0.586 -0.067 -0.323 -0.397  0.096  0.32  -0.537] *dot* obs[:] + -0.556) + obs[0]) * (5.0 + obs[6]))) then: act = 1 else: act = 0)

Current best:  -74.66221857914556
(if ((1.909608300112881 + obs[6]) < ((((2.0 + max(0, [-0.014 -0.082 -0.145  0.108 -0.134  0.131  0.115  0.029] *dot* obs[:] + -0.76)) + obs[2]) * max(0, [ 0.192 -0.8   -0.03  -0.144  0.145 -0.224 -0.264 -0.371] *dot* obs[:] + -0.549)) * obs[3])) then: act = 1 else: act = 0)

Current best:  -71.4935917247874
(if ((obs[7] + obs[6]) < ((((2.0 + max(0, [-0.014 -0.082 -0.145  0.108 -0.134  0.131  0.115  0.029] *dot* obs[:] + -0.76)) + obs[2]) * max(0, [ 0.192 -0.8   -0.03  -0.144  0.145 -0.224 -0.264 -0.371] *dot* obs[:] + -0.549)) * obs[3])) then: act = 1 else: act = 0)

Current best:  -70.10518553795221
(if (max(0, [ 0.046 -0.223 -0.047 -0.098 -0.031 -0.171 -0.099  0.206] *dot* obs[:] + -0.575) < max(0, [-0.032 -0.305 -0.052 -0.002 -0.033  0.058 -0.331 -0.266] *dot* obs[:] + -0.259)) then: act = 1 else: act = 0)

Current best:  -57.754741633981766
(if ((max(0, [ 0.017 -0.592  0.075  0.374  0.29   0.056  0.035 -0.03 ] *dot* obs[:] + -0.642) + obs[5]) < obs[6]) then: (if ((max(0, [ 0.109 -1.123  0.36   0.303 -0.925 -1.108 -0.37  -0.816] *dot* obs[:] + -0.098) + obs[6]) < max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) then: (if ((obs[4] * obs[1]) < obs[6]) then: act = 2 else: act = 1) else: act = 0) else: (if (obs[5] < (2.0 * obs[1])) then: act = 3 else: act = 0))

Current best:  -36.43854333549871
(if ((max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) + obs[5]) < obs[6]) then: (if ((max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847) + ((-0.7041265326246161 + obs[3]) + 1.6145804085135809)) < max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) then: (if (obs[1] < 1.921956631002636) then: act = 2 else: act = 1) else: act = 0) else: (if (obs[5] < (2.0 * obs[1])) then: act = 3 else: act = 0))

Current best:  -26.192610963554635
(if ((max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) + obs[5]) < obs[6]) then: (if ((max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847) + ((-0.588815720001937 + obs[3]) + 1.5553161093479593)) < max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) then: (if (((obs[2] + 0.5) + (max(0, [ 0.017 -0.592  0.075  0.374  0.29   0.056  0.035 -0.03 ] *dot* obs[:] + -0.642) + max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597))) < (max(0, [ 0.289  0.008 -0.218  0.046 -0.093  0.025 -0.186  0.222] *dot* obs[:] + -0.514) + (((-0.5 + 5.0) + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) + max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)))) then: act = 2 else: act = 1) else: act = 0) else: (if (obs[5] < (2.0 * obs[1])) then: act = 3 else: act = 0))

Current best:  -23.544218024365417
(if ((max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) + obs[5]) < obs[6]) then: (if ((max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847) + ((-0.5968044732812582 + obs[3]) + 1.279114028614973)) < max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) then: (if ((((5.0 * max(0, [ 0.789 -0.52  -0.196 -0.175  0.68  -0.314 -0.668 -0.303] *dot* obs[:] + -0.338)) + 0.9834785286267023) + (max(0, [ 0.017 -0.592  0.075  0.374  0.29   0.056  0.035 -0.03 ] *dot* obs[:] + -0.642) + max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597))) < (max(0, [ 0.289  0.008 -0.218  0.046 -0.093  0.025 -0.186  0.222] *dot* obs[:] + -0.514) + (((-0.8450934427147025 + 5.405527206884399) + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) + max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)))) then: act = 2 else: act = 1) else: act = 0) else: (if (obs[5] < (2.0 * obs[1])) then: act = 3 else: act = 0))

Current best:  27.061974167400344
(if ((max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) + obs[5]) < obs[6]) then: (if ((max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847) + ((-0.2585602567262293 + obs[3]) + 0.27017862372043694)) < max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) then: (if ((((5.0 * max(0, [ 0.789 -0.52  -0.196 -0.175  0.68  -0.314 -0.668 -0.303] *dot* obs[:] + -0.338)) + 0.4895152261626879) + (max(0, [ 0.017 -0.592  0.075  0.374  0.29   0.056  0.035 -0.03 ] *dot* obs[:] + -0.642) + max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597))) < (max(0, [ 0.022 -0.296 -0.177  0.381 -0.031  0.123 -0.334  0.123] *dot* obs[:] + -0.369) + (((max(0, [ 0.014 -0.458 -0.094 -0.102  0.065  0.121 -0.135 -0.267] *dot* obs[:] + -0.582) + max(0, [ 0.675 -0.431  0.055  0.44   1.325  0.445 -0.143 -0.293] *dot* obs[:] + -0.11)) + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) + max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)))) then: act = 2 else: act = 1) else: act = 0) else: (if (obs[5] < (2.0 * obs[1])) then: act = 3 else: act = 0))

Current best:  32.484906675413974
(if ((max(0, [ 0.018 -0.549  0.104  0.167  0.332 -0.244 -0.094 -0.21 ] *dot* obs[:] + -0.439) + obs[5]) < obs[6]) then: (if ((max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847) + ((0.13936851702786496 + obs[3]) + -0.06335176246849486)) < max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) then: (if ((((5.0 * max(0, [ 0.789 -0.52  -0.196 -0.175  0.68  -0.314 -0.668 -0.303] *dot* obs[:] + -0.338)) + 0.3846075318454647) + (max(0, [ 0.017 -0.592  0.075  0.374  0.29   0.056  0.035 -0.03 ] *dot* obs[:] + -0.642) + max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597))) < (max(0, [ 0.022 -0.296 -0.177  0.381 -0.031  0.123 -0.334  0.123] *dot* obs[:] + -0.369) + ((0.0 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) + max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)))) then: act = 2 else: act = 1) else: act = 0) else: (if (obs[5] < (2.0 * obs[1])) then: act = 3 else: act = 0))

Current best:  49.867136941470875
(if (obs[5] < obs[6]) then: (if ((max(0, [-0.447 -0.127 -0.412 -0.03  -0.106  0.946  0.152 -0.536] *dot* obs[:] + -0.847) + ((0.3889565211270277 + obs[3]) + -0.38593188141696944)) < max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) then: (if ((((5.0 * max(0, [ 0.789 -0.52  -0.196 -0.175  0.68  -0.314 -0.668 -0.303] *dot* obs[:] + -0.338)) + 0.17416368650204167) + (max(0, [ 0.017 -0.592  0.075  0.374  0.29   0.056  0.035 -0.03 ] *dot* obs[:] + -0.642) + max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597))) < (max(0, [ 0.022 -0.296 -0.177  0.381 -0.031  0.123 -0.334  0.123] *dot* obs[:] + -0.369) + ((0.1628162402512192 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) + max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)))) then: act = 2 else: act = 1) else: act = 0) else: (if (obs[5] < (2.0 * obs[1])) then: act = 3 else: act = 0))

Current best:  88.30906028038768
(if (obs[4] < obs[6]) then: (if ((5.0 * (((0.0 + (obs[1] + obs[3])) + max(0, [ 0.074 -0.714  0.134 -0.143 -0.318 -0.046 -0.613 -0.635] *dot* obs[:] + -0.134)) + obs[2])) < max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) then: (if ((((5.0 * max(0, [ 0.789 -0.52  -0.196 -0.175  0.68  -0.314 -0.668 -0.303] *dot* obs[:] + -0.338)) + 0.17277638594785147) + (max(0, [ 0.637 -0.049  0.111  0.089 -0.005 -0.328 -0.033  0.294] *dot* obs[:] + -0.938) + max(0, [-0.857 -2.681  0.311  0.912 -2.19   1.193 -0.093 -0.332] *dot* obs[:] + -0.597))) < (max(0, [ 0.022 -0.296 -0.177  0.381 -0.031  0.123 -0.334  0.123] *dot* obs[:] + -0.369) + ((0.12371953864781211 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) + max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)))) then: act = 2 else: act = 1) else: act = 0) else: (if (obs[5] < (2.0 * obs[1])) then: act = 3 else: act = 0))

Current best:  162.6367430302203
(if (obs[4] < obs[6]) then: (if ((5.0 * (((0.0 + (obs[1] + obs[3])) + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) + obs[2])) < max(0, [-0.494 -1.462  0.048 -0.524  0.1    0.161 -0.609 -0.483] *dot* obs[:] + -0.354)) then: (if ((((5.0 * max(0, [ 0.789 -0.52  -0.196 -0.175  0.68  -0.314 -0.668 -0.303] *dot* obs[:] + -0.338)) + 1.0347751663488187) + max(0, [ 0.735 -2.09  -0.072 -0.118 -1.658  0.643  0.183 -0.492] *dot* obs[:] + -0.561)) < ((obs[2] + (max(0, [-0.072 -1.556 -0.802 -0.706  0.799  0.604 -0.25  -0.57 ] *dot* obs[:] + 0.458) + 0.44945004216484347)) + ((0.18769173262478142 + max(0, [-0.115 -1.158  0.232 -0.894  0.814 -0.312  0.234  0.295] *dot* obs[:] + -0.39)) + max(0, [ 0.025 -0.149  0.267 -2.143  3.321 -0.129 -0.21  -0.253] *dot* obs[:] + -0.528)))) then: act = 2 else: act = 1) else: act = 0) else: (if (obs[5] < (2.0 * obs[1])) then: act = 3 else: act = 0))
