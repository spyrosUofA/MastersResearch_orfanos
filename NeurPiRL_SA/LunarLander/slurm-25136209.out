created virtual environment CPython3.6.10.final.0-64 in 20547ms
  creator CPython3Posix(dest=/localscratch/orfanos.25136209.0/env, clear=False, global=False)
  seeder FromAppData(download=False, pip=latest, setuptools=latest, wheel=latest, via=copy, app_data_dir=/home/orfanos/.local/share/virtualenv/seed-app-data/v1.0.1)
  activators BashActivator,CShellActivator,FishActivator,PowerShellActivator,PythonActivator,XonshActivator
Ignoring pip: markers 'python_version < "3"' don't match your environment
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pip-21.2.3+computecanada-py3-none-any.whl
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 20.0.2
    Uninstalling pip-20.0.2:
      Successfully uninstalled pip-20.0.2
Successfully installed pip-21.2.3+computecanada
Looking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx512, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/torch-1.6.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/bayesian_optimization-1.2.0-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/cloudpickle-1.6.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/future-0.18.2+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/gym-0.18.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/box2d_py-2.3.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/joblib-1.0.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pandas-1.0.3+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/Pillow-7.2.0+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pyglet-1.5.0+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scikit_learn-0.24.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/scipy-1.4.1+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/threadpoolctl-2.1.0+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic/numpy-1.19.5+computecanada-cp36-cp36m-linux_x86_64.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/python_dateutil-2.8.2+computecanada-py2.py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/pytz-2021.1+computecanada-py3-none-any.whl
Processing /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic/six-1.16.0+computecanada-py2.py3-none-any.whl
Installing collected packages: numpy, threadpoolctl, six, scipy, joblib, future, scikit-learn, pytz, python-dateutil, pyglet, Pillow, cloudpickle, torch, pandas, gym, Box2d-py, bayesian-optimization
Successfully installed Box2d-py-2.3.5+computecanada Pillow-7.2.0+computecanada bayesian-optimization-1.2.0 cloudpickle-1.6.0+computecanada future-0.18.2+computecanada gym-0.18.0+computecanada joblib-1.0.1+computecanada numpy-1.19.5+computecanada pandas-1.0.3+computecanada pyglet-1.5.0+computecanada python-dateutil-2.8.2+computecanada pytz-2021.1+computecanada scikit-learn-0.24.1+computecanada scipy-1.4.1+computecanada six-1.16.0+computecanada threadpoolctl-2.1.0+computecanada torch-1.6.0+computecanada
RUN
Environment
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)
/home/orfanos/MastersResearch_orfanos/NeurPiRL_SA/LunarLander/SimulatedAnnealing.py:175: RuntimeWarning: overflow encountered in exp
  return np.exp(self.beta * (next_score - current_score) / self.current_temperature)

Current best:  -499.5313594666897
(if ((2.0 * (1.0 * -0.5)) < 0.5) then: (if (obs[1] < (obs[0] * max(0, [-0.237 -0.673 -0.158  0.484  0.092  0.081 -0.218  0.189] *dot* obs[:] + -0.659))) then: act = 0 else: (if (-0.5 < max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213)) then: (if (1.0 < 1.0) then: act = 1 else: act = 1) else: (if (max(0, [-0.024 -0.259  0.139  0.266 -0.14  -0.014  0.038  0.341] *dot* obs[:] + -0.617) < max(0, [ 1.469 -1.55   1.472 -1.618  0.026  0.618 -0.224 -0.105] *dot* obs[:] + -0.739)) then: act = 3 else: act = 2))) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  -498.6036562878011
(if ((2.0 * (1.0 * -0.5)) < 0.5047495467335522) then: (if (obs[1] < (obs[0] * max(0, [-0.121 -0.5   -0.378  0.222  0.086  0.221  0.36  -0.22 ] *dot* obs[:] + -0.773))) then: act = 0 else: (if (-0.42630380296477677 < max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213)) then: (if (0.9097446595377474 < 1.0630260207705151) then: act = 1 else: act = 1) else: (if (max(0, [-0.024 -0.259  0.139  0.266 -0.14  -0.014  0.038  0.341] *dot* obs[:] + -0.617) < max(0, [ 1.469 -1.55   1.472 -1.618  0.026  0.618 -0.224 -0.105] *dot* obs[:] + -0.739)) then: act = 3 else: act = 2))) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  -463.0589914675621
(if ((2.0 * (1.0 * -0.5)) < 0.5062891610315027) then: (if (obs[5] < (obs[0] * max(0, [-0.121 -0.5   -0.378  0.222  0.086  0.221  0.36  -0.22 ] *dot* obs[:] + -0.773))) then: act = 0 else: (if (-0.43109113212041195 < max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213)) then: (if (1.148054916828058 < 1.1912826788356423) then: act = 1 else: act = 1) else: (if (max(0, [-0.024 -0.259  0.139  0.266 -0.14  -0.014  0.038  0.341] *dot* obs[:] + -0.617) < max(0, [ 1.469 -1.55   1.472 -1.618  0.026  0.618 -0.224 -0.105] *dot* obs[:] + -0.739)) then: act = 3 else: act = 2))) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  -131.13867951055303
(if ((2.0 * (1.0 * -0.5)) < 0.5062891610315027) then: (if (obs[5] < (obs[0] * max(0, [-0.121 -0.5   -0.378  0.222  0.086  0.221  0.36  -0.22 ] *dot* obs[:] + -0.773))) then: act = 0 else: (if (-0.43109113212041195 < max(0, [ 0.069  0.358  0.627  0.313 -1.215 -2.294  0.265  0.104] *dot* obs[:] + -0.213)) then: act = 0 else: (if (max(0, [-0.024 -0.259  0.139  0.266 -0.14  -0.014  0.038  0.341] *dot* obs[:] + -0.617) < max(0, [ 1.469 -1.55   1.472 -1.618  0.026  0.618 -0.224 -0.105] *dot* obs[:] + -0.739)) then: act = 3 else: act = 2))) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  -103.68639592602554
(if ((2.0 * (1.0 * -0.5)) < 0.5062891610315027) then: (if (obs[5] < (obs[0] * max(0, [-0.121 -0.5   -0.378  0.222  0.086  0.221  0.36  -0.22 ] *dot* obs[:] + -0.773))) then: act = 0 else: (if (-0.43109113212041195 < max(0, [-0.023 -0.652  0.062  0.707 -0.005  0.026 -0.257  0.245] *dot* obs[:] + -0.421)) then: act = 0 else: (if (max(0, [-0.024 -0.259  0.139  0.266 -0.14  -0.014  0.038  0.341] *dot* obs[:] + -0.617) < max(0, [ 1.469 -1.55   1.472 -1.618  0.026  0.618 -0.224 -0.105] *dot* obs[:] + -0.739)) then: act = 3 else: act = 2))) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  -101.95261929095227
(if ((2.0 * (1.0 * -0.5)) < 0.4480426236976489) then: (if (obs[5] < (obs[0] * max(0, [-0.121 -0.5   -0.378  0.222  0.086  0.221  0.36  -0.22 ] *dot* obs[:] + -0.773))) then: act = 0 else: (if (-0.4073988081561625 < max(0, [-0.023 -0.652  0.062  0.707 -0.005  0.026 -0.257  0.245] *dot* obs[:] + -0.421)) then: act = 0 else: act = 2)) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  -96.68868647959619
(if ((2.0 * (-0.5 * -0.5)) < 0.8491696132338757) then: (if (obs[5] < (obs[0] * max(0, [-0.121 -0.5   -0.378  0.222  0.086  0.221  0.36  -0.22 ] *dot* obs[:] + -0.773))) then: act = 0 else: (if (-0.5995857447885596 < max(0, [-0.023 -0.652  0.062  0.707 -0.005  0.026 -0.257  0.245] *dot* obs[:] + -0.421)) then: act = 0 else: act = 2)) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  -78.4259202233728
(if ((2.0 * (-0.5 * (5.0 + 0.0))) < 0.6992353470380763) then: (if (obs[5] < (obs[0] * max(0, [-0.121 -0.5   -0.378  0.222  0.086  0.221  0.36  -0.22 ] *dot* obs[:] + -0.773))) then: act = 0 else: (if (-0.5526452962791579 < max(0, [-0.023 -0.652  0.062  0.707 -0.005  0.026 -0.257  0.245] *dot* obs[:] + -0.421)) then: act = 0 else: act = 2)) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  -61.75883413952822
(if (obs[5] < 1.0152711890957198) then: (if (obs[5] < (obs[0] * max(0, [-0.121 -0.5   -0.378  0.222  0.086  0.221  0.36  -0.22 ] *dot* obs[:] + -0.773))) then: act = 1 else: (if ((max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) * (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) + (max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + (obs[6] + (obs[2] + max(0, [ 0.13  -0.271 -0.041 -0.073 -0.194  0.18  -0.21   0.016] *dot* obs[:] + -0.421)))))) < obs[1]) then: act = 0 else: act = 2)) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  14.887357803103388
(if (obs[5] < 0.9212383687759617) then: (if (obs[5] < (obs[0] * max(0, [-0.121 -0.5   -0.378  0.222  0.086  0.221  0.36  -0.22 ] *dot* obs[:] + -0.773))) then: act = 1 else: (if ((max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) * (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) + (max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + (obs[6] + (obs[1] + max(0, [ 0.13  -0.271 -0.041 -0.073 -0.194  0.18  -0.21   0.016] *dot* obs[:] + -0.421)))))) < obs[1]) then: act = 0 else: act = 2)) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  16.453289371858574
(if (obs[2] < 1.6319978726879356) then: (if (obs[5] < (max(0, [-0.924 -0.646 -0.067  0.304  0.128 -0.31   0.256 -1.156] *dot* obs[:] + -1.219) * max(0, [ 0.165 -0.404 -0.016 -0.07  -0.013  0.004 -0.051  0.039] *dot* obs[:] + -0.577))) then: act = 1 else: (if ((max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) * (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) + (max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + (obs[6] + (obs[1] + max(0, [ 0.13  -0.271 -0.041 -0.073 -0.194  0.18  -0.21   0.016] *dot* obs[:] + -0.421)))))) < obs[1]) then: act = 0 else: act = 2)) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))

Current best:  20.507213586958812
(if (obs[2] < 2.267472422898819) then: (if (obs[6] < max(0, [-0.18  -0.129 -0.029  0.094  0.139 -0.101  0.133 -0.322] *dot* obs[:] + -0.567)) then: act = 1 else: (if ((max(0, [ 0.498 -1.397  1.877 -2.058  1.356 -1.267 -0.248 -0.821] *dot* obs[:] + 0.217) * (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) + (max(0, [-0.163 -0.206  0.009  0.092 -0.003 -0.044  0.038  0.103] *dot* obs[:] + -0.428) + (obs[6] + (obs[1] + max(0, [ 0.13  -0.271 -0.041 -0.073 -0.194  0.18  -0.21   0.016] *dot* obs[:] + -0.421)))))) < obs[1]) then: act = 0 else: act = 2)) else: (if (max(0, [ 0.604  0.151 -0.012  0.587  0.066 -0.145 -0.359 -0.203] *dot* obs[:] + -0.679) < obs[2]) then: act = 0 else: (if (obs[7] < obs[1]) then: act = 3 else: act = 2)))
