1 
(if (((4.0 * obs[0]) + ((obs[1] + obs[3]) + ((4.0 + (obs[0] * -2.0)) * (obs[7] * 0.0)))) < 2.2739106510569185) then: (if ((obs[5] * (((obs[2] + 2.0) * 2.0) + obs[0])) < (4.0 * obs[3])) then: (if (4.661776620425723 < obs[3]) then: act = 3 else: (if (obs[6] < obs[1]) then: act = 1 else: act = 0)) else: act = 2) else: (if (-2.3032659731000082 < obs[1]) then: act = 3 else: act = 1))
2 
(if (((4.0 * obs[0]) + ((obs[1] + (2.1317924840948232 + obs[6])) + ((4.0 + (obs[0] * -2.0)) * (obs[7] * 0.0)))) < 3.2739106510569185) then: (if ((obs[5] * (((obs[2] + 2.0) * 2.0) + obs[0])) < (4.0 * obs[3])) then: (if (5.661776620425723 < obs[3]) then: act = 3 else: (if (obs[6] < obs[1]) then: act = 1 else: act = 0)) else: act = 2) else: (if (-2.302059681234789 < obs[1]) then: act = 3 else: act = 1))
3 
(if (((((((4.0 * (((((obs[0] * ((obs[4] * obs[5]) + obs[6])) + obs[4]) + ((obs[0] * ((-4.0 + (obs[5] * (-2.0 + 4.0))) * 0.0)) + obs[0])) * (obs[0] * obs[1])) + (-2.0 + (obs[0] * obs[0])))) + (-4.0 + (obs[7] * obs[3]))) + 0.0) + obs[0]) * obs[2]) + ((19.65761317212119 + obs[7]) + (((-4.0 * 0.0) + 2.0) * (0.0 * (4.0 * ((obs[5] + -2.0) * (obs[2] * obs[1]))))))) < 22.427350989004857) then: (if (17.984297735116783 < obs[5]) then: act = 1 else: act = 1) else: (if (-3.331704946669695 < obs[1]) then: act = 3 else: act = 1))
4 
(if (((((((((((obs[7] + obs[6]) * ((obs[4] + (((obs[4] + obs[3]) * 4.0) * ((-4.0 + obs[6]) + 2.0))) * obs[6])) * ((((((obs[2] + 4.0) + obs[2]) * ((obs[1] + -2.0) + (-2.0 * obs[0]))) + obs[4]) + -2.0) * -4.0)) * (-2.0 + obs[0])) * -4.0) + (-4.0 + (obs[4] * -4.0))) + 0.0) + (obs[6] + ((obs[7] + ((4.0 + obs[0]) + obs[4])) * obs[6]))) * obs[2]) + ((68.67642209539403 + obs[7]) + (((-2.0 * obs[4]) + obs[4]) * (0.0 * (4.0 * ((obs[5] + -2.0) * (obs[2] * obs[1]))))))) < 69.63789987922968) then: (if (15.005296338081939 < obs[5]) then: act = 1 else: act = 1) else: (if (0.8322930734864527 < obs[1]) then: act = 3 else: act = 1))
5 
(if (((obs[2] * (obs[2] + ((obs[5] + -2.0) * (obs[1] + ((obs[0] * obs[3]) + (0.0 + -2.0)))))) + ((80.46641063936507 + (obs[6] * ((2.0 * (obs[6] + (obs[0] + obs[3]))) * ((-4.0 + obs[1]) + (obs[3] * (obs[0] * 0.0)))))) + (((-2.0 * obs[4]) + obs[4]) * (2.0 * (-2.0 + 0.0))))) < 80.11553663967513) then: (if (23.099094299696333 < obs[5]) then: act = 1 else: act = 1) else: (if (-2.7832191932859427 < obs[1]) then: act = 3 else: act = 1))
6 
(if (((obs[2] * (obs[2] + ((obs[7] + -2.0) * (obs[4] + ((obs[0] * obs[3]) + (2.0 + -2.0)))))) + ((81.25590449475892 + obs[1]) + (((-2.0 * obs[4]) + obs[4]) * (2.0 * (-2.0 + 0.0))))) < 82.54715927956475) then: (if (20.785411135398064 < obs[5]) then: act = 1 else: act = 1) else: (if (-5.614822378161445 < obs[1]) then: act = 3 else: act = 1))
7 
(if (((2.0 + (4.0 * obs[1])) * obs[4]) < ((2.0 * ((((4.0 * (obs[0] * (4.0 * (2.0 * ((obs[3] + 4.0) + (-4.0 * 4.0)))))) * ((((2.0 * 4.0) * -2.0) * obs[4]) + (obs[3] * (-4.0 * 4.0)))) * obs[7]) + obs[2])) + (4.474899874684605 + -4.3881423181535135))) then: (if (obs[3] < ((0.0 * (obs[3] * -4.0)) + 0.9347779663811762)) then: act = 1 else: act = 1) else: (if (-4.445036818379488 < obs[1]) then: act = 3 else: act = 1))
8 
(if (((2.0 + (4.0 * obs[1])) * obs[4]) < ((2.0 * ((((4.0 * (obs[0] * (4.0 * (2.0 * ((obs[3] + 4.0) + (-4.0 * 4.0)))))) * ((((-2.0 * ((((obs[3] + obs[7]) + (obs[7] + (obs[2] + -2.0))) + obs[2]) * obs[3])) * -2.0) * obs[4]) + (obs[3] * (-4.0 * 4.0)))) * obs[7]) + obs[2])) + (4.306653494800389 + -4.006173298074788))) then: (if (obs[3] < ((0.0 * (obs[3] * -4.0)) + 1.2101515358680492)) then: act = 1 else: act = 1) else: (if (-4.434295060572764 < obs[1]) then: act = 3 else: act = 1))
9 
(if (((2.0 + (4.0 * obs[1])) * obs[4]) < ((2.0 * ((((4.0 * (obs[0] * (4.0 * (2.0 * ((obs[3] + 4.0) + (-4.0 * 4.0)))))) * ((((-2.0 * ((((obs[3] + obs[7]) + (obs[7] + (obs[2] + -2.0))) + obs[2]) * obs[3])) * -2.0) * obs[4]) + (obs[3] * (-4.0 * 4.0)))) * obs[7]) + obs[2])) + (4.306653494800389 + -4.006173298074788))) then: (if (obs[3] < ((0.0 * (obs[3] * -4.0)) + 1.2101515358680492)) then: act = 1 else: act = 1) else: (if (-4.434295060572764 < obs[1]) then: act = 3 else: act = 1))
